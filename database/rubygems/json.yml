---
- id: rubyadvisory:rubygems:json:CVE-2013-0269
  title: json Gem for Ruby multiple Remote DoS vulnerabilities
  description: |
    The JSON gem before 1.5.5, 1.6.x before 1.6.8, and 1.7.x before 1.7.7 for Ruby
    allows remote attackers to cause a denial of service (resource consumption) or
    bypass the mass assignment protection mechanism via a crafted JSON document
    that triggers the creation of arbitrary Ruby symbols or certain internal
    objects, as demonstrated by conducting a SQL injection attack against
    Ruby on Rails, aka "Unsafe Object Creation Vulnerability."
  affected_package: json
  patched_versions:
  - ">= 1.7.7"
  - "~> 1.5.5"
  - "~> 1.6.8"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2013-0269
  osvdb: 101137
  cvss_v2_score: 9.0
  disclosed_date: 2013-02-12
  created_date: 2013-02-12
  last_modified_date: 2013-02-12
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://nvd.nist.gov/vuln/detail/CVE-2013-0269
- id: rubyadvisory:rubygems:json:CVE-2020-10663
  title: json Gem for Ruby Unsafe Object Creation Vulnerability (additional fix)
  description: |
    There is an unsafe object creation vulnerability in the json gem bundled with
    Ruby. This vulnerability has been assigned the CVE identifier CVE-2020-10663.
    We strongly recommend upgrading the json gem.

    Details
    -------

    When parsing certain JSON documents, the json gem (including the one bundled
    with Ruby) can be coerced into creating arbitrary objects in the target system.

    This is the same issue as CVE-2013-0269. The previous fix was incomplete, which
    addressed JSON.parse(user_input), but didnâ€™t address some other styles of JSON
    parsing including JSON(user_input) and JSON.parse(user_input, nil).

    See CVE-2013-0269 in detail. Note that the issue was exploitable to cause a
    Denial of Service by creating many garbage-uncollectable Symbol objects, but
    this kind of attack is no longer valid because Symbol objects are now
    garbage-collectable. However, creating arbitrary objects may cause severe
    security consequences depending upon the application code.
  affected_package: json
  patched_versions:
  - ">= 2.3.0"
  package_manager: rubygems
  cve:
  - CVE-2020-10663
  disclosed_date: 2020-03-19
  created_date: 2020-03-19
  last_modified_date: 2020-03-19
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  - https://groups.google.com/forum/#!topic/ruby-security-ann/ermX1eQqqKA
  source_url: https://www.ruby-lang.org/en/news/2020/03/19/json-dos-cve-2020-10663/
- id: rubyadvisory:rubygems:json:OSVDB-101137
  title: json Gem for Ruby JSON::GenericObject Function Arbitrary Addition Creation
  description: |
    json Gem for Ruby contains a flaw in the JSON::GenericObject function. The
    issue is due to the program failing to restrict users from creating additions
    regardless of the state of create_additions. This may allow a remote attacker
    to create arbitrary additions.
  affected_package: json
  unaffected_versions:
  - "< 1.7.0"
  patched_versions:
  - ">= 1.7.7"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2013-0269
  osvdb: 101137
  cvss_v2_score: 9.0
  disclosed_date: 2013-02-04
  created_date: 2013-02-04
  last_modified_date: 2013-02-04
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/101137
- id: rubyadvisory:rubygems:json:OSVDB-101157
  title: json Gem for Ruby Data Handling Stack Buffer Overflow
  description: |
    json Gem for Ruby contains an overflow condition that is triggered as
    user-supplied input is not properly validated when handling specially crafted
    data. This may allow a remote attacker to cause a stack-based buffer
    overflow, resulting in a denial of service or potentially allowing the
    execution of arbitrary code.
  affected_package: json
  patched_versions:
  - ">= 1.1.0"
  package_manager: rubygems
  osvdb: 101157
  disclosed_date: 2007-05-21
  created_date: 2007-05-21
  last_modified_date: 2007-05-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/101157
- id: rubyadvisory:rubygems:json:OSVDB-90074
  title: Ruby on Rails JSON Gem Arbitrary Symbol Creation Remote DoS
  description: |
    Ruby on Rails contains a flaw that may allow a remote denial of service.
    The issue is due to the JSON gem being tricked in to generating Ruby symbols
    during the parsing of certain JSON documents. Since Ruby symbols are not
    garbage collected, a remote attacker can crash a users system. This also may
    allow the attacker to create arbitrary objects that may be used to bypass
    certain security mechanisms and potentially allow SQL injection attacks to
    be conducted.
  affected_package: json
  patched_versions:
  - ">= 1.7.7"
  - "~> 1.5.5"
  - "~> 1.6.8"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2013-0269
  osvdb: 90074
  cvss_v2_score: 9.0
  disclosed_date: 2013-02-11
  created_date: 2013-02-11
  last_modified_date: 2013-02-11
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/90074
- id: snykio:rubygems:json:20000
  title: Denial of Service (DoS)
  description: |+
    The [`json`][1] gem is a JSON implementation as a Ruby extension in C.
    Affected versions of this Gem contain an overflow condition. This is
    triggered when user-supplied input is not properly validated while
    handling specially crafted data. This can allow a remote attacker to
    cause a stack-based buffer overflow, resulting in a denial of service,
    or potentially allowing the [execution of arbitrary code][2].



    [1]: https://rubygems.org/gems/json
    [2]: https://snyk.io/vuln/SNYK-RUBY-JSON-20209
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: json
  vulnerable_versions:
  - "<1.1.0"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-400
  disclosed_date: 2007-05-20
  created_date: 2007-05-20
  last_modified_date: 2007-05-20
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/OSVDB-101157
  source_url: https://snyk.io/vuln/SNYK-RUBY-JSON-20000
- id: snykio:rubygems:json:20056
  title: Arbitrary Addition Creation
  description: |
    The [`json`][1] gem is a JSON implementation as a Ruby extension in C.

    Affected versions of this gem contain a vulnerability in the
    `JSON::GenericObject` function which does not restrict users from
    creating additions, regardless of the state of `create_additions`. This
    may allow a remote attacker to create arbitrary additions.



    [1]: https://rubygems.org/gems/json
  affected_package: json
  vulnerable_versions:
  - ">=1.7.0  <1.7.7"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-284
  disclosed_date: 2013-02-03
  created_date: 2013-02-03
  last_modified_date: 2013-02-03
  credit:
  - Steve Root
  references:
  - http://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  - https://groups.google.com/forum/#!original/rubyonrails-security/4_YvCpLzL58/KBTICG7b4NgJ
  source_url: https://snyk.io/vuln/SNYK-RUBY-JSON-20056
- id: snykio:rubygems:json:20060
  title: Denial of Service (DoS)
  description: |+
    The [`json`][1] gem is a JSON implementation as a Ruby extension in C.
    Affected versions of this Gem are vulnerable to Denial of Service (DoS)
    attacks and unsafe object creation vulnerabilities. When parsing certain
    JSON documents, the JSON gem tricked into creating Ruby symbols in a
    target system.



    [1]: https://rubygems.org/gems/json
    \nWhen parsing certain JSON documents, the JSON gem can be coerced in to
    creating Ruby symbols in a target system. Since Ruby symbols are not
    garbage collected, this can result in a denial of service attack.

    The same technique can be used to create objects in a target system that
    act like internal objects. These \"act alike\" objects can be used to
    bypass certain security mechanisms and can be used as a spring board for
    SQL injection attacks in Ruby on Rails.

    Impacted code looks like this:

        JSON.parse(user_input)
    {: .language-js}

    Where the `user_input` variable will have a JSON document like this:

        {"json_class":"foo"}
    {: .language-json}

    The JSON gem will attempt to look up the constant \"foo\". Looking up
    this constant will create a symbol.

    In JSON version 1.7.x, objects with arbitrary attributes can be created
    using JSON documents like this:

        {"json_class":"JSON::GenericObject","foo":"bar"}
    {: .language-json}

    This document will result in an instance of `JSON::GenericObject`, with
    the attribute \"foo\" that has the value \"bar\". Instantiating these
    objects will result in arbitrary symbol creation and in some cases can
    be used to bypass security measures.

    PLEASE NOTE: this behavior *does not change* when using `JSON.load`.
    `JSON.load` should *never* be given input from unknown sources. If you
    are processing JSON from an unknown source, *always* use `JSON.parse`.

  affected_package: json
  vulnerable_versions:
  - "<1.5.5"
  - ">=1.6  <1.6.8"
  - ">=1.7  <1.7.7"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2013-0269
  cwe:
  - CWE-400
  disclosed_date: 2013-02-10
  created_date: 2013-02-10
  last_modified_date: 2013-02-10
  credit:
  - Ben Murphy
  - Thomas Hollstegge
  references:
  - https://gist.github.com/rsierra/4943505
  - https://www.ruby-lang.org/en/news/2013/02/22/json-dos-cve-2013-0269/
  source_url: https://snyk.io/vuln/SNYK-RUBY-JSON-20060
- id: snykio:rubygems:json:20209
  title: Arbitrary Code Execution
  description: |
    The [`json`][1] gem is a JSON implementation as a Ruby extension in C.

    Affected versions of this Gem contain an overflow condition. This is
    triggered when user-supplied input is not properly validated while
    handling specially crafted data. This can allow a remote attacker to
    cause a stack-based buffer overflow, resulting in a [denial of
    service][2], or potentially allowing the execution of arbitrary code.



    [1]: https://rubygems.org/gems/json
    [2]: https://snyk.io/vuln/SNYK-RUBY-JSON-20000
  affected_package: json
  vulnerable_versions:
  - "<1.1.0"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-94
  disclosed_date: 2007-05-20
  created_date: 2007-05-20
  last_modified_date: 2007-05-20
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/OSVDB-101157
  source_url: https://snyk.io/vuln/SNYK-RUBY-JSON-20209
- id: snykio:rubygems:json:560838
  title: Denial of Service (DoS)
  description: |
    [json][1] is a JSON implementation as a Ruby extension in C

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). When parsing certain JSON documents, the json gem (including the
    one bundled with Ruby) can be coerced into creating arbitrary objects in
    the target system.

    This is the same issue as CVE-2013-0269. The previous fix was
    incomplete, which addressed `JSON.parse(user_input)`, but didnâ€™t address
    some other styles of JSON parsing including `JSON(user_input) and
    JSON.parse(user_input, nil)`.

    See [CVE-2013-0269][2] in detail.



    [1]: https://rubygems.org/gems/json
    [2]: https://snyk.io/vuln/SNYK-RUBY-JSON-20060
  affected_package: json
  vulnerable_versions:
  - "<2.3.0"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2020-10663
  cwe:
  - CWE-400
  disclosed_date: 2020-03-20
  created_date: 2020-03-19
  last_modified_date: 2020-03-19
  credit:
  - Unknown
  references:
  - https://www.ruby-lang.org/en/news/2020/03/19/json-dos-cve-2020-10663/
  source_url: https://snyk.io/vuln/SNYK-RUBY-JSON-560838
