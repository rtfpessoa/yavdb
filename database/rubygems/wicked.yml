---
- id: rubyadvisory:rubygems:wicked:CVE-2013-4413
  title: Wicked Gem for Ruby contains a flaw
  description: Wicked Gem for Ruby contains a flaw that is due to the program failing
    to properly sanitize input passed via the 'the_step' parameter upon submission
    to the render_redirect.rb script. This may allow a remote attacker to gain access
    to arbitrary files.
  affected_package: wicked
  patched_versions:
  - ">= 1.0.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4413
  osvdb: 98270
  cvss_v2_score: 5.0
  disclosed_date: 2013-10-08
  created_date: 2013-10-08
  last_modified_date: 2013-10-08
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://nvd.nist.gov/vuln/detail/CVE-2013-4413
- id: rubyadvisory:rubygems:wicked:OSVDB-98270
  title: Wicked Gem for Ruby contains a flaw
  description: Wicked Gem for Ruby contains a flaw that is due to the program failing
    to properly sanitize input passed via the 'the_step' parameter upon submission
    to the render_redirect.rb script. This may allow a remote attacker to gain access
    to arbitrary files.
  affected_package: wicked
  patched_versions:
  - ">= 1.0.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4413
  osvdb: 98270
  cvss_v2_score: 5.0
  disclosed_date: 2013-10-08
  created_date: 2013-10-08
  last_modified_date: 2013-10-08
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://www.osvdb.org/show/osvdb/98270
- id: snykio:rubygems:wicked:20111
  title: Directory Traversal
  description: |
    The \[`wicked`\] gem is a Rails engine for producing easy wizard
    controllers.

    Affected versions of this gem contain a Directory Traversal
    vulnerability. This is due to the gem failing to properly sanitize input
    passed via the `the_step` parameter upon submission to the
    `render_redirect.rb` script. This may allow a remote attacker to gain
    access to unintended files via an escaped slash character `%2e`.

    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: wicked
  vulnerable_versions:
  - "< 1.0.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4413
  cwe:
  - CWE-22
  disclosed_date: 2013-10-07
  created_date: 2013-10-07
  last_modified_date: 2013-10-07
  credit:
  - Unknown
  references:
  - https://github.com/schneems/wicked/commit/fe31bb2533fffc9d098c69ebeb7afc3b80509f53
  source_url: https://snyk.io/vuln/SNYK-RUBY-WICKED-20111
