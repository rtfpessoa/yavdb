---
- id: rubyadvisory:rubygems:geocoder:CVE-2020-7981
  title: 'Geocoder gem for Ruby contains possible SQL injection vulnerability

'
  description: 'sql.rb in Geocoder allows Boolean-based SQL injection when within_bounding_box
    is used in conjunction with untrusted sw_lat, sw_lng, ne_lat, or ne_lng data.

'
  affected_package: geocoder
  patched_versions:
  - ">= 1.6.1"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2020-7981
  cvss_v2_score: 7.5
  cvss_v3_score: 9.8
  disclosed_date: 2020-01-25
  created_date: 2020-01-25
  last_modified_date: 2020-01-25
  credit:
  - Rubysec
  references:
  - https://github.com/alexreisner/geocoder/commit/dcdc3d8675411edce3965941a2ca7c441ca48613
  - https://github.com/alexreisner/geocoder/compare/v1.6.0...v1.6.1
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7981
- id: snykio:rubygems:geocoder:543302
  title: SQL Injection
  description: |
    [geocoder][1] is a package that provides object geocoding (by street or
    IP address), reverse geocoding (coordinates to street address), distance
    queries for ActiveRecord and Mongoid, result caching, and more.

    Affected versions of this package are vulnerable to SQL Injection.
    `sql.rb` in Geocoder allows a Boolean-based SQL injection when
    `within_bounding_box` is used in conjunction with untrusted `sw_lat`,
    `sw_lng`, `ne_lat`, or `ne_lng` data.



    [1]: http://www.rubygeocoder.com/
  affected_package: geocoder
  vulnerable_versions:
  - "<1.6.1"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2020-7981
  cwe:
  - CWE-89
  disclosed_date: 2020-01-22
  created_date: 2020-01-26
  last_modified_date: 2020-01-26
  credit:
  - Unknown
  references:
  - https://github.com/alexreisner/geocoder/commit/dcdc3d8675411edce3965941a2ca7c441ca48613
  source_url: https://snyk.io/vuln/SNYK-RUBY-GEOCODER-543302
