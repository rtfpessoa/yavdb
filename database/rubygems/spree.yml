---
- id: rubyadvisory:rubygems:spree:OSVDB-119205
  title: Spree API Information Disclosure CSRF
  description: |
    Spree contains a flaw in the API as HTTP requests do not require multiple
    steps, explicit confirmation, or a unique token when performing certain
    sensitive actions. By tricking a user into following a specially crafted
    link, a context-dependent attacker can perform a Cross-Site Request Forgery
    (CSRF / XSRF) attack causing the victim to disclose potentially sensitive
    information to attackers.
  affected_package: spree
  patched_versions:
  - ">= 3.0.0.rc4"
  - "~> 2.2.10"
  - "~> 2.3.8"
  - "~> 2.4.5"
  package_manager: rubygems
  osvdb: 119205
  disclosed_date: 2015-03-05
  created_date: 2015-03-05
  last_modified_date: 2015-03-05
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-updates-2015-3-3
- id: rubyadvisory:rubygems:spree:OSVDB-125699
  title: |
    Spree RABL templates rendering allows Arbitrary Code Execution and File
    Disclosure
  description: |
    Spree contains a flaw where the rendering of arbitrary RABL templates allows
    for execution arbitrary files on the host system, as well as disclosing the
    existence of files on the system. This is a different issue than
    OSVDB-125701.
  affected_package: spree
  patched_versions:
  - ">= 3.0.3"
  - "~> 2.2.13"
  - "~> 2.3.12"
  - "~> 2.4.9"
  package_manager: rubygems
  osvdb: 125699
  disclosed_date: 2015-07-28
  created_date: 2015-07-28
  last_modified_date: 2015-07-28
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-updates-2015-7-28
- id: rubyadvisory:rubygems:spree:OSVDB-125701
  title: |
    Spree RABL templates rendering allows Arbitrary Code Execution and File
    Disclosure
  description: |
    Spree contains a flaw where the rendering of arbitrary RABL templates allows
    for execution arbitrary files on the host system, as well as disclosing the
    existence of files on the system.
  affected_package: spree
  patched_versions:
  - ">= 3.0.2"
  - "~> 2.2.12"
  - "~> 2.3.11"
  - "~> 2.4.8"
  package_manager: rubygems
  osvdb: 125701
  disclosed_date: 2015-07-20
  created_date: 2015-07-20
  last_modified_date: 2015-07-20
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-updates-2015-7-20
- id: rubyadvisory:rubygems:spree:OSVDB-125712
  title: 'Product Scopes could allow for unauthenticated remote command execution

'
  description: |
    Product Scopes could allow for unauthenticated remote command execution.
    This was corrected by removing conditions_any scope and use ARel query
    building instead.
  affected_package: spree
  patched_versions:
  - ">= 1.1.2"
  - "~> 0.11.4"
  - "~> 0.70.6"
  - "~> 1.0.5"
  package_manager: rubygems
  osvdb: 125712
  disclosed_date: 2012-07-02
  created_date: 2012-07-02
  last_modified_date: 2012-07-02
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-issue-all-versions
- id: rubyadvisory:rubygems:spree:OSVDB-125713
  title: 'Potential XSS vulnerability related to the analytics dashboard

'
  description: |
    Spree has a flaw in its analytics dashboard where keywords are not escaped,
    leading to potential XSS.
  affected_package: spree
  patched_versions:
  - ">= 1.1.2"
  - "~> 0.11.4"
  - "~> 0.70.6"
  - "~> 1.0.5"
  package_manager: rubygems
  osvdb: 125713
  disclosed_date: 2012-07-02
  created_date: 2012-07-02
  last_modified_date: 2012-07-02
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-issue-all-versions
- id: rubyadvisory:rubygems:spree:OSVDB-69098
  title: |
    Spree Multiple Script JSON Request Validation Weakness Remote Information
    Disclosure
  description: |
    Spree contains a flaw that may lead to an unauthorized information
    disclosure. The issue is triggered when the application exchanges data using
    the JSON service without validating requests, which will disclose sensitive
    user and order information to a context-dependent attacker when a logged-in
    user visits a crafted website.
  affected_package: spree
  patched_versions:
  - ">= 0.30.0"
  - "~> 0.11.2"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2010-3978
  osvdb: 69098
  cvss_v2_score: 5.0
  disclosed_date: 2010-11-02
  created_date: 2010-11-02
  last_modified_date: 2010-11-02
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/json-hijacking-vulnerability
- id: rubyadvisory:rubygems:spree:OSVDB-73751
  title: Spree Content Controller Unspecified Arbitrary File Disclosure
  description: |
    Spree Gem for Ruby would allow a user to request a specially crafted URL and
    expose arbitrary files on the server
  affected_package: spree
  patched_versions:
  - ">= 0.50.1"
  package_manager: rubygems
  osvdb: 73751
  disclosed_date: 2011-04-19
  created_date: 2011-04-19
  last_modified_date: 2011-04-19
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-fixes
- id: rubyadvisory:rubygems:spree:OSVDB-76011
  title: |
    Spree Search ProductScope Class search[send][] Parameter Arbitrary Command
    Execution
  description: |
    The ProductScope class fails to properly sanitize user-supplied input via the
    'search[send][]' parameter resulting in arbitrary command execution. With a
    specially crafted request, a remote attacker can potentially cause arbitrary
    command execution.
  affected_package: spree
  patched_versions:
  - ">= 0.60.2"
  package_manager: rubygems
  osvdb: 76011
  disclosed_date: 2011-10-05
  created_date: 2011-10-05
  last_modified_date: 2011-10-05
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/remote-command-product-group
- id: rubyadvisory:rubygems:spree:OSVDB-81505
  title: 'Spree Hash Restriction Weakness URL Parsing Order State Value Manipulation

'
  description: |
    Spree contains a hash restriction weakness that occurs when parsing a
    modified URL. This may allow an attacker to manipulate order state values.
  affected_package: spree
  patched_versions:
  - ">= 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7310
  osvdb: 81505
  cvss_v2_score: 5.0
  disclosed_date: 2008-09-22
  created_date: 2008-09-22
  last_modified_date: 2008-09-22
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-vulnerability-mass-assignment
- id: rubyadvisory:rubygems:spree:OSVDB-81506
  title: |
    Spree Hardcoded config.action_controller_session Hash Value Cryptographic
    Protection Weakness
  description: |
    Spree contains a hardcoded flaw related to the
    config.action_controller_session hash value. This may allow an attacker to
    more easily bypass cryptographic protection.
  affected_package: spree
  patched_versions:
  - ">= 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7311
  osvdb: 81506
  cvss_v2_score: 5.0
  disclosed_date: 2008-08-12
  created_date: 2008-08-12
  last_modified_date: 2008-08-12
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-vulernability-session-cookie-store
- id: rubyadvisory:rubygems:spree:OSVDB-90865
  title: |
    Spree app/models/spree/user.rb Mass Role Assignment Remote Privilege
    Escalation
  description: |
    Spree contains a flaw that leads to unauthorized privileges being gained. The
    issue is triggered as certain input related to mass role assignment in
    app/models/spree/user.rb is not properly verified before being used to update
    a user. This may allow a remote attacker to assign arbitrary roles and gain
    elevated administrative privileges.
  affected_package: spree
  patched_versions:
  - ">= 1.3.0"
  - "~> 1.1.6"
  - "~> 1.2.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-2506
  osvdb: 90865
  cvss_v2_score: 4.0
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: rubyadvisory:rubygems:spree:OSVDB-91216
  title: |
    Spree promotion_actions_controller.rb promotion_action Parameter Arbitrary
    Ruby Object Instantiation Command Execution
  description: |
    Spree contains a flaw that is triggered when handling input passed via the
    'promotion_action' parameter to promotion_actions_controller.rb. This may
    allow a remote authenticated attacker to instantiate arbitrary Ruby objects
    and potentially execute arbitrary commands.
  affected_package: spree
  patched_versions:
  - ">= 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  osvdb: 91216
  cvss_v2_score: 4.3
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: rubyadvisory:rubygems:spree:OSVDB-91217
  title: |
    Spree payment_methods_controller.rb payment_method Parameter Arbitrary Ruby
    Object Instantiation Command Execution
  description: |
    Spree contains a flaw that is triggered when handling input passed via the
    'payment_method' parameter to payment_methods_controller.rb. This may allow
    a remote authenticated attacker to instantiate arbitrary Ruby objects and
    potentially execute arbitrary commands.
  affected_package: spree
  patched_versions:
  - ">= 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  osvdb: 91217
  cvss_v2_score: 4.3
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: rubyadvisory:rubygems:spree:OSVDB-91218
  title: |
    Spree promotions_controller.rb calculator_type Parameter Arbitrary Ruby
    Object Instantiation Command Execution
  description: |
    Spree contains a flaw that is triggered when handling input passed via the
    'calculator_type' parameter to promotions_controller.rb. This may allow a
    remote authenticated attacker to instantiate arbitrary Ruby objects and
    potentially execute arbitrary commands.
  affected_package: spree
  patched_versions:
  - ">= 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  osvdb: 91218
  cvss_v2_score: 4.3
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: rubyadvisory:rubygems:spree:OSVDB-91219
  title: |
    Spree promotion_rules_controller.rb promotion_rule Parameter Arbitrary Ruby
    Object Instantiation Command Execution
  description: |
    Spree contains a flaw that is triggered when handling input passed via the
    'promotion_rule' parameter to promotion_rules_controller.rb. This may allow
    a remote authenticated attacker to instantiate arbitrary Ruby objects and
    potentially execute arbitrary commands.
  affected_package: spree
  patched_versions:
  - ">= 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  osvdb: 91219
  cvss_v2_score: 4.3
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: snykio:rubygems:spree:1020061
  title: Authentication Bypass
  description: |+
    Affected versions of this package are vulnerable to Authentication
    Bypass. The perpetrator who previously obtained an old expired user
    token could use it to access Storefront API v2 endpoints.

  affected_package: spree
  vulnerable_versions:
  - ">=3.7.0  <3.7.11"
  - ">=4.0.0  <4.0.4"
  - ">=4.1.0  <4.1.11"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2020-15269
  cwe:
  - CWE-287
  disclosed_date: 2020-10-20
  created_date: 2020-10-21
  last_modified_date: 2020-10-21
  credit:
  - Unknown
  references:
  - https://github.com/spree/spree/commit/e43643abfe51f54bd9208dd02298b366e9b9a847
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-1020061
- id: snykio:rubygems:spree:20003
  title: Cryptographic Protection Bypass
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.
    Spree contains a hardcoded flaw related to the
    `config.action_controller_session` hash value. This may allow an
    attacker to more easily bypass cryptographic protection.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7311
  cwe:
  - CWE-284
  disclosed_date: 2008-08-11
  created_date: 2008-08-11
  last_modified_date: 2008-08-11
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/CVE-2008-7311
  - https://spreecommerce.com/blog/security-vulernability-session-cookie-store
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20003
- id: snykio:rubygems:spree:20005
  title: Improperly Controlled Model Modification
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a hash restriction weakness that occurs when parsing a
    modified URL. This may allow an attacker to manipulate order state
    values. The `Order` model was not using `attr_accessible` to protect its
    attributes from a potential mass assignment exploit.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7310
  cwe:
  - CWE-915
  disclosed_date: 2008-09-21
  created_date: 2008-09-21
  last_modified_date: 2008-09-21
  credit:
  - Eric Chapweske
  references:
  - http://lesseverything.com/blog/use-attr_protected-or-we-will-hack-you/
  - http://rubysec.com/advisories/CVE-2008-7310
  - https://spreecommerce.com/blog/security-vulnerability-mass-assignment
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20005
- id: snykio:rubygems:spree:20011
  title: Information Exposure
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that may lead to an unauthorized information
    disclosure. The issue is triggered when the application exchanges data
    using the JSON service without validating requests, which will disclose
    sensitive user and order information to a context-dependent attacker
    when a logged-in user visits a crafted website.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.11.2"
  - "< 0.30.0  >= 0.12"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2010-3978
  cwe:
  - CWE-200
  disclosed_date: 2010-11-01
  created_date: 2010-11-01
  last_modified_date: 2010-11-01
  credit:
  - Gabriel Quadros
  references:
  - http://rubysec.com/advisories/CVE-2010-3978
  - https://groups.google.com/forum/#!search/CVE-2010-3978/mailing.unix.bugtraq/jG-mO9_x-78/utUoVe-Ujj8J
  - https://spreecommerce.com/blog/json-hijacking-vulnerability
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20011
- id: snykio:rubygems:spree:20014
  title: Arbitrary File Disclosure
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Vulnerable versions of the gem allow an attacker to request a specially
    crafted URL and expose arbitrary files on the server.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.50.1"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2011-04-18
  created_date: 2011-04-18
  last_modified_date: 2011-04-18
  credit:
  - John Hartzler
  references:
  - http://rubysec.com/advisories/OSVDB-73751
  - https://spreecommerce.com/blog/security-fixes
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20014
- id: snykio:rubygems:spree:20019
  title: Arbitrary Command Execution
  description: |+
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.



    [1]: https://rubygems.org/gems/spree
    \nThe `ProductScope` class fails to properly sanitize user-supplied input
    via the `search[send][]` parameter resulting in arbitrary command
    execution. With a specially crafted request, a remote attacker can
    potentially cause arbitrary command execution.

  affected_package: spree
  vulnerable_versions:
  - "< 0.60.2"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-77
  disclosed_date: 2011-10-04
  created_date: 2011-10-04
  last_modified_date: 2011-10-04
  credit:
  - joernchen
  references:
  - http://rubysec.com/advisories/OSVDB-76011
  - https://github.com/spree/spree/commit/440d7c87a2ded2736142f768f7a5c9f47e35890b
  - https://spreecommerce.com/blog/remote-command-product-group
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20019
- id: snykio:rubygems:spree:20033
  title: Cross-site Scripting (XSS)
  description: |+
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree has a flaw in its analytics dashboard where keywords are not
    escaped, leading to potential XSS.



    [1]: https://rubygems.org/gems/spree
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: spree
  vulnerable_versions:
  - "< 0.11.4"
  - "< 0.70.6  >= 0.12"
  - "< 1.0.5  >= 0.71"
  - "< 1.1.2  >= 1.1"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-79
  disclosed_date: 2012-07-01
  created_date: 2012-07-01
  last_modified_date: 2012-07-01
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/OSVDB-125713
  - https://spreecommerce.com/blog/security-issue-all-versions
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20033
- id: snykio:rubygems:spree:20034
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.
    Product Scopes could allow for unauthenticated remote command execution.
    This was corrected by removing conditions\_any scope and use ARel query
    building instead.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.11.4"
  - "< 0.70.6  >= 0.12"
  - "< 1.0.5  >= 0.71"
  - "< 1.1.2  >= 1.1"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-77
  disclosed_date: 2012-07-01
  created_date: 2012-07-01
  last_modified_date: 2012-07-01
  credit:
  - joernchen
  references:
  - http://rubysec.com/advisories/OSVDB-125712
  - https://spreecommerce.com/blog/security-issue-all-versions
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20034
- id: snykio:rubygems:spree:20067
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that is triggered when handling input passed via
    the `calculator_type` parameter to `promotions_controller.rb`. This may
    allow a remote authenticated attacker to instantiate arbitrary Ruby
    objects and potentially execute arbitrary commands.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  cwe:
  - CWE-77
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/OSVDB-91218
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20067
- id: snykio:rubygems:spree:20068
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that is triggered when handling input passed via
    the `payment_method` parameter to `payment_methods_controller.rb`. This
    may allow a remote authenticated attacker to instantiate arbitrary Ruby
    objects and potentially execute arbitrary commands.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  cwe:
  - CWE-77
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/CVE-2013-1656
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20068
- id: snykio:rubygems:spree:20069
  title: Privilege Escalation
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that leads to unauthorized privileges being
    gained. The issue is triggered as certain input related to mass role
    assignment in `app/models/spree/user.rb` is not properly verified before
    being used to update a user. This may allow a remote attacker to assign
    arbitrary roles and gain elevated administrative privileges.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 1.1.6"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-2506
  cwe:
  - CWE-265
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/CVE-2013-2506
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20069
- id: snykio:rubygems:spree:20073
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that is triggered when handling input passed via
    the `promotion_rule` parameter to `promotion_rules_controller.rb`. This
    may allow a remote authenticated attacker to instantiate arbitrary Ruby
    objects and potentially execute arbitrary commands.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  cwe:
  - CWE-77
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/OSVDB-91219
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20073
- id: snykio:rubygems:spree:20075
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that is triggered when handling input passed via
    the `promotion_action` parameter to `promotion_actions_controller.rb`.
    This may allow a remote authenticated attacker to instantiate arbitrary
    Ruby objects and potentially execute arbitrary commands.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  cwe:
  - CWE-77
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/CVE-2013-1656
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20075
- id: snykio:rubygems:spree:20235
  title: Arbitrary Code Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw where the rendering of arbitrary RABL templates
    allows for execution arbitrary files on the host system, as well as
    disclosing the existence of files on the system.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.2.12"
  - "< 2.3.11  >= 2.3"
  - "< 2.4.8  >= 2.4"
  - "< 3.0.2  >= 2.5"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-07-19
  created_date: 2015-07-19
  last_modified_date: 2015-07-19
  credit:
  - John Hawthorn
  references:
  - http://rubysec.com/advisories/OSVDB-125701
  - https://spreecommerce.com/blog/security-updates-2015-7-20
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20235
- id: snykio:rubygems:spree:20237
  title: Arbitrary Code Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw where the rendering of arbitrary RABL templates
    allows for execution arbitrary files on the host system, as well as
    disclosing the existence of files on the system. This is a different
    issue than [OSVDB-125701][2].



    [1]: https://rubygems.org/gems/spree
    [2]: https://snyk.io/vuln/SNYK-RUBY-SPREE-20235
  affected_package: spree
  vulnerable_versions:
  - "< 2.2.13"
  - "< 2.3.12  >= 2.3"
  - "< 2.4.9  >= 2.4"
  - "< 3.0.3  >= 2.5"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-07-27
  created_date: 2015-07-27
  last_modified_date: 2015-07-27
  credit:
  - John Hawthorn
  references:
  - http://rubysec.com/advisories/OSVDB-125699
  - https://spreecommerce.com/blog/security-updates-2015-7-28
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20237
- id: snykio:rubygems:spree:20360
  title: Cross Site Request Forgery
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw in the API as HTTP requests do not require
    multiple steps, explicit confirmation, or a unique token when performing
    certain sensitive actions. By tricking a user into following a specially
    crafted link, a context-dependent attacker can perform a Cross-site
    Request Forgery (CSRF / XSRF) attack causing the victim to disclose
    potentially sensitive information to attackers.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.2.10"
  - "< 2.3.8  >= 2.3"
  - "< 2.4.5  >= 2.4"
  - "< 3.0.0.rc4  >= 2.5"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-03-04
  created_date: 2015-03-04
  last_modified_date: 2015-03-04
  credit:
  - Egor Homakov
  references:
  - http://rubysec.com/advisories/OSVDB-119205
  - https://spreecommerce.com/blog/security-updates-2015-3-3
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20360
