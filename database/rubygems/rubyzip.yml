---
- id: rubyadvisory:rubygems:rubyzip:CVE-2017-5946
  title: Directory traversal vulnerability in rubyzip
  description: |
    The Zip::File component in the rubyzip gem before 1.2.1 for Ruby has a
    directory traversal vulnerability. If a site allows uploading of .zip files,
    an attacker can upload a malicious file that uses "../" pathname substrings to
    write arbitrary files to the filesystem.
  affected_package: rubyzip
  patched_versions:
  - ">= 1.2.1"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-5946
  cvss_v2_score: 7.5
  cvss_v3_score: 9.8
  disclosed_date: 2017-02-27
  created_date: 2017-02-27
  last_modified_date: 2017-02-27
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/rubyzip/rubyzip/issues/315
- id: rubyadvisory:rubygems:rubyzip:CVE-2018-1000544
  title: Directory Traversal in rubyzip
  description: |
    rubyzip version 1.2.1 and earlier contains a Directory Traversal vulnerability
    in Zip::File component that can result in write arbitrary files to the filesystem.
    If a site allows uploading of .zip files, an attacker can upload a malicious file
    which contains symlinks or files with absolute pathnames "../" to write arbitrary
    files to the filesystem.
  affected_package: rubyzip
  patched_versions:
  - ">= 1.2.2"
  package_manager: rubygems
  cve:
  - CVE-2018-1000544
  disclosed_date: 2018-06-14
  created_date: 2018-06-14
  last_modified_date: 2018-06-14
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  - https://security-tracker.debian.org/tracker/CVE-2018-1000544
  source_url: https://github.com/rubyzip/rubyzip/issues/369
- id: rubyadvisory:rubygems:rubyzip:CVE-2019-16892
  title: Denial of Service in rubyzip ("zip bombs")
  description: |
    In Rubyzip before 1.3.0, a crafted ZIP file can bypass application
    checks on ZIP entry sizes because data about the uncompressed size
    can be spoofed. This allows attackers to cause a denial of service
    (disk consumption).
  affected_package: rubyzip
  patched_versions:
  - ">= 1.3.0"
  package_manager: rubygems
  cve:
  - CVE-2019-16892
  disclosed_date: 2019-09-12
  created_date: 2019-09-12
  last_modified_date: 2019-09-12
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/rubyzip/rubyzip/pull/403
- id: snykio:rubygems:rubyzip:20336
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[`rubyzip`][1] is rubyzip is a ruby module for reading and writing
    zip\nfiles.\n\nAffected versions of the package are vulnerable to Arbitrary File
    Write\nvia Archive Extraction (AKA \\\"Zip Slip\\\").\n\nIt is exploited using
    a specially crafted zip archive, that holds path\ntraversal filenames. When exploited,
    a filename in a malicious archive\nis concatenated to the target extraction directory,
    which results in the\nfinal path ending up outside of the target folder. For instance,
    a zip\nmay hold a file with a \\\"../../file.exe\\\" location and thus break out
    of\nthe target folder. If an executable or a configuration file is\noverwritten
    with a file containing malicious code, the problem can turn\ninto an arbitrary
    code execution issue quite easily.\n\nThe following is an example of a zip archive
    with one benign file and\none malicious file. Extracting the malicous file will
    result in\ntraversing out of the target folder, ending up in `/root/.ssh/`\noverwriting
    the `authorized_keys` file:\n\n    \n    +2018-04-15 22:04:29 ..... 19 19 good.txt\n
    \   \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n\n\n[1]:
    https://rubygems.org/gems/rubyzip\n"
  affected_package: rubyzip
  vulnerable_versions:
  - "<1.2.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2017-5946
  cwe:
  - CWE-29
  disclosed_date: 2017-02-03
  created_date: 2017-03-06
  last_modified_date: 2017-03-06
  credit:
  - ecneladis
  references:
  - https://github.com/rubyzip/rubyzip/commit/ce4208fdecc2ad079b05d3c49d70fe6ed1d07016
  - https://github.com/rubyzip/rubyzip/issues/315
  - https://github.com/snyk/zip-slip-vulnerability
  - https://snyk.io/research/zip-slip-vulnerability
  source_url: https://snyk.io/vuln/SNYK-RUBY-RUBYZIP-20336
- id: snykio:rubygems:rubyzip:22039
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[rubyzip][1] is a ruby module for reading and writing zip files.\n\nAffected
    versions of the package are vulnerable to Arbitrary File Write\nvia Archive Extraction
    (AKA \\\"Zip Slip\\\").\n\nIt is exploited using a specially crafted zip archive,
    that holds path\ntraversal filenames. When exploited, a filename in a malicious
    archive\nis concatenated to the target extraction directory, which results in
    the\nfinal path ending up outside of the target folder. For instance, a zip\nmay
    hold a file with a \\\"../../file.exe\\\" location and thus break out of\nthe
    target folder. If an executable or a configuration file is\noverwritten with a
    file containing malicious code, the problem can turn\ninto an arbitrary code execution
    issue quite easily.\n\nThe following is an example of a zip archive with one benign
    file and\none malicious file. Extracting the malicous file will result in\ntraversing
    out of the target folder, ending up in `/root/.ssh/`\noverwriting the `authorized_keys`
    file:\n\n    \n    +2018-04-15 22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15
    22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n**NOTE** This
    vulnerability is due to a partial fix in\n[CVE-2017-5946][2]\n\n\n\n[1]: https://rubygems.org/gems/rubyzip\n[2]:
    https://app.snyk.io/vuln/SNYK-RUBY-RUBYZIP-20336\n"
  affected_package: rubyzip
  vulnerable_versions:
  - "<1.2.2"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2018-1000544
  cwe:
  - CWE-22
  disclosed_date: 2018-06-13
  created_date: 2018-06-28
  last_modified_date: 2018-06-28
  credit:
  - Unknown
  references:
  - https://github.com/rubyzip/rubyzip/commit/d07b13a6cf0a413e010c48879aebd9576bfb5f68
  - https://github.com/rubyzip/rubyzip/issues/369
  source_url: https://snyk.io/vuln/SNYK-RUBY-RUBYZIP-22039
- id: snykio:rubygems:rubyzip:469156
  title: Denial of Service (DoS)
  description: |+
    [rubyzip][1] is a ruby module for reading and writing zip files.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). It is possible for a crafted ZIP file to bypass application
    checks on ZIP entry sizes because data about the uncompressed size can
    be spoofed. This allows attackers to cause a denial of service through
    maximum disk consumption. By default, the `validate_entry_sizes` option
    should be set to true, so that callers can trust an entry\'s reported
    size when using `extract`.



    [1]: https://github.com/rubyzip/rubyzip
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: rubyzip
  vulnerable_versions:
  - "<1.3.0"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2019-16892
  cwe:
  - CWE-776
  disclosed_date: 2019-09-25
  created_date: 2019-09-25
  last_modified_date: 2019-09-25
  credit:
  - Unknown
  references:
  - https://github.com/rubyzip/rubyzip/pull/403
  source_url: https://snyk.io/vuln/SNYK-RUBY-RUBYZIP-469156
