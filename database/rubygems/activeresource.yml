---
- id: rubyadvisory:rubygems:activeresource:CVE-2020-8151
  title: activeresource Gem for Ruby lib/active_resource/base.rb element_path Lack
    of Encoding
  description: |
    activeresource contains a lack of encoding flaw in the element_path function of
    lib/active_resource/base.rb.

    There is an issue with the way Active Resource encodes data before querying the back end server.  This encoding mechanism can allow specially crafted requests to possibly access data that may not be expected.

    Impacted code will look something like this:

    ```
    require 'activeresource'

    class Test < ActiveResource::Base
      self.site = 'http://127.0.0.1:3000'
    end

    Test.exists?(untrusted_user_input)
    ```

    Where untrusted user input is passed to an Active Resource model.  Specially crafted untrusted input can cause Active Resource to access data in an unexpected way and possibly leak information.

    Workarounds
    -------------

    For those that can't upgrade, the following monkey patch can be applied:

    ```
    module ActiveResource
     class Base
       class << self
         def element_path(id, prefix_options = {}, query_options = nil)
           check_prefix_options(prefix_options)

           prefix_options, query_options = split_options(prefix_options) if query_options.nil?
           "#{prefix(prefix_options)}#{collection_name}/#{URI.encode_www_form_component(id.to_s)}#{format_extension}#{query_string(query_options)}"
         end
       end
     end
    end
    ```
  affected_package: activeresource
  patched_versions:
  - ">= 5.1.1"
  package_manager: rubygems
  cve:
  - CVE-2020-8151
  disclosed_date: 2020-05-05
  created_date: 2020-05-05
  last_modified_date: 2020-05-05
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://groups.google.com/forum/#!topic/rubyonrails-security/pktoF4VmiM8
- id: rubyadvisory:rubygems:activeresource:OSVDB-95749
  title: activeresource Gem for Ruby lib/active_resource/connection.rb request Function
    Multiple Variable Format String
  description: |
    activeresource contains a format string flaw in the request function of
    lib/active_resource/connection.rb. The issue is triggered as format string
    specifiers (e.g. %s and %x) are not properly sanitized in user-supplied input
    when passed via the 'result.code' and 'result.message' variables. This may
    allow a remote attacker to cause a denial of service or potentially execute
    arbitrary code.
  affected_package: activeresource
  patched_versions:
  - ">= 2.2.0"
  package_manager: rubygems
  osvdb: 95749
  disclosed_date: 2008-08-15
  created_date: 2008-08-15
  last_modified_date: 2008-08-15
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/95749
- id: snykio:rubygems:activeresource:20004
  title: Arbitrary Code Injection
  description: |
    [`activeresource`][1] enables you to wrap your RESTful web app with Ruby
    classes and work with them like Active Record models. Affected versions
    of this Gem are vulnerable to Improper Control of Generation of Code
    (Code Injection) Attacks.



    [1]: https://rubygems.org/gems/activeresource
  affected_package: activeresource
  vulnerable_versions:
  - "<2.2.0"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-94
  disclosed_date: 2008-08-14
  created_date: 2008-08-14
  last_modified_date: 2008-08-14
  credit:
  - Unknown
  references:
  - http://osvdb.org/show/osvdb/95749
  - http://rubysec.com/advisories/OSVDB-95749
  source_url: https://snyk.io/vuln/SNYK-RUBY-ACTIVERESOURCE-20004
- id: snykio:rubygems:activeresource:568275
  title: Information Exposure
  description: |
    [activeresource][1] is a library to wrap your RESTful web app with Ruby
    classes and work with them like Active Record models.

    Affected versions of this package are vulnerable to Information
    Exposure. There is an issue with the way Active Resource encodes data
    before querying the back end server. This encoding mechanism can allow
    specially crafted requests to possibly access data that may not be
    expected.



    [1]: https://rubygems.org/gems/activeresource
  affected_package: activeresource
  vulnerable_versions:
  - "<5.1.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2020-8151
  cwe:
  - CWE-200
  disclosed_date: 2020-05-06
  created_date: 2020-05-06
  last_modified_date: 2020-05-06
  credit:
  - Unknown
  references:
  - https://groups.google.com/forum/#!topic/rubyonrails-security/pktoF4VmiM8
  source_url: https://snyk.io/vuln/SNYK-RUBY-ACTIVERESOURCE-568275
