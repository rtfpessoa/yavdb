---
- id: ossindex:nuget:log4net:314716
  title: "[CVE-2006-0743]  Uncontrolled Format String"
  description: Format string vulnerability in LocalSyslogAppender in Apache log4net
    1.2.9 might allow remote attackers to cause a denial of service (memory corruption
    and termination) via unknown vectors.
  affected_package: log4net
  vulnerable_versions:
  - 1.2.9
  - 1.2.9_beta
  package_manager: nuget
  cve:
  - CVE-2006-0743
  disclosed_date: 2006-03-09
  created_date: 2006-03-09
  last_modified_date: 2017-07-20
  credit:
  - OSSIndex
  references:
  - http://issues.apache.org/jira/browse/LOG4NET-67
  - http://secunia.com/advisories/19241
  - http://secunia.com/advisories/22932
  - http://www.novell.com/linux/security/advisories/2006_26_sr.html
  - http://www.osvdb.org/23905
  - http://www.securityfocus.com/bid/17095
  - http://www.vupen.com/english/advisories/2006/0955
  - http://xforce.iss.net/xforce/xfdb/25196
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/25196
  source_url: https://ossindex.net/resource/package/7098693724/vulnerabilities
- id: snykio:nuget:log4net:568897
  title: XML External Entity (XXE)
  description: |+
    Affected versions of this package are vulnerable to XML External Entity
    (XXE). It does not disable XML external entities when parsing log4net
    configuration files. This could allow for XXE-based attacks in
    applications that accept arbitrary configuration files from users.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: log4net
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: nuget
  cve:
  - CVE-2018-1285
  cwe:
  - CWE-611
  disclosed_date: 2020-05-10
  created_date: 2020-05-12
  last_modified_date: 2020-05-12
  credit:
  - Unknown
  references:
  - https://issues.apache.org/jira/browse/LOG4NET-575
  - https://lists.apache.org/thread.html/reab1c277c95310bad1038255e0757857b2fbe291411b4fa84552028a%40%3Cdev.logging.apache.org%3E
  source_url: https://snyk.io/vuln/SNYK-DOTNET-LOG4NET-568897
