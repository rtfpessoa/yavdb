---
- id: snykio:maven:net.lingala.zip4j:zip4j:1011359
  title: Insecure Randomness
  description: |
    [net.lingala.zip4j:zip4j][1] is an open source java library to handle
    zip files.

    Affected versions of this package are vulnerable to Insecure Randomness.
    Both `StandardEncrypter` and `AES encrypter` uses `j.l.Random` to
    generate randomness for encryption operations instead of `SecureRandom`.



    [1]: https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j
  affected_package: net.lingala.zip4j:zip4j
  vulnerable_versions:
  - "< 2.6.3"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-330
  disclosed_date: 2020-09-21
  created_date: 2020-10-07
  last_modified_date: 2020-10-07
  credit:
  - gstanchev
  references:
  - https://github.com/srikanth-lingala/zip4j/commit/613279a7843045d180b6e5b0d64bc682178b3f5a
  - https://github.com/srikanth-lingala/zip4j/issues/241
  source_url: https://snyk.io/vuln/SNYK-JAVA-NETLINGALAZIP4J-1011359
- id: snykio:maven:net.lingala.zip4j:zip4j:31679
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[net.lingala.zip4j:zip4j][1] is a open source java library to handle
    zip\nfiles.\n\nAffected versions of this package are vulnerable to Arbitrary File
    Write\nvia Archive Extraction (Zip Slip). Successful exploitation of this\nvulnerability
    can result in remote command execution.\n\n\n\n[1]: https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: net.lingala.zip4j:zip4j
  vulnerable_versions:
  - ">= 0 < 1.3.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1002202
  cwe:
  - CWE-29
  disclosed_date: 2018-04-17
  created_date: 2018-05-31
  last_modified_date: 2018-05-31
  credit:
  - Snyk Security research Team
  references:
  - https://github.com/snyk/zip-slip-vulnerability
  - https://snyk.io/research/zip-slip-vulnerability
  source_url: https://snyk.io/vuln/SNYK-JAVA-NETLINGALAZIP4J-31679
