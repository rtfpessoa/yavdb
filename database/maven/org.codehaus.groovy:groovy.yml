---
- id: ossindex:maven:org.codehaus.groovy:groovy:7149506119
  title: '[CVE-2015-3253]  Improper Neutralization of Special Elements in Output Used
    by a Downstream Component ("Injection")'
  description: The MethodClosure class in runtime/MethodClosure.java in Apache Groovy
    1.7.0 through 2.4.3 allows remote attackers to execute arbitrary code or cause
    a denial of service via a crafted serialized object.
  affected_package: org.codehaus.groovy:groovy
  vulnerable_versions:
  - 1.7.0
  - 1.7.1
  - 1.7.10
  - 1.7.11
  - 1.7.2
  - 1.7.3
  - 1.7.4
  - 1.7.5
  - 1.7.6
  - 1.7.7
  - 1.7.8
  - 1.7.9
  - 1.8.0
  - 1.8.1
  - 1.8.2
  - 1.8.3
  - 1.8.4
  - 1.8.5
  - 1.8.6
  - 1.8.7
  - 1.8.8
  - 1.8.9
  - 1.9.0
  - 2.0.0
  - 2.0.1
  - 2.0.2
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.1.0
  - 2.1.1
  - 2.1.2
  - 2.1.3
  - 2.1.4
  - 2.1.5
  - 2.1.6
  - 2.1.7
  - 2.1.8
  - 2.1.9
  - 2.2.0
  - 2.2.1
  - 2.2.2
  - 2.3.0
  - 2.3.1
  - 2.3.10
  - 2.3.11
  - 2.3.2
  - 2.3.3
  - 2.3.4
  - 2.3.5
  - 2.3.6
  - 2.3.7
  - 2.3.8
  - 2.3.9
  - 2.4.0
  - 2.4.1
  - 2.4.2
  - 2.4.3
  package_manager: maven
  cve:
  - CVE-2015-3253
  disclosed_date: 2015-08-13
  created_date: 2015-08-13
  last_modified_date: 2017-03-12
  credit:
  - OSSIndex
  references:
  - http://groovy-lang.org/security.html
  - http://packetstormsecurity.com/files/132714/Apache-Groovy-2.4.3-Code-Execution.html
  - http://rhn.redhat.com/errata/RHSA-2016-0066.html
  - http://www.oracle.com/technetwork/security-advisory/cpuapr2016v3-2985753.html
  - http://www.oracle.com/technetwork/security-advisory/cpujul2016-2881720.html
  - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2016-2881722.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
  - http://www.securityfocus.com/archive/1/archive/1/536012/100/0/threaded
  - http://www.securityfocus.com/bid/75919
  - http://www.securityfocus.com/bid/91787
  - http://www.securitytracker.com/id/1034815
  - http://www.zerodayinitiative.com/advisories/ZDI-15-365/
  - https://access.redhat.com/errata/RHSA-2016:1376
  - https://access.redhat.com/errata/RHSA-2017:2486
  - https://access.redhat.com/errata/RHSA-2017:2596
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05324755
  - https://security.gentoo.org/glsa/201610-01
  - https://security.netapp.com/advisory/ntap-20160623-0001/
  source_url: https://ossindex.net/resource/package/7015322766/vulnerabilities
- id: ossindex:maven:org.codehaus.groovy:groovy:8402350979
  title: "[CVE-2016-6497] main/java/org/apache/directory/groovyldap/LDAP.java in the
    Groovy LDAP API allow..."
  description: main/java/org/apache/directory/groovyldap/LDAP.java in the Groovy LDAP
    API allows attackers to conduct LDAP entry poisoning attacks by leveraging setting
    returnObjFlag to true for all search methods.
  affected_package: org.codehaus.groovy:groovy
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2016-6497
  disclosed_date: 2017-01-18
  created_date: 2017-01-18
  last_modified_date: 2017-03-12
  credit:
  - OSSIndex
  references:
  - http://svn.apache.org/viewvc/directory/sandbox/szoerner/groovyldap/src/main/java/org/apache/directory/groovyldap/LDAP.java?r1=1765362&r2=1765361&pathrev=1765362&view=patch
  - http://www.securityfocus.com/bid/95929
  - https://mail-archives.apache.org/mod_mbox/directory-users/201610.mbox/%3Cb7d7e909-a8ed-1ab4-c853-4078c1e7624a%40stefan-seelmann.de%3E
  - https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE-wp.pdf
  source_url: https://ossindex.net/resource/package/7015322766/vulnerabilities
- id: snykio:maven:org.codehaus.groovy:groovy:1048694
  title: Information Disclosure
  description: |
    [org.codehaus.groovy:groovy][1] is a language for the JVM

    Affected versions of this package are vulnerable to Information
    Disclosure. Groovy may create temporary directories within the OS
    temporary directory which is shared between all users on affected
    systems. This vulnerability only impacts Unix-like systems, and very old
    versions of Mac OSX and Windows.



    [1]: https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
  affected_package: org.codehaus.groovy:groovy
  vulnerable_versions:
  - "< 2.4.21"
  - ">= 2.5.0 < 2.5.14"
  - ">= 3.0.0 < 3.0.7"
  - ">= 4.0.0-alpha-1 < 4.0.0-alpha-2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-17521
  cwe:
  - CWE-379
  disclosed_date: 2020-12-06
  created_date: 2020-12-06
  last_modified_date: 2020-12-06
  credit:
  - Unknown
  references:
  - https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28
  - https://issues.apache.org/jira/browse/GROOVY-9824
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSGROOVY-1048694
- id: snykio:maven:org.codehaus.groovy:groovy:31078
  title: Denial of Service (DoS)
  description: |+
    [org.codehaus.groovy:groovy][1] is a language for the JVM

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The `MethodClosure` class in `runtime/MethodClosure.java` allows
    remote attackers to execute arbitrary code or cause a denial of service
    via a crafted serialized object.



    [1]: https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.codehaus.groovy:groovy
  vulnerable_versions:
  - ">= 1.7.0 < 2.4.4"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-3253
  cwe:
  - CWE-74
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2015-07-16
  credit:
  - cpnrodzc7
  references:
  - https://github.com/apache/groovy/commit/09e9778e8a33052d8c27105aee5310649637233d
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3253
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSGROOVY-31078
