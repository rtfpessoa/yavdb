---
- id: ossindex:maven:org.springframework:spring-core:341025
  title: '[CVE-2010-1622]  Improper Control of Generation of Code ("Code Injection")'
  description: 'SpringSource Spring Framework 2.5.x before 2.5.6.SEC02, 2.5.7 before
    2.5.7.SR01, and 3.0.x before 3.0.3 allows remote attackers to execute arbitrary
    code via an HTTP request containing class.classLoader.URLs[0]=jar: followed by
    a URL of a crafted .jar file.'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 2.5.6.SEC01
  - 2.5.6.SEC02
  - 2.5.7
  - ">=2.5.0 <=2.5.6"
  - ">=3.0.0 <3.0.3"
  package_manager: maven
  cve:
  - CVE-2010-1622
  disclosed_date: 2010-06-21
  created_date: 2010-06-21
  last_modified_date: 2017-04-18
  credit:
  - OSSIndex
  references:
  - http://geronimo.apache.org/2010/07/21/apache-geronimo-v216-released.html
  - http://geronimo.apache.org/21x-security-report.html
  - http://geronimo.apache.org/22x-security-report.html
  - http://secunia.com/advisories/41016
  - http://secunia.com/advisories/41025
  - http://secunia.com/advisories/43087
  - http://www.exploit-db.com/exploits/13918
  - http://www.oracle.com/technetwork/topics/security/alerts-086861.html
  - http://www.oracle.com/technetwork/topics/security/cpuoct2015-2367953.html
  - http://www.redhat.com/support/errata/RHSA-2011-0175.html
  - http://www.securityfocus.com/archive/1/511877
  - http://www.securityfocus.com/bid/40954
  - http://www.securitytracker.com/id/1033898
  - http://www.springsource.com/security/cve-2010-1622
  - http://www.vupen.com/english/advisories/2011/0237
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:346728
  title: "[CVE-2011-2730] VMware SpringSource Spring Framework before 2.5.6.SEC03,
    2.5.7.SR023, and 3.x be..."
  description: VMware SpringSource Spring Framework before 2.5.6.SEC03, 2.5.7.SR023,
    and 3.x before 3.0.6, when a container supports Expression Language (EL), evaluates
    EL expressions in tags twice, which allows remote attackers to obtain sensitive
    information via a (1) name attribute in a (a) spring:hasBindErrors tag; (2) path
    attribute in a (b) spring:bind or (c) spring:nestedpath tag; (3) arguments, (4)
    code, (5) text, (6) var, (7) scope, or (8) message attribute in a (d) spring:message
    or (e) spring:theme tag; or (9) var, (10) scope, or (11) value attribute in a
    (f) spring:transform tag, aka "Expression Language Injection."
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 2.5.6.SEC01
  - 2.5.6.SEC02
  - 2.5.7
  - 2.5.7 01
  - ">=2.5.0 <=2.5.6"
  - ">=3.0.0 <3.0.6"
  package_manager: maven
  cve:
  - CVE-2011-2730
  disclosed_date: 2012-12-05
  created_date: 2012-12-05
  last_modified_date: 2017-04-18
  credit:
  - OSSIndex
  references:
  - http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=677814
  - http://rhn.redhat.com/errata/RHSA-2013-0191.html
  - http://rhn.redhat.com/errata/RHSA-2013-0192.html
  - http://rhn.redhat.com/errata/RHSA-2013-0193.html
  - http://rhn.redhat.com/errata/RHSA-2013-0194.html
  - http://rhn.redhat.com/errata/RHSA-2013-0195.html
  - http://rhn.redhat.com/errata/RHSA-2013-0196.html
  - http://rhn.redhat.com/errata/RHSA-2013-0197.html
  - http://rhn.redhat.com/errata/RHSA-2013-0198.html
  - http://rhn.redhat.com/errata/RHSA-2013-0221.html
  - http://rhn.redhat.com/errata/RHSA-2013-0533.html
  - http://secunia.com/advisories/51984
  - http://secunia.com/advisories/52054
  - http://secunia.com/advisories/55155
  - http://support.springsource.com/security/cve-2011-2730
  - http://www.debian.org/security/2012/dsa-2504
  - http://www.securitytracker.com/id/1029151
  - https://docs.google.com/document/d/1dc1xxO8UMFaGLOwgkykYdghGWm_2Gn0iCrxFsympqcE/edit
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:346881
  title: "[CVE-2011-2894]  Permissions, Privileges, and Access Controls"
  description: Spring Framework 3.0.0 through 3.0.5, Spring Security 3.0.0 through
    3.0.5 and 2.0.0 through 2.0.6, and possibly other versions deserialize objects
    from untrusted sources, which allows remote attackers to bypass intended security
    restrictions and execute untrusted code by (1) serializing a java.lang.Proxy instance
    and using InvocationHandler, or (2) accessing internal AOP interfaces, as demonstrated
    using deserialization of a DefaultListableBeanFactory instance to execute arbitrary
    commands via the java.lang.Runtime class.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.0
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  package_manager: maven
  cve:
  - CVE-2011-2894
  disclosed_date: 2011-10-04
  created_date: 2011-10-04
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://osvdb.org/75263
  - http://securityreason.com/securityalert/8405
  - http://www.redhat.com/support/errata/RHSA-2011-1334.html
  - http://www.securityfocus.com/archive/1/archive/1/519593/100/0/threaded
  - http://www.securityfocus.com/bid/49536
  - http://www.springsource.com/security/cve-2011-2894
  - http://xforce.iss.net/xforce/xfdb/69687
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/69687
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:357383
  title: "[CVE-2013-4152]  Permissions, Privileges, and Access Controls"
  description: The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1,
    when using the JAXB marshaller, does not disable entity resolution, which allows
    context-dependent attackers to read arbitrary files, cause a denial of service,
    and conduct CSRF attacks via an XML external entity declaration in conjunction
    with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or
    (4) StreamSource, aka an XML External Entity (XXE) issue.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.0
  - 3.0.0.m1
  - 3.0.0.m2
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.2.3
  - 4.0.0
  package_manager: maven
  cve:
  - CVE-2013-4152
  disclosed_date: 2014-01-23
  created_date: 2014-01-23
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0212.html
  - http://rhn.redhat.com/errata/RHSA-2014-0245.html
  - http://rhn.redhat.com/errata/RHSA-2014-0254.html
  - http://rhn.redhat.com/errata/RHSA-2014-0400.html
  - http://seclists.org/bugtraq/2013/Aug/154
  - http://seclists.org/fulldisclosure/2013/Nov/14
  - http://secunia.com/advisories/56247
  - http://secunia.com/advisories/57915
  - http://www.debian.org/security/2014/dsa-2842
  - http://www.gopivotal.com/security/cve-2013-4152
  - http://www.securityfocus.com/bid/61951
  - https://github.com/spring-projects/spring-framework/pull/317/files
  - https://jira.springsource.org/browse/SPR-10806
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:359039
  title: "[CVE-2013-6429]  Permissions, Privileges, and Access Controls"
  description: The SourceHttpMessageConverter in Spring MVC in Spring Framework before
    3.2.5 and 4.0.0.M1 through 4.0.0.RC1 does not disable external entity resolution,
    which allows remote attackers to read arbitrary files, cause a denial of service,
    and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue,
    and a different vulnerability than CVE-2013-4152 and CVE-2013-7315.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 1.1.0
  - '2.0'
  - 2.0.1
  - 2.0.2
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - '2.1'
  - 2.5.0
  - 2.5.1
  - 2.5.2
  - 2.5.3
  - 2.5.4
  - 2.5.5
  - 2.5.6
  - 2.5.7
  - 2.5.7_sr01
  - 3.0.0
  - 3.0.0.m1
  - 3.0.0.m2
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 4.0.0
  package_manager: maven
  cve:
  - CVE-2013-6429
  disclosed_date: 2014-01-26
  created_date: 2014-01-26
  last_modified_date: 2016-11-28
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0400.html
  - http://secunia.com/advisories/57915
  - http://www.gopivotal.com/security/cve-2013-6429
  - http://www.securityfocus.com/archive/1/archive/1/530770/100/0/threaded
  - http://www.securityfocus.com/bid/64947
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05324755
  - https://jira.springsource.org/browse/SPR-11078?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:359597
  title: "[CVE-2013-7315]  Permissions, Privileges, and Access Controls"
  description: 'The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through
    4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory,
    which allows context-dependent attackers to read arbitrary files, cause a denial
    of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External
    Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this
    issue was SPLIT from CVE-2013-4152 due to different affected versions.'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.0
  - 3.0.0.m1
  - 3.0.0.m2
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.2.3
  - 4.0.0
  package_manager: maven
  cve:
  - CVE-2013-7315
  disclosed_date: 2014-01-23
  created_date: 2014-01-23
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://seclists.org/bugtraq/2013/Aug/154
  - http://seclists.org/fulldisclosure/2013/Nov/14
  - http://www.debian.org/security/2014/dsa-2842
  - http://www.gopivotal.com/security/cve-2013-4152
  - http://www.securityfocus.com/bid/77998
  - https://jira.springsource.org/browse/SPR-10806
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:359720
  title: "[CVE-2014-0054]  Cross-Site Request Forgery (CSRF)"
  description: 'The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework
    before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution,
    which allows remote attackers to read arbitrary files, cause a denial of service,
    and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE:
    this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315,
    and CVE-2013-6429.'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - "<3.2.8"
  - ">=4.0.0 <4.0.2"
  package_manager: maven
  cve:
  - CVE-2014-0054
  disclosed_date: 2014-04-17
  created_date: 2014-04-17
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0400.html
  - http://secunia.com/advisories/57915
  - http://www.securityfocus.com/bid/66148
  - https://jira.spring.io/browse/SPR-11376
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:361150
  title: '[CVE-2014-1904]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in web/servlet/tags/form/FormTag.java
    in Spring MVC in Spring Framework 3.0.0 before 3.2.8 and 4.0.0 before 4.0.2 allows
    remote attackers to inject arbitrary web script or HTML via the requested URI
    in a default action.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.0
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 4.0.0
  - 4.0.1
  package_manager: maven
  cve:
  - CVE-2014-1904
  disclosed_date: 2014-03-20
  created_date: 2014-03-20
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://docs.spring.io/spring/docs/3.2.8.RELEASE/changelog.txt
  - http://rhn.redhat.com/errata/RHSA-2014-0400.html
  - http://seclists.org/fulldisclosure/2014/Mar/101
  - http://secunia.com/advisories/57915
  - http://www.gopivotal.com/security/cve-2014-1904
  - http://www.securityfocus.com/archive/1/archive/1/531422/100/0/threaded
  - http://www.securityfocus.com/bid/66137
  - https://github.com/spring-projects/spring-framework/commit/741b4b229ae032bd17175b46f98673ce0bd2d485
  - https://jira.springsource.org/browse/SPR-11426
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:362453
  title: '[CVE-2014-3578]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Pivotal Spring Framework 3.x before
    3.2.9 and 4.0 before 4.0.5 allows remote attackers to read arbitrary files via
    a crafted URL.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 4.0.0
  - 4.0.1
  - 4.0.2
  - 4.0.3
  - 4.0.4
  package_manager: maven
  cve:
  - CVE-2014-3578
  disclosed_date: 2015-02-19
  created_date: 2015-02-19
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN49154900/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2014-000054
  - http://pivotal.io/security/cve-2014-3578
  - http://rhn.redhat.com/errata/RHSA-2015-0720.html
  - http://www.securityfocus.com/bid/68042
  - https://bugzilla.redhat.com/show_bug.cgi?id=1131882
  - https://rhn.redhat.com/errata/RHSA-2015-0234.html
  - https://rhn.redhat.com/errata/RHSA-2015-0235.html
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:362483
  title: '[CVE-2014-3625]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Pivotal Spring Framework 3.0.4
    through 3.2.x before 3.2.12, 4.0.x before 4.0.8, and 4.1.x before 4.1.2 allows
    remote attackers to read arbitrary files via unspecified vectors, related to static
    resource handling.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 3.2.9
  - 4.0.0
  - 4.0.1
  - 4.0.2
  - 4.0.3
  - 4.0.4
  - 4.0.5
  - 4.0.7
  - '4.06'
  - 4.1.0
  - 4.1.1
  package_manager: maven
  cve:
  - CVE-2014-3625
  disclosed_date: 2014-11-20
  created_date: 2014-11-20
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2015-0236.html
  - http://rhn.redhat.com/errata/RHSA-2015-0720.html
  - http://www.pivotal.io/security/cve-2014-3625
  - https://jira.spring.io/browse/SPR-12354
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:366708
  title: "[CVE-2015-0201] The Java SockJS client in Pivotal Spring Framework 4.1.x
    before 4.1.5 generates ..."
  description: The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5
    generates predictable session ids, which allows remote attackers to send messages
    to other sessions via unspecified vectors.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">=4.1.0 <4.1.5"
  package_manager: maven
  cve:
  - CVE-2015-0201
  disclosed_date: 2015-03-10
  created_date: 2015-03-10
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - https://pivotal.io/security/cve-2015-0201
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:8399934729
  title: "[CVE-2015-3192]  Improper Restriction of Operations within the Bounds of
    a Memory Buffer"
  description: Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not
    properly process inline DTD declarations when DTD is not entirely disabled, which
    allows remote attackers to cause a denial of service (memory consumption and out-of-memory
    errors) via a crafted XML file.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.12
  - 3.2.13
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 3.2.9
  - 4.1.0
  - 4.1.1
  - 4.1.2
  - 4.1.3
  - 4.1.4
  - 4.1.5
  - 4.1.6
  package_manager: maven
  cve:
  - CVE-2015-3192
  disclosed_date: 2016-07-12
  created_date: 2016-07-12
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162015.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-July/162017.html
  - http://pivotal.io/security/cve-2015-3192
  - http://rhn.redhat.com/errata/RHSA-2016-1592.html
  - http://rhn.redhat.com/errata/RHSA-2016-1593.html
  - http://rhn.redhat.com/errata/RHSA-2016-2035.html
  - http://rhn.redhat.com/errata/RHSA-2016-2036.html
  - http://www.securityfocus.com/bid/90853
  - http://www.securitytracker.com/id/1036587
  - https://access.redhat.com/errata/RHSA-2016:1218
  - https://access.redhat.com/errata/RHSA-2016:1219
  - https://jira.spring.io/browse/SPR-13136
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:8402280560
  title: '[CVE-2016-9878]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: An issue was discovered in Pivotal Spring Framework before 3.2.18,
    4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet
    were not properly sanitized and as a result exposed to directory traversal attacks.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.12
  - 3.2.13
  - 3.2.14
  - 3.2.15
  - 3.2.16
  - 3.2.17
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 3.2.9
  - 4.2.0
  - 4.2.1
  - 4.2.2
  - 4.2.3
  - 4.2.4
  - 4.2.5
  - 4.2.6
  - 4.2.7
  - 4.2.8
  - 4.3.0
  - 4.3.1
  - 4.3.2
  - 4.3.3
  - 4.3.4
  package_manager: maven
  cve:
  - CVE-2016-9878
  disclosed_date: 2016-12-29
  created_date: 2016-12-29
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/95072
  - https://access.redhat.com/errata/RHSA-2017:3115
  - https://pivotal.io/security/cve-2016-9878
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:8404580678
  title: '[CVE-2014-0225]  Improper Restriction of XML External Entity Reference ("XXE")'
  description: When processing user provided XML documents, the Spring Framework 4.0.0
    to 4.0.4, 3.0.0 to 3.2.8, and possibly earlier unsupported versions did not disable
    by default the resolution of URI references in a DTD declaration. This enabled
    an XXE attack.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.0.0
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  - 3.0.6
  - 3.0.7
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 4.0.0
  - 4.0.1
  - 4.0.2
  - 4.0.3
  - 4.0.4
  package_manager: maven
  cve:
  - CVE-2014-0225
  disclosed_date: 2017-05-25
  created_date: 2017-05-25
  last_modified_date: 2017-06-07
  credit:
  - OSSIndex
  references:
  - https://pivotal.io/security/cve-2014-0225
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:8404580684
  title: "[CVE-2015-5211]  Improper Input Validation"
  description: Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to
    4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected
    File Download (RFD) attack. The attack involves a malicious user crafting a URL
    with a batch script extension that results in the response being downloaded rather
    than rendered and also includes some input reflected in the response.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.12
  - 3.2.13
  - 3.2.14
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 3.2.9
  - 4.0.0
  - 4.0.1
  - 4.0.2
  - 4.0.3
  - 4.0.4
  - 4.0.5
  - 4.0.6
  - 4.0.7
  - 4.0.8
  - 4.0.9
  - 4.1.0
  - 4.1.1
  - 4.1.2
  - 4.1.3
  - 4.1.4
  - 4.1.5
  - 4.1.6
  - 4.1.7
  - 4.2.0
  - 4.2.1
  package_manager: maven
  cve:
  - CVE-2015-5211
  disclosed_date: 2017-05-25
  created_date: 2017-05-25
  last_modified_date: 2017-06-08
  credit:
  - OSSIndex
  references:
  - https://pivotal.io/security/cve-2015-5211
  - https://www.trustwave.com/Resources/SpiderLabs-Blog/Reflected-File-Download---A-New-Web-Attack-Vector/
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: ossindex:maven:org.springframework:spring-core:8404580692
  title: "[CVE-2016-5007]  Permissions, Privileges, and Access Controls"
  description: Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x,
    4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping
    requests to controllers respectively. Differences in the strictness of the pattern
    matching mechanisms, for example with regards to space trimming in path segments,
    can lead Spring Security to not recognize certain paths as not protected that
    are in fact mapped to Spring MVC controllers that should be protected. The problem
    is compounded by the fact that the Spring Framework provides richer features with
    regards to pattern matching as well as by the fact that pattern matching in each
    Spring Security and the Spring Framework can easily be customized creating additional
    differences.
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - 3.2.0
  - 3.2.1
  - 3.2.10
  - 3.2.11
  - 3.2.12
  - 3.2.13
  - 3.2.14
  - 3.2.15
  - 3.2.16
  - 3.2.17
  - 3.2.18
  - 3.2.2
  - 3.2.3
  - 3.2.4
  - 3.2.5
  - 3.2.6
  - 3.2.7
  - 3.2.8
  - 3.2.9
  - 4.0.0
  - 4.0.1
  - 4.0.2
  - 4.0.3
  - 4.0.4
  - 4.0.5
  - 4.0.6
  - 4.0.7
  - 4.0.8
  - 4.0.9
  - 4.1.0
  - 4.1.1
  - 4.1.2
  - 4.1.3
  - 4.1.4
  - 4.1.5
  - 4.1.6
  - 4.1.7
  - 4.1.8
  - 4.1.9
  - 4.2.0
  - 4.2.1
  - 4.2.2
  - 4.2.3
  - 4.2.4
  - 4.2.5
  - 4.2.6
  - 4.2.7
  - 4.2.8
  - 4.2.9
  package_manager: maven
  cve:
  - CVE-2016-5007
  disclosed_date: 2017-05-25
  created_date: 2017-05-25
  last_modified_date: 2017-06-13
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/91687
  - https://pivotal.io/security/cve-2016-5007
  source_url: https://ossindex.net/resource/package/7015205085/vulnerabilities
- id: snykio:maven:org.springframework:spring-core:30155
  title: Regular Expression Denial of Service (ReDoS)
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Regular Expression
    Denial of Service (ReDoS). attacks via the
    `java.util.regex.Pattern.compile` method. An attacker could use a long
    string with many optional groups to cause high cpu consumption. This is
    related to issue CVE-2004-2540.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - "< 2.5.6.SEC01"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2009-1190
  cwe:
  - CWE-399
  disclosed_date: 2009-04-22
  created_date: 2009-04-22
  last_modified_date: 2009-04-22
  credit:
  - RedHat Security Response Team
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=497161
  - https://packetstormsecurity.com/hitb06/DAY_1_-_Marc_Schoenefeld_-_Pentesting_Java_J2EE.pdf
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-1190
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30155
- id: snykio:maven:org.springframework:spring-core:30156
  title: Arbitrary Code Execution
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution, via an HTTP request containing
    `class.classLoader.URLs[0]=jar:` followed by a URL of a crafted `.jar`
    file.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 2.5.0 < 2.5.6.SEC01"
  - ">= 3.0.0 < 3.0.2.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-1622
  cwe:
  - CWE-94
  disclosed_date: 2010-06-18
  created_date: 2010-06-18
  last_modified_date: 2010-06-18
  credit:
  - Meder Kydyraliev
  references:
  - http://seclists.org/fulldisclosure/2010/Jun/456
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-1622
  - https://www.exploit-db.com/exploits/13918
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30156
- id: snykio:maven:org.springframework:spring-core:30157
  title: Sensitive Information Exposure
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Sensitive
    Information Exposure. VMware SpringSource Spring Framework before
    2.5.6.SEC03, 2.5.7.SR023, and 3.x before 3.0.6, when a container
    supports Expression Language (EL), evaluates EL expressions in tags
    twice, which allows remote attackers to obtain sensitive information via
    a (1) name attribute in a (a) spring:hasBindErrors tag; (2) path
    attribute in a (b) spring:bind or (c) spring:nestedpath tag; (3)
    arguments, (4) code, (5) text, (6) var, (7) scope, or (8) message
    attribute in a (d) spring:message or (e) spring:theme tag; or (9) var,
    (10) scope, or (11) value attribute in a (f) spring:transform tag, aka
    \"Expression Language Injection.\"



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.5.6.SEC03"
  - ">= 3.0.0 < 3.0.6"
  severity: high
  package_manager: maven
  cve:
  - CVE-2011-2730
  cwe:
  - CWE-16
  disclosed_date: 2011-09-09
  created_date: 2011-09-09
  last_modified_date: 2011-09-09
  credit:
  - Arshan Dabirsiaghi
  - Stefano Di Paola
  references:
  - https://github.com/spring-projects/spring-framework/commit/9772eb8410e37cd0bdec0d1b133218446c778beb
  - https://github.com/spring-projects/spring-framework/commit/c8649087792d07df209fc75e0f9e2e3284e09fe
  - https://github.com/spring-projects/spring-framework/commit/d95cbe23ee462245c5c2482e175f7b2a921b31c
  - https://seclists.org/fulldisclosure/2011/Sep/78
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2730
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30157
- id: snykio:maven:org.springframework:spring-core:31324
  title: Access Restriction Bypass
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. Remote attackers can bypass intended security restrictions and
    execute untrusted code by (1) serializing a java.lang.Proxy instance and
    using InvocationHandler, or (2) accessing internal AOP interfaces, as
    demonstrated using deserialization of a DefaultListableBeanFactory
    instance to execute arbitrary commands via the java.lang.Runtime class.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 3.0.0.RELEASE < 3.0.6.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-2894
  cwe:
  - CWE-264
  disclosed_date: 2011-10-04
  created_date: 2014-09-08
  last_modified_date: 2014-09-08
  credit:
  - Wouter Coekaerts
  references:
  - https://seclists.org/fulldisclosure/2011/Sep/80
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2894
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31324
- id: snykio:maven:org.springframework:spring-core:31325
  title: Directory Traversal
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Directory Traversal.
    It allows remote attackers to read arbitrary files via a crafted URL.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 3.0.0.RELEASE < 3.2.9.RELEASE"
  - ">= 4.0.0.RELEASE < 4.0.5.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3578
  cwe:
  - CWE-22
  disclosed_date: 2014-09-05
  created_date: 2014-09-05
  last_modified_date: 2014-09-05
  credit:
  - Takeshi Terada
  references:
  - http://jvndb.jvn.jp/en/contents/2014/JVNDB-2014-000054.html
  - https://bugzilla.redhat.com/show_bug.cgi?id=1131882
  - https://github.com/spring-projects/spring-framework/commit/e3e71ba92a8b82dadf474eda76cd2741f65a77a8
  - https://jira.spring.io/browse/SPR-12354
  - https://pivotal.io/security/cve-2014-3578
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3578
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31325
- id: snykio:maven:org.springframework:spring-core:31326
  title: Denial of Service (DoS)
  description: |+
    [`org.springframework:spring-core`][1] provides a comprehensive
    programming and configuration model for modern Java-based enterprise
    applications - on any kind of deployment platform.

    Affected versions of the package are vulnerable to Denial Of Service
    (DoS) via the `PatternMatchUtils` method, which has an infinite loop
    bug.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 3.2.8.RELEASE < 3.2.14.RELEASE"
  - ">= 4.1.0.RELEASE < 4.1.7.RELEASE"
  severity: low
  package_manager: maven
  cwe:
  - CWE-400
  disclosed_date: 2015-11-06
  created_date: 2015-11-06
  last_modified_date: 2015-11-06
  credit:
  - Unknown
  references:
  - https://jira.spring.io/browse/SPR-12971
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31326
- id: snykio:maven:org.springframework:spring-core:31650
  title: Access Restriction Bypass
  description: |
    [org.springframework:spring-core][1] provides a comprehensive
    programming and configuration model for modern Java-based enterprise
    applications - on any kind of deployment platform.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. It does not consider URL path parameters when processing
    security constraints. By adding a URL path parameter with special
    encodings, an attacker may be able to bypass a security constraint.



    [1]: http://projects.spring.io/spring-framework/
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 4.1.0 < 4.1.5"
  - ">= 4.2.0 < 4.2.4"
  - ">= 5.0 < 5.0.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1199
  cwe:
  - CWE-264
  disclosed_date: 2018-03-18
  created_date: 2018-03-17
  last_modified_date: 2018-03-17
  credit:
  - Macchinetta Framework Development Team
  references:
  - https://pivotal.io/security/cve-2018-1199
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31650
- id: snykio:maven:org.springframework:spring-core:31651
  title: Access Restriction Bypass
  description: |
    [org.springframework:spring-core][1] provides a comprehensive
    programming and configuration model for modern Java-based enterprise
    applications - on any kind of deployment platform.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. When using Spring Security in combination with Spring Framework,
    an unauthorized malicious user can gain unauthorized access to methods
    that should be restricted.



    [1]: http://projects.spring.io/spring-framework/
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 5.0.5.RELEASE < 5.0.6.RELEASE"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-1258
  cwe:
  - CWE-264
  disclosed_date: 2018-05-10
  created_date: 2018-05-10
  last_modified_date: 2018-05-10
  credit:
  - Unknown
  references:
  - https://pivotal.io/security/cve-2018-1258
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31651
- id: snykio:maven:org.springframework:spring-core:460644
  title: Multipart Content Pollution
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Multipart Content
    Pollution. It provides client-side support for multipart requests. When
    the server application (server A) receives input from a remote client,
    and then uses that input to make a multipart request to another server
    (server B), it can be exposed to an attack, where an extra multipart is
    inserted in the content of the request from server A, causing server B
    to use the wrong value for a part it expects. This could to lead
    privilege escalation, for example, if the part content represents a
    username or user roles.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 4.3.0.RELEASE < 4.3.14.RELEASE"
  - ">= 5.0.0.RELEASE < 5.0.5.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1272
  cwe:
  - CWE-94
  disclosed_date: 2018-04-06
  created_date: 2018-04-09
  last_modified_date: 2018-04-09
  credit:
  - Unknown
  references:
  - https://github.com/spring-projects/spring-framework/commit/ab2410c754b67902f002bfcc0c3895bd7772d39
  - https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea767
  - https://nvd.nist.gov/vuln/detail/CVE-2018-1272
  - https://pivotal.io/security/cve-2018-1272
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-460644
- id: snykio:maven:org.springframework:spring-core:467012
  title: Directory Traversal
  description: |
    [org.springframework:spring-core][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Directory Traversal
    which allows remote attackers to read arbitrary files via a crafted URL.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - ">= 3.2.0.RELEASE < 3.2.9.RELEASE"
  - ">= 4.0.0.RELEASE < 4.0.5.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3578
  cwe:
  - CWE-22
  disclosed_date: 2015-02-19
  created_date: 2015-09-05
  last_modified_date: 2015-09-05
  credit:
  - Takeshi Terada
  references:
  - http://jvndb.jvn.jp/en/contents/2014/JVNDB-2014-000054.html
  - http://www.pivotal.io/security/cve-2014-3578
  - https://bugzilla.redhat.com/show_bug.cgi?id=1131882
  - https://github.com/spring-projects/spring-framework/commit/f6fddeb6eb7da625fd711ab371ff16512f431e8d
  - https://github.com/spring-projects/spring-framework/issues/16414
  - https://jira.spring.io/browse/SPR-12354
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-467012
- id: victims:maven:org.springframework:spring-core:2009-1190
  title: 'Spring Framework: Regular expression denial of service (ReDOS)'
  description: 'Algorithmic complexity vulnerability in the java.util.regex.Pattern.compile
    method in Sun Java Development Kit (JDK) before 1.6, when used with spring.jar
    in SpringSource Spring Framework 1.1.0 through 2.5.6 and 3.0.0.M1 through 3.0.0.M2
    and dm Server 1.0.0 through 1.0.2, allows remote attackers to cause a denial of
    service (CPU consumption) via serializable data with a long regex string containing
    multiple optional groups, a related issue to CVE-2004-2540.

'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - '1'
  - '2'
  - '3.0'
  - "<=1.2.9"
  - "<=2.5.6"
  - "<=3.0.0.M2"
  patched_versions:
  - '2'
  - '3.0'
  - ">=2.5.6.SEC01"
  - ">=3.0.1.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2009-1190
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - http://support.springsource.com/security/cve-2009-1190
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-1190
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2009/1190.yaml
- id: victims:maven:org.springframework:spring-core:2010-1622
  title: 'Spring Framework: Remote classloader modification'
  description: 'SpringSource Spring Framework 2.5.x before 2.5.6.SEC02, 2.5.7 before
    2.5.7.SR01, and 3.0.x before 3.0.3 allows remote attackers to execute arbitrary
    code via an HTTP request containing class.classLoader.URLs[0]=jar: followed by
    a URL of a crafted .jar file.

'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - '2'
  - '3.0'
  - "<=2.5.6.SEC01"
  - "<=3.0.2.RELEASE"
  patched_versions:
  - '2'
  - '3.0'
  - ">=2.5.6.SEC02"
  - ">=3.0.3.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-1622
  cvss_v2_score: 5.1
  credit:
  - Victims CVE Database
  references:
  - http://support.springsource.com/security/cve-2010-1622
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-1622
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2010/1622.yaml
- id: victims:maven:org.springframework:spring-core:2011-2730
  title: 'Spring Framework: EL expressions double evaluation'
  description: 'VMware SpringSource Spring Framework before 2.5.6.SEC03, 2.5.7.SR023,
    and 3.x before 3.0.6, when a container supports Expression Language (EL), evaluates
    EL expressions in tags twice, which allows remote attackers to obtain sensitive
    information via a (1) name attribute in a (a) spring:hasBindErrors tag; (2) path
    attribute in a (b) spring:bind or (c) spring:nestedpath tag; (3) arguments, (4)
    code, (5) text, (6) var, (7) scope, or (8) message attribute in a (d) spring:message
    or (e) spring:theme tag; or (9) var, (10) scope, or (11) value attribute in a
    (f) spring:transform tag, aka "Expression Language Injection."

'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - '2'
  - '3.0'
  - "<=2.5.6.SEC02"
  - "<=3.0.5.RELEASE"
  patched_versions:
  - '2'
  - '3.0'
  - ">=2.5.6.SEC03"
  - ">=3.0.6.RELEASE"
  severity: high
  package_manager: maven
  cve:
  - CVE-2011-2730
  cvss_v2_score: 7.5
  credit:
  - Victims CVE Database
  references:
  - http://support.springsource.com/security/cve-2011-2730
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2730
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2011/2730.yaml
- id: victims:maven:org.springframework:spring-core:2016-5007
  title: Spring Security / MVC Path Matching Inconsistency
  description: 'Both Spring Security and the Spring Framework rely on URL pattern
    mappings for authorization and for mapping requests to controllers respectively.

'
  affected_package: org.springframework:spring-core
  vulnerable_versions:
  - "<=4.3.0.RELEASE"
  patched_versions:
  - ">=4.3.1.RELEASE"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-5007
  credit:
  - Victims CVE Database
  references:
  - https://pivotal.io/security/cve-2016-5007
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2016/5007.yaml
