---
- id: ossindex:maven:org.apache.poi:poi-ooxml:8402703505
  title: "[CVE-2017-5644]  Resource Management Errors"
  description: Apache POI in versions prior to release 3.15 allows remote attackers
    to cause a denial of service (CPU consumption) via a specially crafted OOXML file,
    aka an XML Entity Expansion (XEE) attack.
  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - "<3.15.0"
  package_manager: maven
  cve:
  - CVE-2017-5644
  disclosed_date: 2017-03-24
  created_date: 2017-03-24
  last_modified_date: 2017-06-26
  credit:
  - OSSIndex
  references:
  - http://poi.apache.org/#20+March+2017+-+CVE-2017-5644+-+Possible+DOS+%28Denial+of+Service%29+in+Apache+POI+versions+prior+to+3.15
  - http://www.securityfocus.com/bid/96983
  source_url: https://ossindex.net/resource/package/7015349666/vulnerabilities
- id: snykio:maven:org.apache.poi:poi-ooxml:30026
  title: XML External Entity (XXE) Injection
  description: |+
    [org.apache.poi:poi-ooxml][1] is a Java API To Access Microsoft Format
    Files.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. The OPC SAX setup in Apache POI allows remote attackers
    to read arbitrary files via an OpenXML file containing an XML external
    entity declaration in conjunction with an entity reference, related to
    an XML External Entity (XXE) issue.



    [1]: https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - "< 3.10.1"
  - ">= 3.11-beta1 < 3.11-beta2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3529
  cwe:
  - CWE-611
  disclosed_date: 2014-08-18
  created_date: 2014-08-18
  last_modified_date: 2014-08-18
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-3529
  - https://github.com/apache/poi/commit/bb7a24769a97732e760a0d70e76466424bfc4d8e
  - https://issues.apache.org/bugzilla/show_bug.cgi?id=56164
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEPOI-30026
- id: snykio:maven:org.apache.poi:poi-ooxml:30027
  title: XML External Entity (XXE) Injection
  description: |+
    [org.apache.poi:poi-ooxml][1] is a Java API To Access Microsoft Format
    Files.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. Apache POI before 3.10.1 and 3.11.x before 3.11-beta2
    allows remote attackers to cause a denial of service (CPU consumption
    and crash) via a crafted OOXML file, aka an XML Entity Expansion (XXE)
    attack.



    [1]: https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - "< 3.11-beta2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3574
  cwe:
  - CWE-611
  disclosed_date: 2014-09-04
  created_date: 2014-09-04
  last_modified_date: 2014-09-04
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-3574
  - https://github.com/apache/poi/commit/103b45073c7b504236588b3acc146530205af53c
  - https://issues.apache.org/bugzilla/show_bug.cgi?id=54764
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEPOI-30027
- id: snykio:maven:org.apache.poi:poi-ooxml:31438
  title: XML External Entity (XXE) Injection
  description: |+
    [org.apache.poi:poi-ooxml][1] is a Java API To Access Microsoft Format
    Files.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection as it allows remote attackers to cause a denial of
    service (CPU consumption) via a specially crafted OOXML file, aka an XML
    Entity Expansion (XEE) attack.



    [1]: https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - "< 3.15"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2017-5644
  cwe:
  - CWE-611
  disclosed_date: 2017-03-22
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Unknown
  references:
  - http://poi.apache.org/#20+March+2017+-+CVE-2017-5644+-+Possible+DOS+%28Denial+of+Service%29+in+Apache+POI+versions+prior+to+3.15
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5644
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEPOI-31438
- id: snykio:maven:org.apache.poi:poi-ooxml:548686
  title: XML External Entity (XXE) Injection
  description: |+
    [org.apache.poi:poi-ooxml][1] is a Java API To Access Microsoft Format
    Files.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. When using the tool `XSSFExportToXml` to convert
    user-provided Microsoft Excel documents, a specially crafted document
    can allow an attacker to read files from the local filesystem or from
    internal network resources via XML External Entity (XXE) Processing.



    [1]: https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - "< 4.1.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2019-12415
  cwe:
  - CWE-611
  disclosed_date: 2020-02-13
  created_date: 2020-02-13
  last_modified_date: 2020-02-13
  credit:
  - Artem Smotrakov from SAP
  references:
  - https://github.com/apache/poi/commit/2b8200f7d701ea6ff9638f629f0bd81d2e48410c
  - https://github.com/apache/poi/compare/REL_4_0_1...REL_4_1_0
  - https://lists.apache.org/thread.html/13a54b6a03369cfb418a699180ffb83bd727320b6ddfec198b9b728e@%3Cannounce.apache.org%3E
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEPOI-548686
- id: victims:maven:org.apache.poi:poi-ooxml:2014-3529
  title: 'apache-poi: entity expansion (billion laughs) flaw'
  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - '3.11'
  - "<=3.10-FINAL"
  - "<=3.11-beta1"
  patched_versions:
  - '3.10'
  - '3.11'
  - ">=3.10.1"
  - ">=3.11-beta2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3529
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-3529
  - https://issues.apache.org/bugzilla/show_bug.cgi?id=56164
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/3529.yaml
- id: victims:maven:org.apache.poi:poi-ooxml:2014-3574
  title: 'apache-poi: entity expansion (billion laughs) flaw'
  affected_package: org.apache.poi:poi-ooxml
  vulnerable_versions:
  - '3.11'
  - "<=3.10-FINAL"
  - "<=3.11-beta1"
  patched_versions:
  - '3.10'
  - '3.11'
  - ">=3.10.1"
  - ">=3.11-beta2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3574
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-3574
  - https://issues.apache.org/bugzilla/show_bug.cgi?id=54764
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/3574.yaml
