---
- id: ossindex:maven:org.webjars.npm:qs:8269193300
  title: Denial of Service
  description: The qs module blocks while parsing strings representing deeply nested
    objects, preventing application access until processing is complete.
  affected_package: org.webjars.npm:qs
  vulnerable_versions:
  - "<1.0.0"
  package_manager: maven
  disclosed_date: 2016-05-20
  created_date: 2016-05-20
  last_modified_date: 2017-02-12
  credit:
  - OSSIndex
  references:
  - https://cwe.mitre.org/data/definitions/400.html
  - https://nodesecurity.io/advisories/28
  - https://nodesecurity.io/advisories/qs_dos_extended_event_loop_blocking
  source_url: https://ossindex.net/resource/package/7107921490/vulnerabilities
- id: ossindex:maven:org.webjars.npm:qs:8374376467
  title: Denial of Service (Memory Exhaustion)
  description: 'The qs module before 1.0.0 in Node.js does not call the compact function
    for array data, which allows remote attackers to cause a denial of service (memory
    consumption) by using a large index value to create a sparse array. '
  affected_package: org.webjars.npm:qs
  vulnerable_versions:
  - "<1.0.0"
  package_manager: maven
  disclosed_date: 2016-05-20
  created_date: 2016-05-20
  last_modified_date: 2017-02-08
  credit:
  - OSSIndex
  references:
  - http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7191
  - https://cwe.mitre.org/data/definitions/400.html
  - https://github.com/tj/node-querystring/issues/104
  - https://nodesecurity.io/advisories/29
  source_url: https://ossindex.net/resource/package/7107921490/vulnerabilities
- id: snykio:maven:org.webjars.npm:qs:480105
  title: Denial of Service (DoS)
  description: |+
    [org.webjars.npm:qs][1] is a querystring parser that supports nesting
    and arrays, with a depth limit.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). When parsing a string representing a deeply nested object, qs
    will block the event loop for long periods of time. Such a delay may
    hold up the server\'s resources, keeping it from processing other
    requests in the meantime, thus enabling a Denial-of-Service attack.



    [1]: https://www.npmjs.com/package/qs
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.webjars.npm:qs
  vulnerable_versions:
  - "< 1.0.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-10064
  cwe:
  - CWE-400
  disclosed_date: 2014-08-06
  created_date: 2014-08-06
  last_modified_date: 2014-08-06
  credit:
  - Tom Steele
  references:
  - https://nodesecurity.io/advisories/28
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-480105
- id: snykio:maven:org.webjars.npm:qs:480108
  title: Prototype Override Protection Bypass
  description: "[org.webjars.npm:qs][1] is a querystring parser that supports nesting\nand
    arrays, with a depth limit.\n\nAffected versions of this package are vulnerable
    to Prototype Override\nProtection Bypass. By default `qs` protects against attacks
    that attempt\nto overwrite an object\\'s existing prototype properties, such as\n`toString()`,
    `hasOwnProperty()`,etc.\n\nFrom [`qs` documentation][2]\\:\n\n> By default parameters
    that would overwrite properties on the object\n> prototype are ignored, if you
    wish to keep the data from those fields\n> either use plainObjects as mentioned
    above, or set allowPrototypes to\n> true which will allow user input to overwrite
    those properties.\n> WARNING It is generally a bad idea to enable this option
    as it can\n> cause problems when attempting to use the properties that have been\n>
    overwritten. Always be careful with this option.\n\nOverwriting these properties
    can impact application logic, potentially\nallowing attackers to work around security
    controls, modify data, make\nthe application unstable and more.\n\nIn versions
    of the package affected by this vulnerability, it is\npossible to circumvent this
    protection and overwrite prototype\nproperties and functions by prefixing the
    name of the parameter with `[`\nor `]`. e.g. `qs.parse(\"]=toString\")` will return
    `{toString = true}`,\nas a result, calling `toString()` on the object will throw
    an exception.\n\n**Example:**\n\n    qs.parse('toString=foo', { allowPrototypes:
    false })\n    // {}\n    \n    qs.parse(\"]=toString\", { allowPrototypes: false
    })\n    // {toString = true} <== prototype overwritten\n{: .language-js}\n\nFor
    more information, you can check out our [blog][3].\n\n\n\n[1]: https://www.npmjs.com/package/qs\n[2]:
    https://github.com/ljharb/qs\n[3]: https://snyk.io/blog/high-severity-vulnerability-qs/\n"
  affected_package: org.webjars.npm:qs
  vulnerable_versions:
  - "< 6.0.4"
  - ">= 6.1.0 < 6.1.2"
  - ">= 6.2.0 < 6.2.3"
  - ">= 6.3.0 < 6.3.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-1000048
  cwe:
  - CWE-20
  disclosed_date: 2017-02-13
  created_date: 2017-03-01
  last_modified_date: 2017-03-01
  credit:
  - Snyk Security Research Team
  references:
  - https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d
  - https://github.com/ljharb/qs/issues/200
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-480108
- id: snykio:maven:org.webjars.npm:qs:480111
  title: Denial of Service (DoS)
  description: |+
    [org.webjars.npm:qs][1] is a querystring parser that supports nesting
    and arrays, with a depth limit.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). During parsing, the `qs` module may create a sparse area (an
    array where no elements are filled), and grow that array to the
    necessary size based on the indices used on it. An attacker can specify
    a high index value in a query string, thus making the server allocate a
    respectively big array. Truly large values can cause the server to run
    out of memory and cause it to crash - thus enabling a Denial-of-Service
    attack.



    [1]: https://www.npmjs.com/package/qs
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.webjars.npm:qs
  vulnerable_versions:
  - "< 1.0.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2014-7191
  cwe:
  - CWE-400
  disclosed_date: 2014-08-06
  created_date: 2014-08-06
  last_modified_date: 2014-08-06
  credit:
  - Dustin Shiver
  references:
  - https://github.com/tj/node-querystring/pull/114/commits/43a604b7847e56bba49d0ce3e222fe89569354d8
  - https://github.com/visionmedia/node-querystring/issues/104
  - https://nvd.nist.gov/vuln/detail/CVE-2014-7191
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-480111
