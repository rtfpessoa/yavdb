---
- id: ossindex:maven:org.apache.tomcat:coyote:311310
  title: "[CVE-2005-2090] Jakarta Tomcat 5.0.19 (Coyote/1.1) and Tomcat 4.1.24 (Coyote/1.0)
    allows remote ..."
  description: 'Jakarta Tomcat 5.0.19 (Coyote/1.1) and Tomcat 4.1.24 (Coyote/1.0)
    allows remote attackers to poison the web cache, bypass web application firewall
    protection, and conduct XSS attacks via an HTTP request with both a "Transfer-Encoding:
    chunked" header and a Content-Length header, which causes Tomcat to incorrectly
    handle and forward the body of the request in a way that causes the receiving
    server to process it as a separate HTTP request, aka "HTTP Request Smuggling."'
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - '1.0'
  - '1.1'
  package_manager: maven
  cve:
  - CVE-2005-2090
  disclosed_date: 2005-07-05
  created_date: 2005-07-05
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://community.ca.com/blogs/casecurityresponseblog/archive/2009/01/23.aspx
  - http://docs.info.apple.com/article.html?artnum=306172
  - http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c01178795
  - http://lists.apple.com/archives/security-announce//2007/Jul/msg00004.html
  - http://lists.opensuse.org/opensuse-security-announce/2008-03/msg00001.html
  - http://lists.vmware.com/pipermail/security-announce/2008/000003.html
  - http://seclists.org/lists/bugtraq/2005/Jun/0025.html
  - http://secunia.com/advisories/26235
  - http://secunia.com/advisories/26660
  - http://secunia.com/advisories/27037
  - http://secunia.com/advisories/28365
  - http://secunia.com/advisories/29242
  - http://secunia.com/advisories/30899
  - http://secunia.com/advisories/30908
  - http://secunia.com/advisories/33668
  - http://securitytracker.com/id?1014365
  - http://sunsolve.sun.com/search/document.do?assetkey=1-26-239312-1
  - http://support.avaya.com/elmodocs2/security/ASA-2007-206.htm
  - http://support.ca.com/irj/portal/anonymous/phpsupcontent?contentID=197540
  - http://tomcat.apache.org/security-4.html
  - http://tomcat.apache.org/security-5.html
  - http://tomcat.apache.org/security-6.html
  - http://www.fujitsu.com/global/support/software/security/products-f/interstage-200703e.html
  - http://www.redhat.com/support/errata/RHSA-2007-0327.html
  - http://www.redhat.com/support/errata/RHSA-2007-0360.html
  - http://www.redhat.com/support/errata/RHSA-2008-0261.html
  - http://www.securiteam.com/securityreviews/5GP0220G0U.html
  - http://www.securityfocus.com/archive/1/archive/1/485938/100/0/threaded
  - http://www.securityfocus.com/archive/1/archive/1/500396/100/0/threaded
  - http://www.securityfocus.com/archive/1/archive/1/500412/100/0/threaded
  - http://www.securityfocus.com/bid/13873
  - http://www.securityfocus.com/bid/25159
  - http://www.vupen.com/english/advisories/2007/2732
  - http://www.vupen.com/english/advisories/2007/3087
  - http://www.vupen.com/english/advisories/2007/3386
  - http://www.vupen.com/english/advisories/2008/0065
  - http://www.vupen.com/english/advisories/2008/1979/references
  - http://www.vupen.com/english/advisories/2009/0233
  - http://www.watchfire.com/resources/HTTP-Request-Smuggling.pdf
  source_url: https://ossindex.net/resource/package/7015341965/vulnerabilities
- id: ossindex:maven:org.apache.tomcat:coyote:8402545391
  title: "[Disputed] Arbitrary file upload via deserialization"
  description: "> A poison null byte flaw was found in the implementation of the DiskFileItem
    class. A remote attacker able to supply a serialized instance of the DiskFileItem
    class, which will be deserialized on a server, could use this flaw to write arbitrary
    content to any location on the server that is permitted by the user running the
    application server process.\n> \n> -- [redhat.com](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2185)"
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">=7.0.0 <7.0.40"
  package_manager: maven
  disclosed_date: 2017-03-10
  created_date: 2017-03-10
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2185
  - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2185
  - https://github.com/victims/victims-cve-db/blob/master/database/java/2013/2185.yaml
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2185
  source_url: https://ossindex.net/resource/package/7015341965/vulnerabilities
- id: snykio:maven:org.apache.tomcat:coyote:30857
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.tomcat:coyote`][1] Apache Tomcat 5.5.0 through 5.5.29,
    6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid
    Transfer-Encoding header, which allows remote attackers to cause a
    denial of service (application outage) or obtain sensitive information
    via a crafted header that interferes with \"recycling of a buffer.\"



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.27"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-2227
  cwe:
  - CWE-119
  disclosed_date: 2010-07-13
  created_date: 2014-01-10
  last_modified_date: 2014-01-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-2227
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30857
- id: snykio:maven:org.apache.tomcat:coyote:30858
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.tomcat:coyote`][1] Apache Tomcat 7.0.0 through 7.0.6 and
    6.0.0 through 6.0.30 does not enforce the maxHttpHeaderSize limit for
    requests involving the NIO HTTP connector, which allows remote attackers
    to cause a denial of service (OutOfMemoryError) via a crafted request.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 <= 6.0.30"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-0534
  cwe:
  - CWE-399
  disclosed_date: 2011-02-10
  created_date: 2015-06-10
  last_modified_date: 2015-06-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-0534
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30858
- id: snykio:maven:org.apache.tomcat:coyote:30859
  title: Improper Input Validation
  description: |
    [`org.apache.tomcat:coyote`][1] Apache Tomcat 5.5.x before 5.5.34, 6.x
    before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the
    HTTP APR or HTTP NIO connector, does not validate certain request
    attributes, which allows local users to bypass intended file access
    restrictions or cause a denial of service (infinite loop or JVM crash)
    by leveraging an untrusted web application.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.33"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-2526
  cwe:
  - CWE-20
  disclosed_date: 2011-07-14
  created_date: 2015-05-19
  last_modified_date: 2015-05-19
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2526
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30859
- id: snykio:maven:org.apache.tomcat:coyote:30860
  title: Access Restriction Bypass
  description: |
    [`org.apache.tomcat:coyote`][1] Certain AJP protocol connector
    implementations in Apache Tomcat 7.0.0 through 7.0.20, 6.0.0 through
    6.0.33, 5.5.0 through 5.5.33, and possibly other versions allow remote
    attackers to spoof AJP requests, bypass authentication, and obtain
    sensitive information by causing the connector to interpret a request
    body as a new request.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 <= 6.0.33"
  severity: high
  package_manager: maven
  cve:
  - CVE-2011-3190
  cwe:
  - CWE-264
  disclosed_date: 2011-08-31
  created_date: 2015-06-10
  last_modified_date: 2015-06-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-3190
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30860
- id: snykio:maven:org.apache.tomcat:coyote:30861
  title: Information Exposure
  description: |+
    `org.apache.tomcat:coyote` is a maven plugin for Tomcat Connectors and
    HTTP parser.

    Affected versions of this package are vulnerable to Information
    Exposure. Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does
    not properly perform certain caching and recycling operations involving
    request objects, which allows remote attackers to obtain unintended read
    access to IP address and HTTP header information in opportunistic
    circumstances by reading TCP data.

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0.30 < 6.0.34"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-3375
  cwe:
  - CWE-200
  disclosed_date: 2012-01-19
  created_date: 2015-06-10
  last_modified_date: 2015-06-10
  credit:
  - Unknown
  references:
  - http://svn.apache.org/viewvc?view=revision&revision=1176592
  - http://svn.apache.org/viewvc?view=revision&revision=1185998
  - http://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.22
  - https://github.com/apache/tomcat/commit/9eae334e9492f55a841e6eb7ab302ff11d03ab21
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30861
- id: snykio:maven:org.apache.tomcat:coyote:30862
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.tomcat:coyote`][1] Apache Tomcat 5.5.x before 5.5.35, 6.x
    before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for
    handling parameters, which allows remote attackers to cause a denial of
    service (CPU consumption) via a request that contains many parameters
    and parameter values, a different vulnerability than CVE-2011-4858.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.34"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-0022
  cwe:
  - CWE-189
  disclosed_date: 2012-01-19
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0022
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30862
- id: snykio:maven:org.apache.tomcat:coyote:30863
  title: Improper Input Validation
  description: |
    [`org.apache.tomcat:coyote`][1]
    java/org/apache/coyote/http11/InternalNioInputBuffer.java in the HTTP
    NIO connector in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28
    does not properly restrict the request-header size, which allows remote
    attackers to cause a denial of service (memory consumption) via a large
    amount of header data.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.36"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-2733
  cwe:
  - CWE-20
  disclosed_date: 2012-11-16
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-2733
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30863
- id: snykio:maven:org.apache.tomcat:coyote:30864
  title: Improper Input Validation
  description: |
    [`org.apache.tomcat:coyote`][1] Apache Tomcat 6.x before 6.0.37 and 7.x
    before 7.0.30 does not properly handle chunk extensions in chunked
    transfer coding, which allows remote attackers to cause a denial of
    service by streaming data.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.37"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-3544
  cwe:
  - CWE-20
  disclosed_date: 2013-06-01
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-3544
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30864
- id: snykio:maven:org.apache.tomcat:coyote:30865
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.tomcat:coyote`][1]
    org/apache/tomcat/util/net/NioEndpoint.java in Apache Tomcat 6.x before
    6.0.36 and 7.x before 7.0.28, when the NIO connector is used in
    conjunction with sendfile and HTTPS, allows remote attackers to cause a
    denial of service (infinite loop) by terminating the connection during
    the reading of a response.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0 < 6.0.36"
  severity: low
  package_manager: maven
  cve:
  - CVE-2012-4534
  cwe:
  - CWE-399
  disclosed_date: 2012-12-19
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-4534
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30865
- id: snykio:maven:org.apache.tomcat:coyote:30866
  title: Improper Input Validation
  description: |
    [`org.apache.tomcat:coyote`][1] Apache Tomcat before 6.0.39, 7.x before
    7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP
    connector is used, does not properly handle certain inconsistent HTTP
    request headers, which allows remote attackers to trigger incorrect
    identification of a request\'s length and conduct request-smuggling
    attacks via (1) multiple Content-Length headers or (2) a Content-Length
    header and a \"Transfer-Encoding: chunked\" header. NOTE: this
    vulnerability exists because of an incomplete fix for CVE-2005-2090.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0.13 < 6.0.39"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-4286
  cwe:
  - CWE-20
  disclosed_date: 2014-02-26
  created_date: 2015-03-03
  last_modified_date: 2015-03-03
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4286
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30866
- id: snykio:maven:org.apache.tomcat:coyote:30867
  title: Improper Input Validation
  description: |
    [`org.apache.tomcat:coyote`][1] Apache Tomcat before 6.0.39, 7.x before
    7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding
    without properly handling (1) a large total amount of chunked data or
    (2) whitespace characters in an HTTP header value within a trailer
    field, which allows remote attackers to cause a denial of service by
    streaming data. NOTE: this vulnerability exists because of an incomplete
    fix for CVE-2012-3544.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.39"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-4322
  cwe:
  - CWE-20
  disclosed_date: 2014-02-26
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4322
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30867
- id: snykio:maven:org.apache.tomcat:coyote:30868
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.tomcat:coyote`][1] Integer overflow in the parseChunkHeader
    function in
    java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache
    Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows
    remote attackers to cause a denial of service (resource consumption) via
    a malformed chunk size in chunked transfer coding of a request during
    the streaming of data.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0 < 6.0.40"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0075
  cwe:
  - CWE-189
  disclosed_date: 2014-05-31
  created_date: 2014-09-08
  last_modified_date: 2014-09-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0075
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30868
- id: snykio:maven:org.apache.tomcat:coyote:30869
  title: HTTP Request Smuggling
  description: |
    [`org.apache.tomcat:coyote`][1] Integer overflow in
    java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before
    6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a
    reverse proxy, allows remote attackers to conduct HTTP request smuggling
    attacks via a crafted Content-Length HTTP header.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.40"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0099
  cwe:
  - CWE-189
  disclosed_date: 2014-05-31
  created_date: 2015-03-03
  last_modified_date: 2015-03-03
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0099
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30869
- id: snykio:maven:org.apache.tomcat:coyote:30870
  title: HTTP Request Smuggling
  description: |
    [`org.apache.tomcat:coyote`][1]
    java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache
    Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does
    not properly handle attempts to continue reading data after an error has
    occurred, which allows remote attackers to conduct HTTP request
    smuggling attacks or cause a denial of service (resource consumption) by
    streaming data with malformed chunked transfer coding.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.42"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0227
  cwe:
  - CWE-19
  disclosed_date: 2015-02-16
  created_date: 2015-02-16
  last_modified_date: 2015-02-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0227
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30870
- id: snykio:maven:org.apache.tomcat:coyote:30871
  title: Information Exposure
  description: |+
    `org.apache.tomcat:coyote` is a maven plugin for Tomcat Connectors and
    HTTP parser.

    Affected versions of this package are vulnerable to Information
    Exposure. The code that parsed the HTTP request line permitted invalid
    characters. This could be exploited, in conjunction with a proxy that
    also permitted the invalid characters but with a different
    interpretation, to inject data into the HTTP response. By manipulating
    the HTTP response the attacker could poison a web-cache, perform an XSS
    attack and/or obtain sensitive information from requests other then
    their own.

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0.13 < 6.0.48"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-6816
  cwe:
  - CWE-200
  disclosed_date: 2016-11-23
  created_date: 2016-11-23
  last_modified_date: 2016-11-23
  credit:
  - Regis Leroy
  references:
  - https://github.com/apache/tomcat/commit/516bda676ac8d0284da3e0295a7df70391315360
  - https://github.com/apache/tomcat/commit/cdc0a935c2173aff60039a0b85e57a461381107c
  - https://github.com/apache/tomcat/commit/f96f5751d418ae5a2f550be040daf9c5f7d99256
  - https://github.com/apache/tomcat80/commit/779d5d34e68e50d2f721897050b147106992f566
  - https://tomcat.apache.org/security-6.html#Fixed_in_Apache_Tomcat_6.0.48
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6816
  - https://www.exploit-db.com/exploits/41783
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30871
- id: snykio:maven:org.apache.tomcat:coyote:30872
  title: Arbitrary Code Execution
  description: |
    [`org.apache.tomcat:coyote`][1] Affected versions of the package are
    vulnerable to Arbitrary Code Execution. The JmxRemoteLifecycleListener
    was not updated to take account of Oracle\'s fix for CVE-2016-3427.
    Therefore, Tomcat installations using this listener remained vulnerable
    to a similar remote code execution vulnerability. This issue has been
    rated as important rather than critical due to the small number of
    installations using this listener and that it would be highly unusual
    for the JMX ports to be accessible to an attacker even when the listener
    is used.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6.0.16 <= 6.0.48"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-8745
  cwe:
  - CWE-200
  disclosed_date: 2016-12-13
  created_date: 2016-12-13
  last_modified_date: 2016-12-13
  credit:
  - Tomcat security team
  references:
  - http://seclists.org/bugtraq/2016/Dec/15
  - http://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.9
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-30872
- id: snykio:maven:org.apache.tomcat:coyote:31431
  title: Information Exposure
  description: |
    [`org.apache.tomcat:coyote`][1] A bug in the handling of the pipelined
    requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12,
    8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send
    file was used, results in the pipelined request being lost when send
    file processing of the previous request completed. This could result in
    responses appearing to be sent for the wrong request. For example, a
    user agent that sent requests A, B and C could see the correct response
    for request A, the response for request C for request B and no response
    for request C.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22coyote%22
  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 6 < 6.0.53"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-5647
  cwe:
  - CWE-200
  disclosed_date: 2017-04-11
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Tomcat Security Team
  references:
  - https://lists.apache.org/thread.html/5796678c5a773c6f3ff57c178ac247d85ceca0dee9190ba48171451a@%3Cusers.tomcat.apache.org%3E
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5647
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-31431
- id: snykio:maven:org.apache.tomcat:coyote:551993
  title: Arbitrary File Upload
  description: |+
    `org.apache.tomcat:coyote` is a maven plugin for Tomcat Connectors and
    HTTP parser.

    Affected versions of this package are vulnerable to Arbitrary File
    Upload. This is enabled by default with a default configuration port of
    `8009`. A remote, unauthenticated attacker could exploit this
    vulnerability to read web application files from a vulnerable server. In
    instances where the vulnerable server allows file uploads, an attacker
    could upload malicious JavaServer Pages (JSP) code within a variety of
    file types and trigger this vulnerability to gain remote code execution
    (RCE).

  affected_package: org.apache.tomcat:coyote
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-1938
  cwe:
  - CWE-285
  disclosed_date: 2020-02-20
  created_date: 2020-02-24
  last_modified_date: 2020-02-24
  credit:
  - Chaitin Tech
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1806398
  - https://github.com/apache/tomcat/commit/0d633e72ebc7b3c242d0081c23bba5e4dacd9b72
  - https://github.com/apache/tomcat/commit/0f725b323a74b64cdb35fce04b54427582ad6063
  - https://github.com/apache/tomcat/commit/15cd78c528425c693f1d2b51057f32d3d63d360a
  - https://github.com/apache/tomcat/commit/b99fba5bd796d876ea536e83299603443842feba
  - https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi
  - https://www.tenable.com/blog/cve-2020-1938-ghostcat-apache-tomcat-ajp-file-readinclusion-vulnerability-cnvd-2020-10487
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHETOMCAT-551993
