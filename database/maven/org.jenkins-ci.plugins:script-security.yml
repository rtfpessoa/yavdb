---
- id: snykio:maven:org.jenkins-ci.plugins:script-security:1012541
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Script Security Plugin provides a sandbox feature that allows low
    privileged users to define scripts, including Pipelines, that are
    generally safe to execute. Calls to code defined inside a sandboxed
    script are intercepted, and various allowlists are checked to determine
    whether the call is to be allowed.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.75"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-2279
  cwe:
  - CWE-265
  disclosed_date: 2020-09-24
  created_date: 2020-09-24
  last_modified_date: 2020-09-24
  credit:
  - CloudBees
  - CloudBees
  - Inc.
  - Inc. and Daniel Beck
  - Wadeck Follonier
  references:
  - https://www.jenkins.io/security/advisory/2020-09-23/#SECURITY-2020
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-1012541
- id: snykio:maven:org.jenkins-ci.plugins:script-security:173668
  title: Arbitrary Code Execution
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. An attacker with `Overall/Read` permission could provide a
    Groovy script to an HTTP endpoint that can result in arbitrary code
    execution on the Jenkins master JVM.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.51"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003005
  cwe:
  - CWE-94
  disclosed_date: 2019-01-28
  created_date: 2019-02-06
  last_modified_date: 2019-02-06
  credit:
  - Mikhail Egorov
  references:
  - https://github.com/jenkinsci/script-security-plugin/commit/35119273101af26792457ec177f34f6f4fa49d99
  - https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1292
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-173668
- id: snykio:maven:org.jenkins-ci.plugins:script-security:173716
  title: Arbitrary Code Execution
  description: |
    [org.jenkins-ci.plugins:script-security][1] package that allows Jenkins
    administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution in `RejectASTTransformsCustomizer.java`. It is possible for
    attackers with Overall/Read permission to provide a Groovy script to an
    HTTP endpoint that can result in arbitrary code execution on the Jenkins
    master JVM.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.5.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003024
  cwe:
  - CWE-265
  disclosed_date: 2019-02-20
  created_date: 2019-02-21
  last_modified_date: 2019-02-21
  credit:
  - CloudBees
  - Daniel Beck
  - Inc.
  references:
  - https://jenkins.io/security/advisory/2019-02-19/#SECURITY-1320
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-173716
- id: snykio:maven:org.jenkins-ci.plugins:script-security:174033
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] package that allows Jenkins
    administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass. It
    allows attackers to invoke arbitrary constructors in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.56"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003040
  - CVE-2019-1003041
  cwe:
  - CWE-265
  disclosed_date: 2019-03-28
  created_date: 2019-03-28
  last_modified_date: 2019-03-28
  credit:
  - Anthony Weems
  references:
  - https://github.com/jenkinsci/script-security-plugin/commit/8424ad90547e37a2bd3b6a3a7da48eb1af9cd0ee
  - https://jenkins.io/security/advisory/2019-03-25/#SECURITY-1353
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-174033
- id: snykio:maven:org.jenkins-ci.plugins:script-security:32171
  title: Arbitrary File Read
  description: |
    [org.jenkins-ci.plugins:script-security][1] allows Jenkins
    administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Arbitrary File Read.
    Users with the ability to configure sandboxed Groovy scripts are able to
    use a type coercion feature in Groovy to create new `File` objects from
    strings. This allowed reading arbitrary files on the Jenkins master file
    system. Such a type coercion is now subject to sandbox protection and
    considered to be a call to the `new File(String)` constructor for the
    purpose of in-process script approval.



    [1]: https://github.com/jenkinsci/script-security-plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.37"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2017-1000505
  cwe:
  - CWE-200
  disclosed_date: 2017-12-01
  created_date: 2018-04-08
  last_modified_date: 2018-04-08
  credit:
  - Gregory Draperi
  references:
  - https://github.com/jenkinsci/script-security-plugin/commit/4caaa50e570dafa15c73badac250eb31878ab3ba
  - https://jenkins.io/security/advisory/2017-12-11/
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000505
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-32171
- id: snykio:maven:org.jenkins-ci.plugins:script-security:32254
  title: Arbitrary Code Execution
  description: |
    [org.jenkins-ci.plugins:script-security][1] Allows Jenkins
    administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. It might allow remote attackers to bypass a Groovy sandbox
    protection mechanism via a plugin that performs (1) direct field access
    or (2) get/set array operations.



    [1]: https://github.com/jenkinsci/script-security-plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.18.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-3102
  cwe:
  - CWE-254
  disclosed_date: 2016-03-28
  created_date: 2018-05-08
  last_modified_date: 2018-05-08
  credit:
  - Daniel Beck
  references:
  - https://github.com/jenkinsci/script-security-plugin/commit/e7d3bc9c1e25caa23cea33381134a4baaedc75b8
  - https://jenkins.io/security/advisory/2016-04-11/
  - https://nvd.nist.gov/vuln/detail/CVE-2016-3102
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-32254
- id: snykio:maven:org.jenkins-ci.plugins:script-security:449971
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] package that allows Jenkins
    administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass. An
    attacker with `Overall/Read` permission could execute arbitrary code on
    the Jenkins master JVM.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.56"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003029
  cwe:
  - CWE-254
  disclosed_date: 2019-03-06
  created_date: 2019-06-26
  last_modified_date: 2019-06-26
  credit:
  - Georgy Noseevich
  - SolidLab
  references:
  - https://jenkins.io/security/advisory/2019-03-06/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-449971
- id: snykio:maven:org.jenkins-ci.plugins:script-security:456243
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Issue related to the handling of type casts allows an attacker to
    execute arbitrary code in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.62"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-10355
  cwe:
  - CWE-265
  disclosed_date: 2019-07-31
  created_date: 2019-08-01
  last_modified_date: 2019-08-01
  credit:
  - Unknown
  references:
  - https://jenkins.io/security/advisory/2019-07-31/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-456243
- id: snykio:maven:org.jenkins-ci.plugins:script-security:456244
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Issue related to the handling of method pointer expressions allowed
    attackers to execute arbitrary code in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.62"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-10356
  cwe:
  - CWE-265
  disclosed_date: 2019-07-31
  created_date: 2019-08-01
  last_modified_date: 2019-08-01
  credit:
  - Unknown
  references:
  - https://jenkins.io/security/advisory/2019-07-31/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-456244
- id: snykio:maven:org.jenkins-ci.plugins:script-security:466731
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Sandbox protection in Script Security Plugin could be circumvented
    through any of the following:

    * Crafted method names in method call expressions (CVE-2019-10393)

    * Crafted property names in property expressions on the left-hand side
      of assignment expressions (CVE-2019-10394)

    * Crafted property names in property expressions in increment and
      decrement expressions (CVE-2019-10399)

    * Crafted subexpressions in increment and decrement expressions not
      involving actual assignment (CVE-2019-10400)

    This allowed attackers able to specify and run sandboxed scripts to
    execute arbitrary code in the Jenkins master JVM.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.63"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2019-10393
  - CVE-2019-10394
  - CVE-2019-10399
  - CVE-2019-10400
  cwe:
  - CWE-265
  disclosed_date: 2019-09-12
  created_date: 2019-09-13
  last_modified_date: 2019-09-13
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://github.com/jenkinsci/script-security-plugin/commit/b28e4dc5584ef6515aeb9bc834691176546d0689
  - https://jenkins.io/security/advisory/2019-09-12/
  - https://plugins.jenkins.io/script-security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-466731
- id: snykio:maven:org.jenkins-ci.plugins:script-security:471339
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Handling of default parameter expressions in constructors allowed
    attackers to execute arbitrary code in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.65"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-10431
  cwe:
  - CWE-265
  disclosed_date: 2019-10-01
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://jenkins.io/security/advisory/2019-10-01/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-471339
- id: snykio:maven:org.jenkins-ci.plugins:script-security:535483
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass due
    to the handling of default parameter expressions in closures. It allowed
    attackers to execute arbitrary code in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.68"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-16538
  cwe:
  - CWE-265
  disclosed_date: 2019-11-21
  created_date: 2020-01-09
  last_modified_date: 2020-01-09
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://jenkins.io/security/advisory/2019-11-21/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-535483
- id: snykio:maven:org.jenkins-ci.plugins:script-security:535484
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass due
    to the handling of default parameter expressions in closures. It allowed
    attackers to execute arbitrary code in sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.68"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-16538
  cwe:
  - CWE-265
  disclosed_date: 2019-11-21
  created_date: 2019-11-24
  last_modified_date: 2019-11-24
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://jenkins.io/security/advisory/2019-11-21/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-535484
- id: snykio:maven:org.jenkins-ci.plugins:script-security:548688
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Sandbox protection in Jenkins Script Security Plugin could be
    circumvented during the script compilation phase by applying AST
    transforming annotations to imports or by using them inside of other
    annotations.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.70"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-2110
  cwe:
  - CWE-265
  disclosed_date: 2020-02-12
  created_date: 2020-02-13
  last_modified_date: 2020-02-13
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://jenkins.io/security/advisory/2020-02-12/
  - https://plugins.jenkins.io/script-security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-548688
- id: snykio:maven:org.jenkins-ci.plugins:script-security:559573
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass. It
    allows attackers which are able to specify and run sandboxed scripts to
    execute arbitrary code in the context of the Jenkins master JVM.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.71"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-2134
  - CVE-2020-2135
  cwe:
  - CWE-265
  disclosed_date: 2020-03-09
  created_date: 2020-03-10
  last_modified_date: 2020-03-10
  credit:
  - Nils Emmerich of ERNW Research GmbH
  references:
  - https://jenkins.io/security/advisory/2020-03-09/
  - https://plugins.jenkins.io/script-security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-559573
- id: snykio:maven:org.jenkins-ci.plugins:script-security:571310
  title: Cross-site Scripting (XSS)
  description: |+
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). They incorrectly escape pending or approved classpath entries on
    the On-process Script Approval page. This results in a stored cross-site
    scripting (XSS) vulnerability exploitable by users able to configure
    sandboxed scripts.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.73"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2020-2190
  cwe:
  - CWE-79
  disclosed_date: 2020-06-04
  created_date: 2020-06-04
  last_modified_date: 2020-06-04
  credit:
  - CloudBees
  - Inc.
  - Wadeck Follonier
  references:
  - https://www.jenkins.io/security/advisory/2020-06-03/#SECURITY-1866
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-571310
- id: snykio:maven:org.jenkins-ci.plugins:script-security:73604
  title: Sandbox Bypass
  description: |
    [org.jenkins-ci.plugins:script-security][1] is a package that allows
    Jenkins administrators to control what in-process scripts can be run by
    less-privileged users.

    Affected versions of this package are vulnerable to Sandbox Bypass. A
    malicious user with `Overall/Read` permission, or able to control
    Jenkins file or sandboxed Pipeline shared library contents in SCM, could
    bypass the sandbox protection and execute arbitrary code on the Jenkins
    master.



    [1]: https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin
  affected_package: org.jenkins-ci.plugins:script-security
  vulnerable_versions:
  - "< 1.50"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003000
  cwe:
  - CWE-265
  disclosed_date: 2019-01-22
  created_date: 2019-01-22
  last_modified_date: 2019-01-22
  credit:
  - Orange Tsai
  references:
  - https://exploit-db.com/exploits/46572
  - https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c
  - https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266
  - https://www.exploit-db.com/exploits/46453
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-73604
