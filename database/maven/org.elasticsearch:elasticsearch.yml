---
- id: ossindex:maven:org.elasticsearch:elasticsearch:362075
  title: "[CVE-2014-3120]  Improper Access Control"
  description: 'The default configuration in Elasticsearch before 1.2 enables dynamic
    scripting, which allows remote attackers to execute arbitrary MVEL expressions
    and Java code via the source parameter to _search.  NOTE: this only violates the
    vendor''s intended security policy if the user does not run Elasticsearch in its
    own independent virtual machine.'
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.2.0"
  package_manager: maven
  cve:
  - CVE-2014-3120
  disclosed_date: 2014-07-28
  created_date: 2014-07-28
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://bouk.co/blog/elasticsearch-rce/
  - http://www.exploit-db.com/exploits/33370
  - http://www.osvdb.org/106949
  - http://www.rapid7.com/db/modules/exploit/multi/elasticsearch/script_mvel_rce
  - http://www.securityfocus.com/bid/67731
  - https://www.elastic.co/blog/logstash-1-4-3-released
  - https://www.elastic.co/community/security/
  - https://www.found.no/foundation/elasticsearch-security/#staying-safe-while-developing-with-elasticsearch
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:364597
  title: '[CVE-2014-6439]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in the CORS functionality
    in Elasticsearch before 1.4.0.Beta1 allows remote attackers to inject arbitrary
    web script or HTML via unspecified vectors.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.4.0.Beta1"
  package_manager: maven
  cve:
  - CVE-2014-6439
  disclosed_date: 2014-10-10
  created_date: 2014-10-10
  last_modified_date: 2017-04-16
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/128556/Elasticsearch-1.3.x-CORS-Issue.html
  - http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/
  - http://www.securityfocus.com/archive/1/archive/1/533602/100/0/threaded
  - http://www.securityfocus.com/bid/70233
  - https://www.elastic.co/community/security/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:367261
  title: "[CVE-2015-1427]  Improper Access Control"
  description: The Groovy scripting engine in Elasticsearch before 1.3.8 and 1.4.x
    before 1.4.3 allows remote attackers to bypass the sandbox protection mechanism
    and execute arbitrary shell commands via a crafted script.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<=1.3.8"
  - ">=1.4.0 <1.4.3"
  package_manager: maven
  cve:
  - CVE-2015-1427
  disclosed_date: 2015-02-17
  created_date: 2015-02-17
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/130368/Elasticsearch-1.3.7-1.4.2-Sandbox-Escape-Command-Execution.html
  - http://packetstormsecurity.com/files/130784/ElasticSearch-Unauthenticated-Remote-Code-Execution.html
  - http://www.elasticsearch.com/blog/elasticsearch-1-4-3-1-3-8-released/
  - http://www.securityfocus.com/archive/1/archive/1/534689/100/0/threaded
  - http://www.securityfocus.com/bid/72585
  - http://xforce.iss.net/xforce/xfdb/100850
  - https://access.redhat.com/errata/RHSA-2017:0868
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/100850
  - https://www.elastic.co/community/security/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:6999915896
  title: '[CVE-2015-3337]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Elasticsearch before 1.4.5 and
    1.5.x before 1.5.2, when a site plugin is enabled, allows remote attackers to
    read arbitrary files via unspecified vectors.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.4.5"
  - ">=1.5.0 <1.5.2"
  package_manager: maven
  cve:
  - CVE-2015-3337
  disclosed_date: 2015-05-01
  created_date: 2015-05-01
  last_modified_date: 2017-04-18
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/131646/Elasticsearch-Directory-Traversal.html
  - http://www.debian.org/security/2015/dsa-3241
  - http://www.securityfocus.com/archive/1/535385
  - http://www.securityfocus.com/bid/74353
  - https://www.elastic.co/community/security
  - https://www.exploit-db.com/exploits/37054/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:7152926325
  title: '[CVE-2015-5531]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Elasticsearch before 1.6.1 allows
    remote attackers to read arbitrary files via unspecified vectors related to snapshot
    API calls.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.6.1"
  package_manager: maven
  cve:
  - CVE-2015-5531
  disclosed_date: 2015-08-17
  created_date: 2015-08-17
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/132721/Elasticsearch-Directory-Traversal.html
  - http://packetstormsecurity.com/files/133797/ElasticSearch-Path-Traversal-Arbitrary-File-Download.html
  - http://packetstormsecurity.com/files/133964/ElasticSearch-Snapshot-API-Directory-Traversal.html
  - http://www.securityfocus.com/archive/1/archive/1/536017/100/0/threaded
  - http://www.securityfocus.com/bid/75935
  - https://www.elastic.co/community/security/
  - https://www.exploit-db.com/exploits/38383/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: snykio:maven:org.elasticsearch:elasticsearch:30092
  title: Cross-site Scripting (XSS)
  description: |+
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). It is possible for remote attackers to inject arbitrary web
    script or HTML via unspecified vectors.



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.4.0.Beta1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-6439
  cwe:
  - CWE-79
  disclosed_date: 2014-10-10
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-6439
  - https://github.com/elastic/elasticsearch/pull/7642
  - https://github.com/elasticsearch/elasticsearch/issues/7151
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-30092
- id: snykio:maven:org.elasticsearch:elasticsearch:31127
  title: Improper Access Control
  description: |
    [`org.elasticsearch:elasticsearch`][1] The Groovy scripting engine in
    Elasticsearch before 1.3.8 and 1.4.x before 1.4.3 allows remote
    attackers to bypass the sandbox protection mechanism and execute
    arbitrary shell commands via a crafted script.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 0.6.0 < 1.3.8"
  - ">= 1.4.0 < 1.4.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-1427
  cwe:
  - CWE-284
  disclosed_date: 2015-02-17
  created_date: 2015-02-18
  last_modified_date: 2015-02-18
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-1427
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31127
- id: snykio:maven:org.elasticsearch:elasticsearch:31128
  title: Directory Traversal
  description: |
    [`org.elasticsearch:elasticsearch`][1] Directory traversal vulnerability
    in Elasticsearch before 1.4.5 and 1.5.x before 1.5.2, when a site plugin
    is enabled, allows remote attackers to read arbitrary files via
    unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.4.5"
  - ">= 1.5.0 < 1.5.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-3337
  cwe:
  - CWE-22
  disclosed_date: 2015-05-01
  created_date: 2016-06-09
  last_modified_date: 2016-06-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3337
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31128
- id: snykio:maven:org.elasticsearch:elasticsearch:31129
  title: Arbitrary Code Execution
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. The snapshot API may be used indirectly to place snapshot
    metadata files into locations that are writeable by the user running the
    Elasticsearch process. It is possible to create a file that another
    application could read and take action on, resulting in code execution.



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.6.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-4165
  cwe:
  - CWE-95
  disclosed_date: 2015-06-10
  created_date: 2015-06-10
  last_modified_date: 2015-06-10
  credit:
  - Unknown
  references:
  - http://seclists.org/bugtraq/2015/Jun/53
  - https://github.com/elastic/elasticsearch/commit/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31129
- id: snykio:maven:org.elasticsearch:elasticsearch:31130
  title: Arbitrary Code Execution
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Elasticsearch versions prior to 1.6.1 are vulnerable to an
    engineered attack on its transport protocol that enables remote code
    execution. This issue is related to the Groovy announcement in
    [CVE-2015-3253][2].



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
    [2]: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31130
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.6.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-5377
  cwe:
  - CWE-94
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2015-07-16
  credit:
  - Unknown
  references:
  - http://seclists.org/bugtraq/2015/Jul/82
  - https://discuss.elastic.co/t/elasticsearch-remote-code-execution-cve-2015-5377/25736
  - https://github.com/elastic/elasticsearch/commit/bf3052d14c874aead7da8855c5fcadf5428a43f2
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31130
- id: snykio:maven:org.elasticsearch:elasticsearch:31131
  title: Directory Traversal
  description: |
    [`org.elasticsearch:elasticsearch`][1] Directory traversal vulnerability
    in Elasticsearch before 1.6.1 allows remote attackers to read arbitrary
    files via unspecified vectors related to snapshot API calls.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.6.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-5531
  cwe:
  - CWE-22
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2015-07-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5531
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31131
- id: snykio:maven:org.elasticsearch:elasticsearch:460545
  title: Race Condition
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Race Condition. None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 6.8.2"
  - ">= 7.0.0 < 7.2.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2019-7614
  cwe:
  - CWE-362
  disclosed_date: 2019-07-30
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://www.elastic.co/community/security/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460545
- id: snykio:maven:org.elasticsearch:elasticsearch:460546
  title: Privilege Escalation
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Privilege Escalation
    None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 5.6.15"
  - ">= 6.0.0 < 6.6.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-7611
  cwe:
  - CWE-275
  disclosed_date: 2019-03-25
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-6-1-and-5-6-15-security-update/169077
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460546
- id: snykio:maven:org.elasticsearch:elasticsearch:460547
  title: XML External Entity (XXE) Injection
  description: |+
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.5.0 < 6.5.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-17247
  cwe:
  - CWE-611
  disclosed_date: 2018-12-20
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-5-2-security-update/159594
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460547
- id: snykio:maven:org.elasticsearch:elasticsearch:460549
  title: Information Exposure
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Information
    Exposure. None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.4.0 < 6.4.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-17244
  cwe:
  - CWE-200
  disclosed_date: 2018-12-20
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-4-3-and-5-6-13-security-update/155594
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460549
- id: snykio:maven:org.elasticsearch:elasticsearch:460551
  title: Information Exposure
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Information Exposure
    None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 5.6.0 < 5.6.12"
  - ">= 6.0.0 < 6.4.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-3831
  cwe:
  - CWE-200
  disclosed_date: 2018-09-19
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-4-1-and-5-6-12-security-update/149035
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460551
- id: snykio:maven:org.elasticsearch:elasticsearch:460552
  title: Information Exposure
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Information Exposure
    None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.0.0 < 6.3.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-3826
  cwe:
  - CWE-200
  disclosed_date: 2018-09-19
  created_date: 2018-09-19
  last_modified_date: 2018-09-19
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-3-0-and-5-6-10-security-update/135777
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460552
- id: snykio:maven:org.elasticsearch:elasticsearch:460554
  title: Information Exposure
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Information
    Exposure. None



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.0.0 < 6.3.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-3827
  cwe:
  - CWE-200
  disclosed_date: 2018-09-19
  created_date: 2019-09-02
  last_modified_date: 2019-09-02
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-3-0-and-5-6-10-security-update/135777
  - https://www.elastic.co/community/security
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-460554
- id: snykio:maven:org.elasticsearch:elasticsearch:472589
  title: Arbitrary Code Execution
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Enables dynamic scripting, which allows remote attackers to
    execute arbitrary MVEL expressions and Java code via the source
    parameter to `_search`. NOTE: this only violates the vendor\'s intended
    security policy if the user does not run Elasticsearch in its own
    independent virtual machine.



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.2.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3120
  cwe:
  - CWE-94
  disclosed_date: 2014-04-25
  created_date: 2019-11-26
  last_modified_date: 2019-11-26
  credit:
  - Unknown
  references:
  - http://bouk.co/blog/elasticsearch-rce/
  - http://www.exploit-db.com/exploits/33370
  - https://github.com/elastic/elasticsearch/commit/95bd04b2c7fd7387c7e3b3367361dcf9fe9f9d06
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-472589
- id: snykio:maven:org.elasticsearch:elasticsearch:474622
  title: Information Exposure
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Information
    Exposure. An unauthenticated attacker could send a specially crafted
    request and determine if a username exists in the Elasticsearch native
    realm.



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.0.0 < 6.8.4"
  - ">= 7.0.0 < 7.4.0"
  severity: low
  package_manager: maven
  cve:
  - CVE-2019-7619
  cwe:
  - CWE-200
  disclosed_date: 2019-10-30
  created_date: 2019-10-30
  last_modified_date: 2019-10-30
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-8-4-security-update/204908
  - https://discuss.elastic.co/t/elastic-stack-7-4-0-security-update/201831
  - https://github.com/elastic/elasticsearch/commit/9964d89dd5d67cf72a85eb48d76347f09bd875f5
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-474622
- id: snykio:maven:org.elasticsearch:elasticsearch:564117
  title: Privilege Escalation
  description: |
    [org.elasticsearch:elasticsearch][1] is a Distributed, RESTful Search
    Engine.

    Affected versions of this package are vulnerable to Privilege
    Escalation. An attacker who is able to generate an API key can perform a
    series of steps that result in an API key being generated with elevated
    privileges.



    [1]: https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 6.7.0 < 6.8.8"
  - ">= 7.0.0 < 7.6.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-7009
  cwe:
  - CWE-269
  disclosed_date: 2020-03-31
  created_date: 2020-04-01
  last_modified_date: 2020-04-01
  credit:
  - Unknown
  references:
  - https://discuss.elastic.co/t/elastic-stack-6-8-8-and-7-6-2-security-update/225920
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-564117
- id: victims:maven:org.elasticsearch:elasticsearch:2014-6439
  title: 'Elasticsearch: CSRF via insecure CORS default configuration'
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<=1.3.4"
  patched_versions:
  - ">=1.4.0.Beta1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-6439
  cvss_v2_score: 4.3
  credit:
  - Victims CVE Database
  references:
  - http://www.elasticsearch.org/community/security/
  - https://bugzilla.redhat.com/CVE-2014-6439
  - https://github.com/elasticsearch/elasticsearch/issues/7151
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/6439.yaml
