---
- id: ossindex:maven:org.apache.httpcomponents:httpclient:345695
  title: "[CVE-2011-1498]  Information Exposure"
  description: Apache HttpClient 4.x before 4.1.1 in Apache HttpComponents, when used
    with an authenticating proxy server, sends the Proxy-Authorization header to the
    origin server, which allows remote web servers to obtain sensitive information
    by logging this header.
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - '4.0'
  - 4.0.1
  - '4.1'
  package_manager: maven
  cve:
  - CVE-2011-1498
  disclosed_date: 2011-07-07
  created_date: 2011-07-07
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2011-June/061440.html
  - http://marc.info/?l=httpclient-users&m=129853896315461&w=2
  - http://marc.info/?l=httpclient-users&m=129856318011586&w=2
  - http://marc.info/?l=httpclient-users&m=129857589129183&w=2
  - http://marc.info/?l=httpclient-users&m=129858274406594&w=2
  - http://marc.info/?l=httpclient-users&m=129858299106950&w=2
  - http://openwall.com/lists/oss-security/2011/04/07/7
  - http://openwall.com/lists/oss-security/2011/04/08/1
  - http://securityreason.com/securityalert/8298
  - http://www.apache.org/dist/httpcomponents/httpclient/RELEASE_NOTES-4.1.x.txt
  - http://www.kb.cert.org/vuls/id/153049
  - http://www.securityfocus.com/bid/46974
  - https://bugzilla.redhat.com/show_bug.cgi?id=709531
  - https://issues.apache.org/jira/browse/HTTPCLIENT-1061
  source_url: https://ossindex.net/resource/package/7015365422/vulnerabilities
- id: ossindex:maven:org.apache.httpcomponents:httpclient:353499
  title: "[CVE-2012-5783]  Improper Input Validation"
  description: Apache Commons HttpClient 3.x, as used in Amazon Flexible Payments
    Service (FPS) merchant Java SDK and other products, does not verify that the server
    hostname matches a domain name in the subject's Common Name (CN) or subjectAltName
    field of the X.509 certificate, which allows man-in-the-middle attackers to spoof
    SSL servers via an arbitrary valid certificate.
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - '3.0'
  package_manager: maven
  cve:
  - CVE-2012-5783
  disclosed_date: 2012-11-04
  created_date: 2012-11-04
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://lists.opensuse.org/opensuse-updates/2013-02/msg00078.html
  - http://lists.opensuse.org/opensuse-updates/2013-04/msg00040.html
  - http://lists.opensuse.org/opensuse-updates/2013-04/msg00041.html
  - http://lists.opensuse.org/opensuse-updates/2013-04/msg00053.html
  - http://rhn.redhat.com/errata/RHSA-2013-0270.html
  - http://rhn.redhat.com/errata/RHSA-2013-0679.html
  - http://rhn.redhat.com/errata/RHSA-2013-0680.html
  - http://rhn.redhat.com/errata/RHSA-2013-0681.html
  - http://rhn.redhat.com/errata/RHSA-2013-0682.html
  - http://rhn.redhat.com/errata/RHSA-2013-1147.html
  - http://rhn.redhat.com/errata/RHSA-2013-1853.html
  - http://rhn.redhat.com/errata/RHSA-2014-0224.html
  - http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf
  - http://www.securityfocus.com/bid/58073
  - http://www.ubuntu.com/usn/USN-2769-1
  - http://xforce.iss.net/xforce/xfdb/79984
  - https://access.redhat.com/errata/RHSA-2017:0868
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/79984
  - https://issues.apache.org/jira/browse/HTTPCLIENT-1265
  source_url: https://ossindex.net/resource/package/7015365422/vulnerabilities
- id: ossindex:maven:org.apache.httpcomponents:httpclient:353770
  title: "[CVE-2012-6153]  Improper Input Validation"
  description: 'http/conn/ssl/AbstractVerifier.java in Apache Commons HttpClient before
    4.2.3 does not properly verify that the server hostname matches a domain name
    in the subject''s Common Name (CN) or subjectAltName field of the X.509 certificate,
    which allows man-in-the-middle attackers to spoof SSL servers via a certificate
    with a subject that specifies a common name in a field that is not the CN field.  NOTE:
    this issue exists because of an incomplete fix for CVE-2012-5783.'
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - '4.2'
  - 4.2.1
  - 4.2.2
  package_manager: maven
  cve:
  - CVE-2012-6153
  disclosed_date: 2014-09-04
  created_date: 2014-09-04
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-1098.html
  - http://rhn.redhat.com/errata/RHSA-2014-1833.html
  - http://rhn.redhat.com/errata/RHSA-2014-1834.html
  - http://rhn.redhat.com/errata/RHSA-2014-1835.html
  - http://rhn.redhat.com/errata/RHSA-2014-1836.html
  - http://rhn.redhat.com/errata/RHSA-2014-1891.html
  - http://rhn.redhat.com/errata/RHSA-2014-1892.html
  - http://rhn.redhat.com/errata/RHSA-2015-0125.html
  - http://rhn.redhat.com/errata/RHSA-2015-0158.html
  - http://rhn.redhat.com/errata/RHSA-2015-0675.html
  - http://rhn.redhat.com/errata/RHSA-2015-0720.html
  - http://rhn.redhat.com/errata/RHSA-2015-0765.html
  - http://rhn.redhat.com/errata/RHSA-2015-0850.html
  - http://rhn.redhat.com/errata/RHSA-2015-0851.html
  - http://rhn.redhat.com/errata/RHSA-2015-1888.html
  - http://svn.apache.org/viewvc?view=revision&revision=1411705
  - http://www.securityfocus.com/bid/69257
  - http://www.ubuntu.com/usn/USN-2769-1
  - https://access.redhat.com/solutions/1165533
  - https://bugzilla.redhat.com/show_bug.cgi?id=1129916
  - https://h20565.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05103564
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05103564
  source_url: https://ossindex.net/resource/package/7015365422/vulnerabilities
- id: ossindex:maven:org.apache.httpcomponents:httpclient:362452
  title: "[CVE-2014-3577] org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents
    HttpClient be..."
  description: org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents
    HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify
    that the server hostname matches a domain name in the subject's Common Name (CN)
    or subjectAltName field of the X.509 certificate, which allows man-in-the-middle
    attackers to spoof SSL servers via a "CN=" string in a field in the distinguished
    name (DN) of a certificate, as demonstrated by the "foo,CN=www.apache.org" string
    in the O field.
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - '4.0'
  - 4.0.1
  - '4.1'
  - 4.1.1
  - 4.1.2
  - '4.2'
  - 4.2.1
  - 4.2.2
  - 4.2.3
  - '4.3'
  - 4.3.1
  - 4.3.2
  - 4.3.3
  - 4.3.4
  package_manager: maven
  cve:
  - CVE-2014-3577
  disclosed_date: 2014-08-21
  created_date: 2014-08-21
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/127913/Apache-HttpComponents-Man-In-The-Middle.html
  - http://rhn.redhat.com/errata/RHSA-2014-1146.html
  - http://rhn.redhat.com/errata/RHSA-2014-1166.html
  - http://rhn.redhat.com/errata/RHSA-2014-1833.html
  - http://rhn.redhat.com/errata/RHSA-2014-1834.html
  - http://rhn.redhat.com/errata/RHSA-2014-1835.html
  - http://rhn.redhat.com/errata/RHSA-2014-1836.html
  - http://rhn.redhat.com/errata/RHSA-2014-1891.html
  - http://rhn.redhat.com/errata/RHSA-2014-1892.html
  - http://rhn.redhat.com/errata/RHSA-2015-0125.html
  - http://rhn.redhat.com/errata/RHSA-2015-0158.html
  - http://rhn.redhat.com/errata/RHSA-2015-0675.html
  - http://rhn.redhat.com/errata/RHSA-2015-0720.html
  - http://rhn.redhat.com/errata/RHSA-2015-0765.html
  - http://rhn.redhat.com/errata/RHSA-2015-0850.html
  - http://rhn.redhat.com/errata/RHSA-2015-0851.html
  - http://rhn.redhat.com/errata/RHSA-2015-1176.html
  - http://rhn.redhat.com/errata/RHSA-2015-1177.html
  - http://rhn.redhat.com/errata/RHSA-2015-1888.html
  - http://rhn.redhat.com/errata/RHSA-2016-1773.html
  - http://rhn.redhat.com/errata/RHSA-2016-1931.html
  - http://seclists.org/fulldisclosure/2014/Aug/48
  - http://secunia.com/advisories/60466
  - http://secunia.com/advisories/60589
  - http://secunia.com/advisories/60713
  - http://www.osvdb.org/110143
  - http://www.securityfocus.com/bid/69258
  - http://www.securitytracker.com/id/1030812
  - http://www.ubuntu.com/usn/USN-2769-1
  - http://xforce.iss.net/xforce/xfdb/95327
  - https://access.redhat.com/solutions/1165533
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/95327
  - https://h20565.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05103564
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05103564
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05363782
  source_url: https://ossindex.net/resource/package/7015365422/vulnerabilities
- id: ossindex:maven:org.apache.httpcomponents:httpclient:8396561640
  title: "[CVE-2015-5262]  Resource Management Errors"
  description: http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents
    HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting
    during an SSL handshake, which allows remote attackers to cause a denial of service
    (HTTPS call hang) via unspecified vectors.
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - 4.3.5
  package_manager: maven
  cve:
  - CVE-2015-5262
  disclosed_date: 2015-10-27
  created_date: 2015-10-27
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-October/167962.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-October/167999.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-October/168030.html
  - http://svn.apache.org/viewvc?view=revision&revision=1626784
  - http://www.securitytracker.com/id/1033743
  - http://www.ubuntu.com/usn/USN-2769-1
  - https://bugzilla.redhat.com/show_bug.cgi?id=1261538
  - https://issues.apache.org/jira/browse/HTTPCLIENT-1478
  source_url: https://ossindex.net/resource/package/7015365422/vulnerabilities
- id: snykio:maven:org.apache.httpcomponents:httpclient:30644
  title: Information Exposure
  description: |
    [`org.apache.httpcomponents:httpclient`][1] Apache HttpClient 4.x before
    4.1.1 in Apache HttpComponents, when used with an authenticating proxy
    server, sends the `Proxy-Authorization` header to the origin server,
    which allows remote web servers to obtain sensitive information by
    logging this header.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22httpclient%22
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - ">= 4.0.alpha1 < 4.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-1498
  cwe:
  - CWE-200
  disclosed_date: 2011-07-07
  created_date: 2014-09-08
  last_modified_date: 2014-09-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-1498
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-30644
- id: snykio:maven:org.apache.httpcomponents:httpclient:30645
  title: Improper Input Validation
  description: |
    [org.apache.httpcomponents:httpclient][1] is an HttpClient component of
    the Apache HttpComponents project.

    Affected versions of this package are vulnerable to Improper Input
    Validation Affected versions of this project are vulnerable to
    Man-in-the-Middle (MitM) attacks because it does not verify the
    requesting server\'s hostname agains existing domain names in the SSL
    Certificate. The `AbstractVerifier` does not properly verify that the
    server hostname matches a domain name in the subject\'s `Common Name
    (CN)` or `subjectAltName` field of the X.509 certificate, which allows
    man-in-the-middle attackers to spoof SSL servers via a certificate with
    a subject that specifies a common name in a field that is not the CN
    field.

    **NOTE:** this issue exists because of an incomplete fix for
    [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).



    [1]: http://hc.apache.org/
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - "< 4.2.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-6153
  cwe:
  - CWE-20
  disclosed_date: 2014-09-04
  created_date: 2014-09-07
  last_modified_date: 2014-09-07
  credit:
  - Unknown
  references:
  - https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-30645
- id: snykio:maven:org.apache.httpcomponents:httpclient:30646
  title: Man-in-the-Middle (MitM)
  description: |+
    [org.apache.httpcomponents:httpclient][1] is an HttpClient component of
    the Apache HttpComponents project.

    Affected versions of this package are vulnerable to Man-in-the-Middle
    (MitM) due to not verify the requesting server\'s hostname against
    existing domain names in the SSL Certificate.

    The `AbstractVerifier` does not properly verify that the server hostname
    matches a domain name in the subject\'s `Common Name (CN)` or
    `subjectAltName` field of the X.509 certificate, which allows
    man-in-the-middle attackers to spoof SSL servers via a `"CN="` string in
    a field in the distinguished name (DN) of a certificate, as demonstrated
    by the `"foo,CN=www.apache.org"` string in the `O` field.



    [1]: http://hc.apache.org/
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - ">= 4.0-alpha1 < 4.3.4"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3577
  cwe:
  - CWE-297
  disclosed_date: 2014-08-21
  created_date: 2014-09-08
  last_modified_date: 2014-09-08
  credit:
  - Unknown
  references:
  - http://svn.apache.org/viewvc?view=revision&revision=1411705
  - https://bugzilla.redhat.com/show_bug.cgi?id=1129074
  - https://github.com/apache/httpcomponents-client/commit/b930227f907af1198765fc47beabbddae344ca7b
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3577
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-30646
- id: snykio:maven:org.apache.httpcomponents:httpclient:30647
  title: Denial of Service (DoS)
  description: |+
    [org.apache.httpcomponents:httpclient][1] is a HttpClient component of
    the Apache HttpComponents project.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) via the `http/conn/ssl/SSLConnectionSocketFactory.java` class. It
    ignores the `http.socket.timeout` configuration setting during an SSL
    handshake, which allows remote attackers to cause a denial of service
    (HTTPS call hang) via unspecified vectors.



    [1]: http://hc.apache.org/
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - ">= 4.3-alpha1 < 4.3.6"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-5262
  cwe:
  - CWE-399
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1261538
  - https://github.com/apache/httpcomponents-client/commit/09027e7286974bf6b61f4106395da2623121db8d
  - https://github.com/apache/httpcomponents-client/commit/6705924879810f617a7a21d34f16b6c0d61e8d34
  - https://github.com/apache/httpcomponents-client/commit/d954cd287dfcdad8f153e61181e20d253175ca8c
  - https://issues.apache.org/jira/browse/HTTPCLIENT-1478
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5262
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-30647
- id: snykio:maven:org.apache.httpcomponents:httpclient:31517
  title: Directory Traversal
  description: |
    [org.apache.httpcomponents:httpclient][1] is a HttpClient component of
    the Apache HttpComponents project.

    Affected versions of this package are vulnerable to Directory Traversal.
    String input by user is not validated for the presence of leading
    character `/` and is passed to the constructor as `path` information,
    resulting in a Directory Traversal vulnerability.



    [1]: http://hc.apache.org/
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - "< 4.5.3"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-23
  disclosed_date: 2017-01-17
  created_date: 2017-09-20
  last_modified_date: 2017-09-20
  credit:
  - James Kettle
  references:
  - http://blog.portswigger.net/2017/07/cracking-lens-targeting-https-hidden.html
  - https://github.com/apache/httpcomponents-client/commit/0554271750599756d4946c0d7ba43d04b1a7b220
  - https://issues.apache.org/jira/browse/HTTPCLIENT-1803
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-31517
- id: snykio:maven:org.apache.httpcomponents:httpclient:32018
  title: Man-in-the-Middle (MitM)
  description: |
    [`org.apache.httpcomponents:httpclient`][1] is responsible for creating
    and maintaining a toolset of low level Java components focused on HTTP
    and associated protocols.

    Affected versions of this pacage are vulnerable to Man-in-the-Middle
    (MitM) attacks.

    http/impl/client/HttpClientBuilder.java in Apache HttpClient 4.3.x
    before 4.3.1 does not ensure that X509HostnameVerifier is not null,
    which allows attackers to have unspecified impact via vectors involving
    hostname verification.



    [1]: https://hc.apache.org/
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - ">= 4.3 < 4.3.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-4366
  cwe:
  - CWE-20
  disclosed_date: 2017-10-30
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Unknown
  references:
  - http://www.apache.org/dist/httpcomponents/httpclient/RELEASE_NOTES-4.3.x.txt
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-32018
- id: snykio:maven:org.apache.httpcomponents:httpclient:451097
  title: Man-in-the-Middle (MitM)
  description: |
    [org.apache.httpcomponents:httpclient][1] is a HttpClient component of
    the Apache HttpComponents project.

    Affected versions of this package are vulnerable to Man-in-the-Middle
    (MitM) due to not verifing the requesting server\'s hostname agains
    existing domain names in the SSL Certificate. The `AbstractVerifier`
    does not properly verify that the server hostname matches a domain name
    in the subject\'s `Common Name (CN)` or `subjectAltName` field of the
    X.509 certificate, which allows man-in-the-middle attackers to spoof SSL
    servers via a certificate with a subject that specifies a common name in
    a field that is not the CN field.

    **NOTE:** this issue exists because of an incomplete fix for
    [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).



    [1]: http://hc.apache.org/
  affected_package: org.apache.httpcomponents:httpclient
  vulnerable_versions:
  - ">= 4.0.0 < 4.2.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-6153
  cwe:
  - CWE-20
  disclosed_date: 2014-09-04
  created_date: 2018-04-08
  last_modified_date: 2018-04-08
  credit:
  - Unknown
  references:
  - https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEHTTPCOMPONENTS-451097
