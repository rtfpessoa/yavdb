---
- id: snykio:maven:com.exadel.flamingo.flex:amf-serializer:31405
  title: XML External Entity (XXE) Injection
  description: |+
    [com.exadel.flamingo.flex:amf-serializer](None) is a library for
    AMF0/AMF3 messages serialization/deserialization.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. The AMF3 deserializers in this library allow external
    entity (XXE) referenced from XML documents embedded in AMF3 messages.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: com.exadel.flamingo.flex:amf-serializer
  vulnerable_versions:
  - ">= 1.0.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-3206
  - CVE-2017-3208
  cwe:
  - CWE-611
  disclosed_date: 2017-04-06
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3206
  - https://www.kb.cert.org/vuls/id/307983
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMEXADELFLAMINGOFLEX-31405
- id: snykio:maven:com.exadel.flamingo.flex:amf-serializer:31406
  title: Arbitrary Code Execution
  description: |
    [`com.exadel.flamingo.flex:amf-serializer`][1] Affected versions of this
    package are vulnerable to Arbitrary Code Execution. It uses AMF3
    deserializers that derive class instances from `java.io.Externalizable`
    (Although AMF3 specification\'s recommends using
    `flash.utils.IExternalizable`). A remote attacker with the ability to
    spoof or control an RMI server connection may be able to send serialized
    Java objects that execute arbitrary code when deserialized.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22amf-serializer%22
  affected_package: com.exadel.flamingo.flex:amf-serializer
  vulnerable_versions:
  - ">= 1.0.0 <= 1.5.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-3201
  cwe:
  - CWE-502
  disclosed_date: 2017-04-06
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3201
  - https://www.kb.cert.org/vuls/id/307983
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMEXADELFLAMINGOFLEX-31406
- id: snykio:maven:com.exadel.flamingo.flex:amf-serializer:31410
  title: Arbitrary Code Execution
  description: |
    [`com.exadel.flamingo.flex:amf-serializer`][1] Affected versions of this
    package are vulnerable to Arbitrary Code Execution. It uses AMF3
    deserializers which allow instantiation of arbitrary classes via public
    parameter-less constructors. An attacker may exploit this to send a
    malicious AMF3 object to the system to execute arbitrary code.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22amf-serializer%22
  affected_package: com.exadel.flamingo.flex:amf-serializer
  vulnerable_versions:
  - ">= 1.0.0 <= 1.5.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-3202
  cwe:
  - CWE-94
  disclosed_date: 2017-04-06
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3202
  - https://www.kb.cert.org/vuls/id/307983
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMEXADELFLAMINGOFLEX-31410
