---
- id: ossindex:maven:org.bouncycastle:bcprov-ext-jdk15on:327514
  title: "[CVE-2007-6721] The Legion of the Bouncy Castle Java Cryptography API before
    release 1.38, as us..."
  description: The Legion of the Bouncy Castle Java Cryptography API before release
    1.38, as used in Crypto Provider Package before 1.36, has unknown impact and remote
    attack vectors related to "a Bleichenbacher vulnerability in simple RSA CMS signatures
    without signed attributes."
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - '1.0'
  - '1.01'
  - '1.02'
  - '1.03'
  - '1.04'
  - '1.05'
  - '1.06'
  - '1.07'
  - '1.08'
  - '1.09'
  - '1.10'
  - '1.11'
  - '1.12'
  - '1.13'
  - '1.14'
  - '1.15'
  - '1.16'
  - '1.17'
  - '1.18'
  - '1.19'
  - '1.20'
  - '1.21'
  - '1.22'
  - '1.23'
  - '1.24'
  - '1.25'
  - '1.26'
  - '1.27'
  - '1.28'
  - '1.29'
  - 1.3.1
  - '1.30'
  - '1.31'
  - '1.32'
  - '1.33'
  - '1.34'
  - '1.35'
  - '1.36'
  - '1.37'
  package_manager: maven
  cve:
  - CVE-2007-6721
  disclosed_date: 2009-03-30
  created_date: 2009-03-30
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://freshmeat.net/projects/bouncycastlecryptoapi/releases/265580
  - http://www.bouncycastle.org/csharp/
  - http://www.bouncycastle.org/devmailarchive/msg08195.html
  - http://www.bouncycastle.org/releasenotes.html
  - http://www.osvdb.org/50358
  - http://www.osvdb.org/50359
  - http://www.osvdb.org/50360
  source_url: https://ossindex.net/resource/package/7073535502/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-ext-jdk15on:355379
  title: "[CVE-2013-1624]  Cryptographic Issues"
  description: The TLS implementation in the Bouncy Castle Java library before 1.48
    and C# library before 1.8 does not properly consider timing side-channel attacks
    on a noncompliant MAC check operation during the processing of malformed CBC padding,
    which allows remote attackers to conduct distinguishing attacks and plaintext-recovery
    attacks via statistical analysis of timing data for crafted packets, a related
    issue to CVE-2013-0169.
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - "<1.48"
  package_manager: maven
  cve:
  - CVE-2013-1624
  disclosed_date: 2013-02-08
  created_date: 2013-02-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://openwall.com/lists/oss-security/2013/02/05/24
  - http://rhn.redhat.com/errata/RHSA-2014-0371.html
  - http://rhn.redhat.com/errata/RHSA-2014-0372.html
  - http://secunia.com/advisories/57716
  - http://secunia.com/advisories/57719
  - http://www.isg.rhul.ac.uk/tls/TLStiming.pdf
  source_url: https://ossindex.net/resource/package/7073535502/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-ext-jdk15on:8396562328
  title: "[CVE-2015-7940]  Information Exposure, Cryptographic Issues"
  description: The Bouncy Castle Java library before 1.51 does not validate a point
    is withing the elliptic curve, which makes it easier for remote attackers to obtain
    private keys via a series of crafted elliptic curve Diffie Hellman (ECDH) key
    exchanges, aka an "invalid curve attack."
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - '1.50'
  package_manager: maven
  cve:
  - CVE-2015-7940
  disclosed_date: 2015-11-09
  created_date: 2015-11-09
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2016-January/174915.html
  - http://lists.opensuse.org/opensuse-security-announce/2015-11/msg00012.html
  - http://rhn.redhat.com/errata/RHSA-2016-2035.html
  - http://rhn.redhat.com/errata/RHSA-2016-2036.html
  - http://web-in-security.blogspot.ca/2015/09/practical-invalid-curve-attacks.html
  - http://www.debian.org/security/2015/dsa-3417
  - http://www.openwall.com/lists/oss-security/2015/10/22/7
  - http://www.openwall.com/lists/oss-security/2015/10/22/9
  - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2016-2881722.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
  - http://www.securityfocus.com/bid/79091
  - http://www.securitytracker.com/id/1037036
  - http://www.securitytracker.com/id/1037046
  - http://www.securitytracker.com/id/1037053
  source_url: https://ossindex.net/resource/package/7073535502/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-ext-jdk15on:8398915630
  title: "[CVE-2016-2427]  Information Exposure"
  description: '** DISPUTED ** The AES-GCM specification in RFC 5084, as used in Android
    5.x and 6.x, recommends 12 octets for the aes-ICVlen parameter field, which might
    make it easier for attackers to defeat a cryptographic protection mechanism and
    discover an authentication key via a crafted application, aka internal bug 26234568.  NOTE:
    The vendor disputes the existence of this potential issue in Android, stating
    "This CVE was raised in error: it referred to the authentication tag size in GCM,
    whose default according to ASN.1 encoding (12 bytes) can lead to vulnerabilities.
    After careful consideration, it was decided that the insecure default value of
    12 bytes was a default only for the encoding and not default anywhere else in
    Android, and hence no vulnerability existed."'
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - '1.54'
  package_manager: maven
  cve:
  - CVE-2016-2427
  disclosed_date: 2016-04-18
  created_date: 2016-04-18
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://source.android.com/security/bulletin/2016-04-02.html
  - https://android.googlesource.com/platform/external/bouncycastle/+/b3bddea0f33c0459293c6419569ad151b4a7b44b
  - https://android.googlesource.com/platform/libcore/+/efd369d996fd38c50a50ea0de8f20507253cb6de
  source_url: https://ossindex.net/resource/package/7073535502/vulnerabilities
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:1035564
  title: Information Exposure
  description: |
    [org.bouncycastle:bcprov-ext-jdk15on][1] is a Java implementation of
    cryptographic algorithms.

    Affected versions of this package are vulnerable to Information
    Exposure. Attackers can obtain sensitive information about a private
    exponent because of Observable Differences in Behavior to Error Inputs.
    This occurs in `org.bouncycastle.crypto.encodings.OAEPEncoding`. Sending
    invalid `ciphertext` that decrypts to a short payload in the OAEP
    Decoder could result in the throwing of an early exception, potentially
    leaking some information about the private exponent of the RSA private
    key performing the encryption.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - "< 1.61"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-26939
  cwe:
  - CWE-200
  disclosed_date: 2020-11-03
  created_date: 2020-11-03
  last_modified_date: 2020-11-03
  credit:
  - Unknown
  references:
  - https://github.com/bcgit/bc-java/commit/930f8b274c4f1f3a46e68b5441f1e7fadb57e8c1
  - https://github.com/bcgit/bc-java/wiki/CVE-2020-26939
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-1035564
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:1052818
  title: Comparison Using Wrong Factors
  description: |
    [org.bouncycastle:bcprov-ext-jdk15on][1] is a Java implementation of
    cryptographic algorithms.

    Affected versions of this package are vulnerable to Comparison Using
    Wrong Factors. The `OpenBSDBCrypt.checkPassword` utility method compared
    incorrect data when checking the password, allowing incorrect passwords
    to indicate they were matching with previously hashed ones that were
    different.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - ">= 1.65 < 1.67"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-28052
  cwe:
  - CWE-1025
  disclosed_date: 2020-12-18
  created_date: 2020-12-18
  last_modified_date: 2020-12-18
  credit:
  - Matti Varanka
  - Tero Rontti
  references:
  - https://github.com/bcgit/bc-java/commit/97578f9b7ed277e6ecb58834e85e3d18385a4219
  - https://github.com/bcgit/bc-java/wiki/CVE-2020-28052
  - https://www.synopsys.com/blogs/software-security/cve-2020-28052-bouncy-castle/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-1052818
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:31040
  title: Cryptographic Issues
  description: |
    [org.bouncycastle:bcprov-ext-jdk15on][1] is a Java implementation of
    cryptographic algorithms.

    Affected versions of this package are vulnerable to Cryptographic
    Issues. The TLS implementation does not properly consider timing
    side-channel attacks on a noncompliant MAC check operation during the
    processing of malformed CBC padding, which allows remote attackers to
    conduct distinguishing attacks and plaintext-recovery attacks via
    statistical analysis of timing data for crafted packets, a related issue
    to [CVE-2013-0169][2].



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on
    [2]: https://nvd.nist.gov/vuln/detail/CVE-2013-0169
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - "< 1.48"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-1624
  cwe:
  - CWE-310
  disclosed_date: 2013-02-08
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1624
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-31040
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:31041
  title: Cryptographic Issues
  description: |+
    [`org.bouncycastle:bcprov-ext-jdk15on`][1] Affected versions of this
    package are vulnerable to Invalid Curve Attacks.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22bcprov-ext-jdk15on%22
    \nElliptic Curve Cryptography (ECC) is used in key exchange
    protocolsdigital signatures, or for pseudo-random number generators. An
    elliptic curve in cryptography is a set of points over a finite field
    satisfying the following equation: `y^2 = x^3 + ax + b`. On the elliptic
    curve, a single operation can be executed: point addition.

    Elliptic curve Diffie–Hellman (ECDH) is an anonymous key exchange
    protocol that allows two parties (say, between a client and server) to
    establish a shared secret over an insecure channel.

    An Invalid Curve Attack occurs when a client forces the server to
    compute a common secret using a point outside of the defined curve. The
    server may disclose information, allowing a skilled attacker to
    calculate the secret key.

  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - "< 1.51"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-7940
  cwe:
  - CWE-310
  disclosed_date: 2015-10-22
  created_date: 2015-10-22
  last_modified_date: 2015-10-22
  credit:
  - Unknown
  references:
  - http://web-in-security.blogspot.co.il/2015/09/practical-invalid-curve-attacks.html
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7940
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-31041
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:472373
  title: Out-of-bounds Write
  description: |
    [org.bouncycastle:bcprov-ext-jdk15on][1] is a Java implementation of
    cryptographic algorithms.

    Affected versions of this package are vulnerable to Out-of-bounds Write.
    The ASN.1 parser in can trigger a large attempted memory allocation, and
    resultant OutOfMemoryError error, via crafted ASN.1 data.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - ">= 1.63 < 1.64"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2019-17359
  cwe:
  - CWE-787
  disclosed_date: 2019-10-08
  created_date: 2019-10-08
  last_modified_date: 2019-10-08
  credit:
  - Uknown
  references:
  - https://github.com/bcgit/bc-java/commit/b1bc75254f5fea633a49a751a1a7339056f97856
  - https://www.bouncycastle.org/latest_releases.html
  - https://www.bouncycastle.org/releasenotes.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-472373
- id: snykio:maven:org.bouncycastle:bcprov-ext-jdk15on:474616
  title: Deserialization of Untrusted Data
  description: |
    [org.bouncycastle:bcprov-ext-jdk15on][1] is a Java implementation of
    cryptographic algorithms.

    Affected versions of this package are vulnerable to Deserialization of
    Untrusted Data via the `XMSS/XMSS^MT` private key deserialization. A
    handcrafted private key could include references to unexpected classes
    which would be picked up from the class path for the executing
    application.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on
    \nSerialization is a process of converting an object into a sequence of
    bytes which can be persisted to a disk or database or can be sent
    through streams. The reverse process of creating object from sequence of
    bytes is called deserialization. Serialization is commonly used for
    communication (sharing objects between multiple hosts) and persistence
    (store the object state in a file or a database). It is an integral part
    of popular protocols like *Remote Method Invocation (RMI)*, *Java
    Management Extension (JMX)*, *Java Messaging System (JMS)*, *Action
    Message Format (AMF)*, *Java Server Faces (JSF) ViewState*, etc.

    *Deserialization of untrusted data* ([CWE-502][1]), is when the
    application deserializes untrusted data without sufficiently verifying
    that the resulting data will be valid, letting the attacker to control
    the state or the flow of the execution.

    Java deserialization issues have been known for years. However, interest
    in the issue intensified greatly in 2015, when classes that could be
    abused to achieve remote code execution were found in a [popular library
    (Apache Commons Collection)][2]. These classes were used in zero-days
    affecting IBM WebSphere, Oracle WebLogic and many other products.

    An attacker just needs to identify a piece of software that has both a
    vulnerable class on its path, and performs deserialization on untrusted
    data. Then all they need to do is send the payload into the
    deserializer, getting the command executed.

    > Developers put too much trust in Java Object Serialization. Some even
    > de-serialize objects pre-authentication. When deserializing an Object
    > in Java you typically cast it to an expected type, and therefore
    > Java\'s strict type system will ensure you only get valid object
    > trees. Unfortunately, by the time the type checking happens, platform
    > code has already created and executed significant logic. So, before
    > the final type is checked a lot of code is executed from the
    > readObject() methods of various objects, all of which is out of the
    > developer\'s control. By combining the readObject() methods of various
    > classes which are available on the classpath of the vulnerable
    > application an attacker can execute functions (including calling
    > Runtime.exec() to execute local OS commands).

    * Apache Blog



    [1]: https://cwe.mitre.org/data/definitions/502.html
    [2]: https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078
  affected_package: org.bouncycastle:bcprov-ext-jdk15on
  vulnerable_versions:
  - ">= 1.57 < 1.60"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-1000613
  cwe:
  - CWE-502
  disclosed_date: 2018-03-03
  created_date: 2018-07-19
  last_modified_date: 2018-07-19
  credit:
  - Unknown
  references:
  - https://github.com/bcgit/bc-java/commit/4092ede58da51af9a21e4825fbad0d9a3ef5a223#diff-2c06e2edef41db889ee14899e12bd574
  - https://github.com/bcgit/bc-java/commit/cd98322b171b15b3f88c5ec871175147893c31e6#diff-148a6c098af0199192d6aede960f45dc
  - https://www.oracle.com/security-alerts/cpuapr2019.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-474616
