---
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:348769
  title: "[CVE-2011-5245]  Information Exposure"
  description: The readFrom function in providers.jaxb.JAXBXmlTypeProvider in RESTEasy
    before 2.3.2 allows remote attackers to read arbitrary files via an external entity
    reference in a Java Architecture for XML Binding (JAXB) input, aka an XML external
    entity (XXE) injection attack, a similar vulnerability to CVE-2012-0818.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "<2.3.2"
  package_manager: maven
  cve:
  - CVE-2011-5245
  disclosed_date: 2012-11-23
  created_date: 2012-11-23
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2012-0441.html
  - http://rhn.redhat.com/errata/RHSA-2012-0519.html
  - http://rhn.redhat.com/errata/RHSA-2012-1056.html
  - http://rhn.redhat.com/errata/RHSA-2012-1057.html
  - http://rhn.redhat.com/errata/RHSA-2012-1058.html
  - http://rhn.redhat.com/errata/RHSA-2012-1059.html
  - http://rhn.redhat.com/errata/RHSA-2012-1125.html
  - http://rhn.redhat.com/errata/RHSA-2014-0371.html
  - http://rhn.redhat.com/errata/RHSA-2014-0372.html
  - http://secunia.com/advisories/47832
  - http://secunia.com/advisories/50084
  - http://secunia.com/advisories/57716
  - http://secunia.com/advisories/57719
  - http://www.osvdb.org/78680
  - http://www.securityfocus.com/bid/51766
  - http://xforce.iss.net/xforce/xfdb/72808
  - https://bugzilla.redhat.com/show_bug.cgi?id=785631
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/72808
  - https://issues.jboss.org/browse/RESTEASY-647
  - https://issues.jboss.org/browse/RESTEASY/fixforversion/12318708
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:349579
  title: "[CVE-2012-0818]  Information Exposure"
  description: RESTEasy before 2.3.1 allows remote attackers to read arbitrary files
    via an external entity reference in a DOM document, aka an XML external entity
    (XXE) injection attack.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "<2.3.1"
  package_manager: maven
  cve:
  - CVE-2012-0818
  disclosed_date: 2012-11-23
  created_date: 2012-11-23
  last_modified_date: 2017-04-17
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2012-0441.html
  - http://rhn.redhat.com/errata/RHSA-2012-0519.html
  - http://rhn.redhat.com/errata/RHSA-2012-1056.html
  - http://rhn.redhat.com/errata/RHSA-2012-1057.html
  - http://rhn.redhat.com/errata/RHSA-2012-1058.html
  - http://rhn.redhat.com/errata/RHSA-2012-1059.html
  - http://rhn.redhat.com/errata/RHSA-2012-1125.html
  - http://rhn.redhat.com/errata/RHSA-2014-0371.html
  - http://rhn.redhat.com/errata/RHSA-2014-0372.html
  - http://secunia.com/advisories/47818
  - http://secunia.com/advisories/47832
  - http://secunia.com/advisories/48697
  - http://secunia.com/advisories/48954
  - http://secunia.com/advisories/50084
  - http://secunia.com/advisories/57716
  - http://secunia.com/advisories/57719
  - http://www.osvdb.org/78679
  - http://www.securityfocus.com/bid/51748
  - http://www.securityfocus.com/bid/51766
  - http://xforce.iss.net/xforce/xfdb/72808
  - https://bugzilla.redhat.com/show_bug.cgi?id=785631
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/72808
  - https://issues.jboss.org/browse/RESTEASY-637
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:362376
  title: "[CVE-2014-3490] RESTEasy 2.3.1 before 2.3.8.SP2 and 3.x before 3.0.9, as
    used in Red Hat JBoss E..."
  description: 'RESTEasy 2.3.1 before 2.3.8.SP2 and 3.x before 3.0.9, as used in Red
    Hat JBoss Enterprise Application Platform (EAP) 6.3.0, does not disable external
    entities when the resteasy.document.expand.entity.references parameter is set
    to false, which allows remote attackers to read arbitrary files and have other
    unspecified impact via unspecified vectors, related to an XML External Entity
    (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for
    CVE-2012-0818.'
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">=2.3.1 <2.3.8.SP2"
  - ">=3.0.0 <3.0.9"
  package_manager: maven
  cve:
  - CVE-2014-3490
  disclosed_date: 2014-08-19
  created_date: 2014-08-19
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-1011.html
  - http://rhn.redhat.com/errata/RHSA-2014-1039.html
  - http://rhn.redhat.com/errata/RHSA-2014-1040.html
  - http://rhn.redhat.com/errata/RHSA-2014-1298.html
  - http://rhn.redhat.com/errata/RHSA-2015-0125.html
  - http://rhn.redhat.com/errata/RHSA-2015-0675.html
  - http://rhn.redhat.com/errata/RHSA-2015-0720.html
  - http://rhn.redhat.com/errata/RHSA-2015-0765.html
  - http://secunia.com/advisories/60019
  - https://github.com/resteasy/Resteasy/pull/521
  - https://github.com/resteasy/Resteasy/pull/533
  - https://github.com/ronsigal/Resteasy/commit/9b7d0f574cafdcf3bea5428f3145ab4908fc6d83
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:365783
  title: "[CVE-2014-7839]  Improper Input Validation"
  description: DocumentProvider in RESTEasy 2.3.7 and 3.0.9 does not configure the
    (1) external-general-entities or (2) external-parameter-entities features, which
    allows remote attackers to conduct XML external entity (XXE) attacks via unspecified
    vectors.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - 2.3.7
  - 3.0.9
  package_manager: maven
  cve:
  - CVE-2014-7839
  disclosed_date: 2014-11-25
  created_date: 2014-11-25
  last_modified_date: 2017-04-14
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2015-0675.html
  - http://rhn.redhat.com/errata/RHSA-2015-0773.html
  - http://rhn.redhat.com/errata/RHSA-2015-0850.html
  - http://rhn.redhat.com/errata/RHSA-2015-0851.html
  - http://secunia.com/advisories/62580
  - https://issues.jboss.org/browse/RESTEASY-1130
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:8400141672
  title: "[CVE-2016-6345]  Information Exposure"
  description: RESTEasy allows remote authenticated users to obtain sensitive information
    by leveraging "insufficient use of random values" in async jobs.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2016-6345
  disclosed_date: 2016-09-07
  created_date: 2016-09-07
  last_modified_date: 2017-04-14
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/92746
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372117
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:8400141673
  title: "[CVE-2016-6346] RESTEasy enables GZIPInterceptor, which allows remote attackers
    to cause a denia..."
  description: RESTEasy enables GZIPInterceptor, which allows remote attackers to
    cause a denial of service via unspecified vectors.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2016-6346
  disclosed_date: 2016-09-07
  created_date: 2016-09-07
  last_modified_date: 2017-04-14
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2017-0517.html
  - http://rhn.redhat.com/errata/RHSA-2017-0826.html
  - http://rhn.redhat.com/errata/RHSA-2017-0827.html
  - http://rhn.redhat.com/errata/RHSA-2017-0828.html
  - http://rhn.redhat.com/errata/RHSA-2017-0829.html
  - http://www.securityfocus.com/bid/92744
  - https://access.redhat.com/errata/RHSA-2017:1675
  - https://access.redhat.com/errata/RHSA-2017:1676
  - https://access.redhat.com/errata/RHSA-2018:0002
  - https://access.redhat.com/errata/RHSA-2018:0003
  - https://access.redhat.com/errata/RHSA-2018:0004
  - https://access.redhat.com/errata/RHSA-2018:0005
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372120
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:8402731471
  title: Remote Code Execution
  description: The default YAML provider has a remote code execution vulnerability.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "<3.0.19.SPx"
  - ">= 3.0.20 <=3.0.22"
  - ">= 3.1.0 <3.1.2.Final"
  package_manager: maven
  disclosed_date: 2017-03-31
  created_date: 2017-03-31
  last_modified_date: 2017-05-04
  credit:
  - OSSIndex
  references:
  - https://github.com/resteasy/Resteasy/commit/26e2340c50acdcec0e804796402f83f18ae165c5
  - https://github.com/resteasy/Resteasy/commit/7ae52d2322169295a18570892d7596af69d41545
  - https://github.com/resteasy/Resteasy/commit/bccadffa2df8ecaff6616df18d2f3b1210866b99
  - https://github.com/resteasy/Resteasy/issues/1090
  - https://github.com/resteasy/Resteasy/pull/1091
  - https://github.com/resteasy/Resteasy/pull/1092
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:8402790634
  title: '[CVE-2016-6348]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: JacksonJsonpInterceptor in RESTEasy might allow remote attackers to
    conduct a cross-site script inclusion (XSSI) attack.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2016-6348
  disclosed_date: 2017-04-12
  created_date: 2017-04-12
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372129
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: ossindex:maven:org.jboss.resteasy:resteasy-jaxrs:8402828946
  title: '[CVE-2016-6347]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in the default exception handler
    in RESTEasy allows remote attackers to inject arbitrary web script or HTML via
    unspecified vectors.
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2016-6347
  disclosed_date: 2017-04-20
  created_date: 2017-04-20
  last_modified_date: 2017-04-25
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/92759
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372124
  source_url: https://ossindex.net/resource/package/7015470977/vulnerabilities
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:30117
  title: XML External Entity (XXE) Injection
  description: |+
    `org.jboss.resteasy:resteasy-jaxrs` is a jboss project that provides
    various frameworks to help you build RESTful Web Services and RESTful
    Java applications.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. It allows remote attackers to read arbitrary files via
    an external entity reference in a DOM document.

    \##Details XXE Injection is a type of attack against an application that
    parses XML input. XML is a markup language that defines a set of rules
    for encoding documents in a format that is both human-readable and
    machine-readable. By default, many XML processors allow specification of
    an external entity, a URI that is dereferenced and evaluated during XML
    processing. When an XML document is being parsed, the parser can make a
    request and include the content at the specified URI inside of the XML
    document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 1.2GA < 2.0-beta-1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-0818
  cwe:
  - CWE-611
  disclosed_date: 2016-12-25
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://issues.jboss.org/browse/RESTEASY-637
  - https://issues.jboss.org/browse/RESTEASY-647
  - https://issues.jboss.org/browse/RESTEASY-659
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-30117
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:30118
  title: XML External Entity (XXE) Injection
  description: |+
    [org.jboss.resteasy:resteasy-jaxrs][1] is a JCP specification that
    provides a Java API for RESTful Web Services over the HTTP protocol.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection via an external entity reference in a DOM document.



    [1]: https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jaxrs
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 1.1GA < 2.3.1.GA"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-0818
  cwe:
  - CWE-611
  disclosed_date: 2012-11-23
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://github.com/resteasy/Resteasy/commit/020d979fb702e2f3c332f38ab4565b3d254b3c33
  - https://github.com/resteasy/Resteasy/commit/71ace879cf92d323bfa4d3e88db0c3059109bbf6
  - https://issues.jboss.org/browse/RESTEASY-637
  - https://issues.jboss.org/browse/RESTEASY-647
  - https://issues.jboss.org/browse/RESTEASY-659
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-30118
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:30119
  title: XML External Entity (XXE) Injection
  description: |+
    [`org.jboss.resteasy:resteasy-jaxrs`][1] DocumentProvider in RESTEasy
    2.3.7 and 3.0.9 does not configure the (1) external-general-entities or
    (2) external-parameter-entities features, which allows remote attackers
    to conduct XML external entity (XXE) attacks via unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 2 < 2.3.7.Final"
  - ">= 2 < 2.3.9.Final"
  - ">= 2.1-beta-1 < 3.0.0.Final"
  - ">= 2.3 < 2.3.8.SP3-redhat-2"
  - ">= 3.0.0.Final < 3.0.10.Final"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-7839
  cwe:
  - CWE-611
  disclosed_date: 2014-11-25
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-7839
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-30119
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31201
  title: Information Exposure
  description: |
    [`org.jboss.resteasy:resteasy-jaxrs`][1] The readFrom function in
    providers.jaxb.JAXBXmlTypeProvider in RESTEasy before 2.3.2 allows
    remote attackers to read arbitrary files via an external entity
    reference in a Java Architecture for XML Binding (JAXB) input, aka an
    XML external entity (XXE) injection attack, a similar vulnerability to
    CVE-2012-0818.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "< 2.3.2.Final"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-5245
  cwe:
  - CWE-200
  disclosed_date: 2012-11-23
  created_date: 2014-01-09
  last_modified_date: 2014-01-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-5245
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31201
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31202
  title: Information Exposure
  description: |
    [`org.jboss.resteasy:resteasy-jaxrs`][1] The readFrom function in
    providers.jaxb.JAXBXmlTypeProvider in RESTEasy before 2.3.2 allows
    remote attackers to read arbitrary files via an external entity
    reference in a Java Architecture for XML Binding (JAXB) input, aka an
    XML external entity (XXE) injection attack, a similar vulnerability to
    CVE-2012-0818.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 0 < 2.3.2.Final"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-5245
  cwe:
  - CWE-200
  disclosed_date: 2012-11-23
  created_date: 2014-01-09
  last_modified_date: 2014-01-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-5245
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31202
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31203
  title: Information Exposure
  description: |
    [`org.jboss.resteasy:resteasy-jaxrs`][1] RESTEasy allows remote
    authenticated users to obtain sensitive information by leveraging
    \"insufficient use of random values\" in async jobs.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "< 3.1.0.Beta2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-6345
  cwe:
  - CWE-200
  disclosed_date: 2016-09-05
  created_date: 2016-09-05
  last_modified_date: 2016-09-05
  credit:
  - Mikhail Egorov
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6345
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31203
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31204
  title: Denial of Service (DoS)
  description: |+
    [`org.jboss.resteasy:resteasy-jaxrs`][1] RESTEasy enables
    GZIPInterceptor, which allows remote attackers to cause a denial of
    service via unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 1.2 < 1.2.1.GA"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-6346
  cwe:
  - CWE-400
  disclosed_date: 2016-09-05
  created_date: 2016-09-05
  last_modified_date: 2016-09-05
  credit:
  - Mikhail Egorov
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6346
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31204
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31205
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.jboss.resteasy:resteasy-jaxrs`][1] Affected versions of the
    package are vulnerable to Cross-site Scripting (XSS). It was found that
    in some configurations the JacksonJsonpInterceptor is activated by
    default in RESTEasy. An attacker could use this flaw to launch a Cross
    Site Scripting Inclusion attack.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 1.0-beta-6 < 3.1.0.Beta1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-6348
  cwe:
  - CWE-79
  disclosed_date: 2016-09-05
  created_date: 2016-09-05
  last_modified_date: 2016-09-05
  credit:
  - Mikhail Egorov
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372129
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31205
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:31206
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.jboss.resteasy:resteasy-jaxrs`][1] Affected versions of the
    package are vulnerable to Cross-site Scripting (XSS). It was found that
    the default exception handler in RESTEasy did not properly validate user
    input.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22resteasy-jaxrs%22
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - ">= 1.0-beta-6 < 3.1.0.Beta1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-6347
  cwe:
  - CWE-79
  disclosed_date: 2016-09-05
  created_date: 2016-09-05
  last_modified_date: 2016-09-05
  credit:
  - Mikhail Egorov
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1372124
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-31206
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:542664
  title: HTTP Request Smuggling
  description: |
    [org.jboss.resteasy:resteasy-jaxrs][1] is a JCP specification that
    provides a Java API for RESTful Web Services over the HTTP protocol.

    Affected versions of this package are vulnerable to HTTP Request
    Smuggling. It was discovered that the CORS Filter did not add an HTTP
    Vary header indicating that the response varies depending on Origin.
    This permitted client and server side cache poisoning in some
    circumstances.



    [1]: https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jaxrs
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "< 3.0.25.Final"
  - ">= 3.1.0.Beta1 < 3.5.0.CR1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-7561
  cwe:
  - CWE-444
  disclosed_date: 2017-08-22
  created_date: 2020-01-19
  last_modified_date: 2020-01-19
  credit:
  - Jason Shepherd
  references:
  - https://github.com/resteasy/Resteasy/pull/1258/files
  - https://issues.redhat.com/browse/RESTEASY-1704
  - https://stackoverflow.com/questions/29388937/problems-resteasy-3-09-corsfilter/29390508#29390508
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-542664
- id: snykio:maven:org.jboss.resteasy:resteasy-jaxrs:609370
  title: Improper Input Validation
  description: |
    [org.jboss.resteasy:resteasy-jaxrs][1] is a JCP specification that
    provides a Java API for RESTful Web Services over the HTTP protocol.

    Affected versions of this package are vulnerable to Improper Input
    Validation in `MediaTypeHeaderDelegate.java` class results in the class
    returning an illegal header that will be then integrated in the
    server\'s response.



    [1]: https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jaxrs
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "< 3.11.0.Final"
  severity: high
  package_manager: maven
  cve:
  - CVE-2020-1695
  cwe:
  - CWE-20
  disclosed_date: 2019-07-17
  created_date: 2020-04-16
  last_modified_date: 2020-04-16
  credit:
  - Mirko Selber
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1730462
  - https://github.com/resteasy/Resteasy/commit/acf15f2a8067f7e4cf5838342cecfa0b78a174fb
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSRESTEASY-609370
- id: victims:maven:org.jboss.resteasy:resteasy-jaxrs:2012-0818
  title: 'RESTEasy: XML eXternal Entity (XXE) flaw'
  description: 'RESTEasy permits XXE (XML eXternal Entity) attacks. If a RESTEasy
    endpoint is deployed, a user can submit a request containing an external XML entity.
    This  XML entity will be resolved, allowing a remote attacker to read files in
    the  context of the user running the application server. This flaw affects DOM  Document,
    JAXB and Fast Infoset (FI) input.

'
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - "==1.2.1.GA_CP01"
  severity: high
  package_manager: maven
  cve:
  - CVE-2012-0818
  credit:
  - Victims CVE Database
  references:
  - https://issues.jboss.org/browse/RESTEASY-637
  - https://issues.jboss.org/browse/RESTEASY-647
  - https://issues.jboss.org/browse/RESTEASY-659
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2012/0818.yaml
- id: victims:maven:org.jboss.resteasy:resteasy-jaxrs:2014-7839
  title: 'RESTEasy: External entities expanded by DocumentProvider'
  affected_package: org.jboss.resteasy:resteasy-jaxrs
  vulnerable_versions:
  - '2'
  - '2'
  - '2'
  - '2.3'
  - '3'
  - "<=2.3.7.Final"
  - "<=2.3.8.SP3-redhat-2"
  - "<=2.3.9.Final"
  - "<=3.0.10.Final"
  - ">=2.1-beta-1"
  patched_versions:
  - '2.3'
  - '3'
  - ">=2.3.10.Final"
  - ">=3.0.11.Final"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-7839
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-7839
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/7839.yaml
