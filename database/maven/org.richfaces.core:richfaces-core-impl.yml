---
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:355839
  title: "[CVE-2013-2165]  Permissions, Privileges, and Access Controls"
  description: ResourceBuilderImpl.java in the RichFaces 3.x through 5.x implementation
    in Red Hat JBoss Web Framework Kit before 2.3.0, Red Hat JBoss Web Platform through
    5.2.0, Red Hat JBoss Enterprise Application Platform through 4.3.0 CP10 and 5.x
    through 5.2.0, Red Hat JBoss BRMS through 5.3.1, Red Hat JBoss SOA Platform through
    4.3.0 CP05 and 5.x through 5.3.1, Red Hat JBoss Portal through 4.3 CP07 and 5.x
    through 5.2.2, and Red Hat JBoss Operations Network through 2.4.2 and 3.x through
    3.1.2 does not restrict the classes for which deserialization methods can be called,
    which allows remote attackers to execute arbitrary code via crafted serialized
    data.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.1.5
  - 3.1.6
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.3.0
  - 3.3.1
  - 3.3.2
  - 3.3.3
  - 4.0.0
  - 4.1.0
  - 4.2.0
  - 4.2.1
  - 4.2.2
  - 4.2.3
  - 4.3.0
  - 4.3.1
  - 4.5.0
  - 5.0.0
  package_manager: maven
  cve:
  - CVE-2013-2165
  disclosed_date: 2013-07-23
  created_date: 2013-07-23
  last_modified_date: 2017-06-12
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN38787103/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2013-000072
  - http://rhn.redhat.com/errata/RHSA-2013-1041.html
  - http://rhn.redhat.com/errata/RHSA-2013-1042.html
  - http://rhn.redhat.com/errata/RHSA-2013-1043.html
  - http://rhn.redhat.com/errata/RHSA-2013-1044.html
  - http://rhn.redhat.com/errata/RHSA-2013-1045.html
  - https://access.redhat.com/security/cve/CVE-2013-2165
  - https://bugzilla.redhat.com/show_bug.cgi?id=973570
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:359747
  title: "[CVE-2014-0086]  Improper Input Validation"
  description: The doFilter function in webapp/PushHandlerFilter.java in JBoss RichFaces
    4.3.4, 4.3.5, and 5.x allows remote attackers to cause a denial of service (memory
    consumption and out-of-memory error) via a large number of malformed atmosphere
    push requests.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 4.3.4
  - 4.3.5
  - 5.0.0
  package_manager: maven
  cve:
  - CVE-2014-0086
  disclosed_date: 2014-03-31
  created_date: 2014-03-31
  last_modified_date: 2017-04-19
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0335.html
  - http://secunia.com/advisories/57053
  - https://bugzilla.redhat.com/show_bug.cgi?id=1067268
  - https://github.com/pslegr/core-1/commit/8131f15003f5bec73d475d2b724472e4b87d0757
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:366743
  title: '[CVE-2015-0279]  Improper Control of Generation of Code ("Code Injection")'
  description: JBoss RichFaces before 4.5.4 allows remote attackers to inject expression
    language (EL) expressions and execute arbitrary Java code via the do parameter.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 4.5.3
  package_manager: maven
  cve:
  - CVE-2015-0279
  disclosed_date: 2015-03-26
  created_date: 2015-03-26
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN56297719/index.html
  - http://jvndb.jvn.jp/en/contents/2015/JVNDB-2015-001959.html
  - http://rhn.redhat.com/errata/RHSA-2015-0719.html
  - https://bugzilla.redhat.com/show_bug.cgi?id=1192140
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: snykio:maven:org.richfaces.core:richfaces-core-impl:30150
  title: Arbitrary Code Execution
  description: |
    [org.richfaces.core:richfaces-core-impl][1] is an advanced UI component
    framework for easily integrating Ajax capabilities into business
    applications using JSF.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. `ResourceBuilderImpl.java` in the RichFaces does not restrict
    the classes for which deserialization methods can be called, which
    allows remote attackers to execute arbitrary code via crafted serialized
    data.



    [1]: https://richfaces.jboss.org
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - ">= 4.0.0 < 4.3.3.Final"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-2165
  cwe:
  - CWE-264
  disclosed_date: 2013-07-23
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://access.redhat.com/security/cve/cve-2013-2165
  - https://github.com/richfaces/richfaces/commit/d83ac49866e583065dd9e2d17d50297553b967f5
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGRICHFACESCORE-30150
- id: snykio:maven:org.richfaces.core:richfaces-core-impl:30151
  title: Denial of Service (DoS)
  description: "[org.richfaces.core:richfaces-core-impl][1] is an advanced UI component\nframework
    for easily integrating Ajax capabilities into business\napplications using JSF.\n\nAffected
    versions of this package are vulnerable to Denial of Service\n(DoS). The `doFilter`
    function in `webapp/PushHandlerFilter.java` allows\nremote attackers to cause
    a denial of service (memory consumption and\nout-of-memory error) via a large
    number of malformed atmosphere push\nrequests.\n\n\n\n[1]: https://richfaces.jboss.org\n\\nDenial
    of Service (DoS) describes a family of attacks, all aimed at\nmaking a system
    inaccessible to its original and legitimate users. There\nare many types of DoS
    attacks, ranging from trying to clog the network\npipes to the system by generating
    a large volume of traffic from many\nmachines (a Distributed Denial of Service
    - DDoS - attack) to sending\ncrafted requests that cause a system to crash or
    take a disproportional\namount of time to process.\n\nThe Regular expression Denial
    of Service (ReDoS) is a type of Denial of\nService attack. Regular expressions
    are incredibly powerful, but they\naren\\'t very intuitive and can ultimately
    end up making it easy for\nattackers to take your site down.\n\nLet’s take the
    following regular expression as an example:\n\n    regex = /A(B|C+)+D/\n{: .language-js}\n\nThis
    regular expression accomplishes the following:\n\n* `A` The string must start
    with the letter \\'A\\'\n* `(B|C+)+` The string must then follow the letter A
    with either the\n  letter \\'B\\' or some number of occurrences of the letter
    \\'C\\' (the\n  `+` matches one or more times). The `+` at the end of this section\n
    \ states that we can look for one or more matches of this section.\n* `D` Finally,
    we ensure this section of the string ends with a \\'D\\'\n\nThe expression would
    match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD`\nand `ACCCCCD`\n\nIt most cases,
    it doesn\\'t take very long for a regex engine to find a\nmatch:\n\n    $ time
    node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n    0.04s user
    0.01s system 95% cpu 0.052 total\n    \n    $ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n
    \   1.79s user 0.02s system 99% cpu 1.812 total\n{: .language-bash}\n\nThe entire
    process of testing it against a 30 characters long string\ntakes around ~52ms.
    But when given an invalid string, it takes nearly\ntwo seconds to complete the
    test, over ten times as long as it took to\ntest a valid string. The dramatic
    difference is due to the way regular\nexpressions get evaluated.\n\nMost Regex
    engines will work very similarly (with minor differences).\nThe engine will match
    the first possible way to accept the current\ncharacter and proceed to the next
    one. If it then fails to match the\nnext one, it will backtrack and see if there
    was another way to digest\nthe previous character. If it goes too far down the
    rabbit hole only to\nfind out the string doesn’t match in the end, and if many
    characters\nhave multiple valid regex paths, the number of backtracking steps
    can\nbecome very large, resulting in what is known as *catastrophic\nbacktracking*.\n\nLet\\'s
    look at how our expression runs into this problem, using a\nshorter string: \\\"ACCCX\\\".
    While it seems fairly straightforward, there\nare still four different ways that
    the engine could match those three\nC\\'s:\n\n1.  CCC\n2.  CC+C\n3.  C+CC\n4.
    \ C+C+C.\n\nThe engine has to try each of those combinations to see if any of
    them\npotentially match against the expression. When you combine that with the\nother
    steps the engine must take, we can use [RegEx 101 debugger][1] to\nsee the engine
    has to take a total of 38 steps before it can determine\nthe string doesn\\'t
    match.\n\nFrom there, the number of steps the engine must use to validate a string\njust
    continues to grow.\n\n| String | Number of C\\'s | Number of steps |\n|----------\n|
    ACCCX | 3 | 38 |\n| ACCCCX | 4 | 71 |\n| ACCCCCX | 5 | 136 |\n| ACCCCCCCCCCCCCCX
    | 14 | 65,553 |\n\nBy the time the string includes 14 C\\'s, the engine has to
    take over\n65,000 steps just to see if the string is valid. These extreme\nsituations
    can cause them to work very slowly (exponentially related to\ninput size, as shown
    above), allowing an attacker to exploit this and\ncan cause the service to excessively
    consume CPU, resulting in a Denial\nof Service.\n\n\n\n[1]: https://regex101.com/debugger\n"
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - ">= 4.3.4.Final < 4.3.6.Final"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0086
  cwe:
  - CWE-400
  disclosed_date: 2014-03-31
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-0086
  - https://github.com/pslegr/core-1/commit/8131f15003f5bec73d475d2b724472e4b87d0757
  - https://github.com/richfaces4/core/commit/71687cef6a83f4f9b4430648e4bf06bb7653434b
  - https://github.com/richfaces4/core/pull/21
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGRICHFACESCORE-30151
- id: victims:maven:org.richfaces.core:richfaces-core-impl:2013-2165
  title: 'JBoss RichFaces: Remote code execution due to insecure deserialization'
  description: 'A flaw was found in the way JBoss RichFaces handled deserialization.
    A  remote attacker could use this flaw to trigger the execution of the  deserialization
    methods in any serializable class deployed on the server.  This could lead to
    a variety of security impacts depending on the  deserialization logic of these
    classes.

'
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - '4'
  - "<=4.3.2.Final"
  patched_versions:
  - '4'
  - ">=4.3.3.Final"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-2165
  cvss_v2_score: 7.5
  credit:
  - Victims CVE Database
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2013/2165.yaml
- id: victims:maven:org.richfaces.core:richfaces-core-impl:2014-0086
  title: 'JBoss RichFaces: remote denial of service via memory exhaustion'
  description: 'It was found that certain malformed requests caused RichFaces to leak  memory.
    A remote, unauthenticated attacker could use this flaw to send a  large number
    of malformed requests to a RichFaces application that uses the  Atmosphere framework,
    leading to a denial of service  (excessive memory consumption) on the application
    server.

'
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - '4'
  - '5'
  - "<=4.3.5.Final"
  - "<=5.0.0.Alpha3"
  patched_versions:
  - '4'
  - ">=4.3.6.Final"
  - ">=5.0.0.Alpha4"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0086
  cvss_v2_score: 4.3
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-0086
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/0086.yaml
