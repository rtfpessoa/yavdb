---
- id: ossindex:maven:org.apache.wicket:wicket-core:346714
  title: '[CVE-2011-2712]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in Apache Wicket 1.4.x before
    1.4.18, when setAutomaticMultiWindowSupport is enabled, allows remote attackers
    to inject arbitrary web script or HTML via unspecified parameters.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.2
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  package_manager: maven
  cve:
  - CVE-2011-2712
  disclosed_date: 2011-08-29
  created_date: 2011-08-29
  last_modified_date: 2017-05-03
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/45727
  - http://securityreason.com/securityalert/8357
  - http://wicket.apache.org/2011/08/23/cve-2011-2712.html
  - http://www.securityfocus.com/archive/1/archive/1/519398/100/0/threaded
  - http://www.securityfocus.com/bid/49290
  - http://www.securitytracker.com/id?1025976
  - http://xforce.iss.net/xforce/xfdb/69394
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/69394
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:348885
  title: '[CVE-2012-0047]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in Apache Wicket 1.4.x before
    1.4.20 allows remote attackers to inject arbitrary web script or HTML via the
    wicket:pageMapName parameter.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.18
  - 1.4.19
  - 1.4.2
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  package_manager: maven
  cve:
  - CVE-2012-0047
  disclosed_date: 2012-03-23
  created_date: 2012-03-23
  last_modified_date: 2017-05-03
  credit:
  - OSSIndex
  references:
  - http://archives.neohapsis.com/archives/bugtraq/2012-03/0112.html
  - http://osvdb.org/80300
  - http://wicket.apache.org/2012/03/22/wicket-cve-2012-0047.html
  - http://www.securitytracker.com/id?1026839
  - http://xforce.iss.net/xforce/xfdb/74273
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/74273
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:349807
  title: '[CVE-2012-1089]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Apache Wicket 1.4.x before 1.4.20
    and 1.5.x before 1.5.5 allows remote attackers to read arbitrary web-application
    files via a relative pathname in a URL for a Wicket resource that corresponds
    to a null package.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.18
  - 1.4.19
  - 1.4.2
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  - 1.5.0
  - 1.5.1
  - 1.5.2
  - 1.5.3
  - 1.5.4
  package_manager: maven
  cve:
  - CVE-2012-1089
  disclosed_date: 2012-03-23
  created_date: 2012-03-23
  last_modified_date: 2017-05-03
  credit:
  - OSSIndex
  references:
  - http://osvdb.org/80301
  - http://wicket.apache.org/2012/03/22/wicket-cve-2012-1089.html
  - http://www.securityfocus.com/bid/52679
  - http://xforce.iss.net/xforce/xfdb/74276
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/74276
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:351653
  title: '[CVE-2012-3373]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in Apache Wicket 1.4.x before
    1.4.21 and 1.5.x before 1.5.8 allows remote attackers to inject arbitrary web
    script or HTML via vectors involving a %00 sequence in an Ajax link URL associated
    with a Wicket app.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.18
  - 1.4.19
  - 1.4.2
  - 1.4.20
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  - 1.5.0
  - 1.5.1
  - 1.5.2
  - 1.5.3
  - 1.5.4
  - 1.5.5
  - 1.5.6
  - 1.5.7
  package_manager: maven
  cve:
  - CVE-2012-3373
  disclosed_date: 2012-09-19
  created_date: 2012-09-19
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://osvdb.org/85249
  - http://secunia.com/advisories/50555
  - http://wicket.apache.org/2012/09/06/cve-2012-3373.html
  - http://www.securityfocus.com/bid/55445
  - http://www.securitytracker.com/id?1027508
  - http://xforce.iss.net/xforce/xfdb/78321
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/78321
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:355745
  title: "[CVE-2013-2055] Unspecified vulnerability in Apache Wicket 1.4.x before
    1.4.23, 1.5.x before 1.5..."
  description: Unspecified vulnerability in Apache Wicket 1.4.x before 1.4.23, 1.5.x
    before 1.5.11, and 6.x before 6.8.0 allows remote attackers to obtain sensitive
    information via vectors that cause raw HTML templates to be rendered without being
    processed and reading the information that is outside of wicket:panel markup.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.18
  - 1.4.19
  - 1.4.20
  - 1.4.21
  - 1.4.22
  - 1.5.0
  - 1.5.1
  - 1.5.10
  - 1.5.2
  - 1.5.3
  - 1.5.4
  - 1.5.5
  - 1.5.6
  - 1.5.7
  - 1.5.8
  - 1.5.9
  - 6.1.0
  - 6.1.1
  - 6.2.0
  - 6.3.0
  - 6.4.0
  - 6.5.0
  - 6.6.0
  - 6.7.0
  - 6.8.0
  package_manager: maven
  cve:
  - CVE-2013-2055
  disclosed_date: 2014-02-10
  created_date: 2014-02-10
  last_modified_date: 2017-05-03
  credit:
  - OSSIndex
  references:
  - http://osvdb.org/102955
  - http://seclists.org/fulldisclosure/2014/Feb/38
  - http://www.securityfocus.com/bid/65431
  - https://wicket.apache.org/2013/05/17/wicket-6.8.0-released.html
  - https://wicket.apache.org/2014/02/06/cve-2013-2055.html
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:8402799745
  title: '[CVE-2015-5347]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in the getWindowOpenJavaScript
    function in org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow in
    Apache Wicket 1.5.x before 1.5.15, 6.x before 6.22.0, and 7.x before 7.2.0 might
    allow remote attackers to inject arbitrary web script or HTML via a ModalWindow
    title.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">=1.5.0 <1.5.15"
  - ">=6.0.0 <6.22.0"
  - ">=7.0.0 <7.2.0"
  package_manager: maven
  cve:
  - CVE-2015-5347
  disclosed_date: 2016-04-12
  created_date: 2016-04-12
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://wicket.apache.org/news/2016/03/01/cve-2015-5347.html
  - http://www.securitytracker.com/id/1035165
  - https://issues.apache.org/jira/browse/WICKET-6037
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: ossindex:maven:org.apache.wicket:wicket-core:8402799825
  title: '[CVE-2015-7520]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Multiple cross-site scripting (XSS) vulnerabilities in the (1) RadioGroup
    and (2) CheckBoxMultipleChoice classes in Apache Wicket 1.5.x before 1.5.15, 6.x
    before 6.22.0, and 7.x before 7.2.0 allow remote attackers to inject arbitrary
    web script or HTML via a crafted "value" attribute in a <input> element.
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">=1.5.0 <1.5.15"
  - ">=6.0.0 <6.22.0"
  - ">=7.0.0 <7.2.0"
  package_manager: maven
  cve:
  - CVE-2015-7520
  disclosed_date: 2016-04-12
  created_date: 2016-04-12
  last_modified_date: 2017-05-03
  credit:
  - OSSIndex
  references:
  - http://wicket.apache.org/news/2016/03/02/cve-2015-7520.html
  - http://www.securitytracker.com/id/1035166
  source_url: https://ossindex.net/resource/package/7015338963/vulnerabilities
- id: snykio:maven:org.apache.wicket:wicket-core:31012
  title: Directory Traversal
  description: |
    [`org.apache.wicket:wicket-core`][1] Directory traversal vulnerability
    in Apache Wicket 1.4.x before 1.4.20 and 1.5.x before 1.5.5 allows
    remote attackers to read arbitrary web-application files via a relative
    pathname in a URL for a Wicket resource that corresponds to a null
    package.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">= 1.5.0 < 1.5.5"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-1089
  cwe:
  - CWE-22
  disclosed_date: 2012-03-23
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-1089
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31012
- id: snykio:maven:org.apache.wicket:wicket-core:31013
  title: Information Exposure
  description: |
    [`org.apache.wicket:wicket-core`][1] Unspecified vulnerability in Apache
    Wicket 1.4.x before 1.4.23, 1.5.x before 1.5.11, and 6.x before 6.8.0
    allows remote attackers to obtain sensitive information via vectors that
    cause raw HTML templates to be rendered without being processed and
    reading the information that is outside of wicket:panel markup.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">= 1.5.0 < 1.5.11"
  - ">= 6.0.0 < 6.8.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-2055
  cwe:
  - CWE-200
  disclosed_date: 2014-02-10
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2055
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31013
- id: snykio:maven:org.apache.wicket:wicket-core:31014
  title: Information Exposure
  description: |
    [`org.apache.wicket:wicket-core`][1] Affected versions of the package
    are vulnerable to Information Exposure. By issuing requests to special
    urls handled by Wicket it is possible to check for the existence of
    particular classes in the classpath and thus check whether a third party
    library with a known security vulnerability is in use.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - "< 1.5.11"
  - ">= 6.0.0 < 6.14.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0043
  cwe:
  - CWE-200
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Christian Schneider
  references:
  - https://wicket.apache.org/news/2014/02/21/cve-2014-0043.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31014
- id: snykio:maven:org.apache.wicket:wicket-core:31015
  title: Information Exposure
  description: |+
    [`org.apache.wicket:wicket-core`][1] Affected versions of the package
    are vulnerable to Information Exposure during the Session Handling
    process.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
    \nWhen rendering a web page Wicket checks the request url against the one
    at the render time. It is possible the application to change the page
    parameters (this includes both the query parameters and parameters
    encoded into the request path). When the requested url differs with the
    one at the rendering time Wicket stores the response (i.e. the page
    markup) at the server side and issues an HTTP redirect to the new url.
    When the second request comes Wicket just flushes the stored response
    from the first request into the http output stream. This way the browser
    address bar shows the updated page parameters. When storing the page
    markup at the server side Wicket uses as an identifier a pair of the
    current session id plus the new url. However, Wicket does not check if
    user session is temporary (i.e. sessionId is null). This could lead to a
    security issue if two or more users with a temporary session are
    redirected to the same url at the same time. Then user1 might see the
    markup for user2 which has overridden the markup for user1 while user1
    was following the HTTP redirect. In this way user-sensitive informations
    can be seen by other users.

  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - "< 1.5.12"
  - ">= 6.0.0 < 6.16.0"
  - ">= 7-alpha < 7.0.0-M3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2014-3526
  cwe:
  - CWE-200
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Andrea Del Bene
  - Martin Grigorov
  references:
  - https://wicket.apache.org/news/2014/09/22/cve-2014-3526.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31015
- id: snykio:maven:org.apache.wicket:wicket-core:31016
  title: Inadequate Encryption Strength
  description: |
    [`org.apache.wicket:wicket-core`][1] Affected versions of the package
    are vulnerable to Inadequate Encryption Strength. With Wicket\'s default
    security settings the usage of CryptoMapper to encrypt/obfuscate pages\'
    urls is not strong enough. It is possible to predict the encrypted
    version of an url based on the previous history.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - "< 1.5.13"
  - ">= 6.0.0 < 6.19.0"
  - ">= 7-alpha < 7.0.0-M5"
  severity: high
  package_manager: maven
  cve:
  - CVE-2014-7808
  cwe:
  - CWE-326
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Fabian Faessler
  references:
  - https://mail-archives.apache.org/mod_mbox/wicket-users/201502.mbox/%3CCAMomwMpLPDYezc=iFofm1R1Uq37vUFJ8VC-_ex5SU8-HAKBoRw@mail.gmail.com%3E
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31016
- id: snykio:maven:org.apache.wicket:wicket-core:31017
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.apache.wicket:wicket-core`][1] Multiple cross-site scripting (XSS)
    vulnerabilities in the (1) RadioGroup and (2) CheckBoxMultipleChoice
    classes in Apache Wicket 1.5.x before 1.5.15, 6.x before 6.22.0, and 7.x
    before 7.2.0 allow remote attackers to inject arbitrary web script or
    HTML via a crafted \"value\" attribute in a &lt;input&gt; element.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">= 1.5.0 < 1.5.15"
  - ">= 6.0.0 < 6.22.0"
  - ">= 7.0.0 < 7.2.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-7520
  cwe:
  - CWE-79
  disclosed_date: 2016-03-03
  created_date: 2016-03-03
  last_modified_date: 2016-03-03
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7520
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31017
- id: snykio:maven:org.apache.wicket:wicket-core:31018
  title: Cross-site Request Forgery (CSRF)
  description: |
    [`org.apache.wicket:wicket-core`][1] Affected versions of Apache Wicket
    provide a CSRF prevention measure that fails to discover some cross
    origin requests. The mitigation is to not only check the Origin HTTP
    header, but also take the Referer HTTP header into account when no
    Origin was provided. Furthermore, not all Wicket server side targets
    were subjected to the CSRF check. This was also fixed.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22wicket-core%22
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">= 6.20.0 < 6.25.0"
  - ">= 7.0.0 < 7.5.0"
  - ">= 8-alpha < 8.0.0-M2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-6806
  cwe:
  - CWE-352
  disclosed_date: 2016-11-09
  created_date: 2016-11-09
  last_modified_date: 2016-11-09
  credit:
  - Gerben Janssen van Doorn
  references:
  - https://wicket.apache.org/news/2016/11/08/cve-2016-6806.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-31018
- id: snykio:maven:org.apache.wicket:wicket-core:598243
  title: Information Disclosure
  description: |
    [org.apache.wicket:wicket-core][1] is a Java web application framework
    that takes simplicity, separation of concerns and ease of development to
    a whole new level. Wicket pages can be mocked up, previewed and later
    revised using standard WYSIWYG HTML design tools. Dynamic content
    processing and form handling is all handled in Java code using a
    first-class component model backed by POJO data beans that can easily be
    persisted using your favorite technology.

    Affected versions of this package are vulnerable to Information
    Disclosure. By crafting a special URL it is possible to make Wicket
    deliver unprocessed HTML templates. This would allow an attacker to see
    possibly sensitive information inside a HTML template that is usually
    removed during rendering.



    [1]: https://git-wip-us.apache.org/repos/asf/wicket.git/wicket-core
  affected_package: org.apache.wicket:wicket-core
  vulnerable_versions:
  - ">= 7.16.0 < 7.17.0"
  - ">= 8.8.0 < 8.9.0"
  - ">= 9.0.0-M5 < 9.0.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2020-11976
  cwe:
  - CWE-200
  disclosed_date: 2020-08-12
  created_date: 2020-08-12
  last_modified_date: 2020-08-12
  credit:
  - Mariusz Popławski
  references:
  - https://github.com/apache/wicket/commit/dd13bb87db49a56a9080a9723f557fb3d5b1a881
  - https://lists.apache.org/thread.html/r104eeefeb1e9da51f7ef79cef0f9ff12e21ef8559b77801e86b21e16%40%3Cusers.wicket.apache.org%3E
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEWICKET-598243
