---
- id: ossindex:maven:org.webjars.npm:ecstatic:8400152764
  title: HTML reflection vulnerability in 500 error status handler (XSS)
  description: Certain IO errors containing the requested path can be echoed directly
    back to the user without a Content-Type header. In some cases, browsers' sniffing
    can result in the document being treated as HTML, allowing XSS. This is resolved
    by sending a Content-Type header of text/plain.
  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - "<1.4.1"
  package_manager: maven
  disclosed_date: 2016-09-18
  created_date: 2016-09-18
  last_modified_date: 2016-09-18
  credit:
  - OSSIndex
  references:
  - https://github.com/jfhbrook/node-ecstatic/pull/142
  - https://github.com/jfhbrook/node-ecstatic/pull/151
  source_url: https://ossindex.net/resource/package/7143458367/vulnerabilities
- id: ossindex:maven:org.webjars.npm:ecstatic:8400152765
  title: Possible Cross Site Scripting (XSS)
  description: A recent vulnerability `HTML reflection vulnerability in 500 error
    status handler` was resolved for Firefox, but potentially not in all browsers.
    Previous versions of Internet Explorer have aggressively sniffed `text/plain`
    content as `text/html` despite the header, and it may be possible to provoke this
    behaviour in current versions if compatibility modes are enabled. Bugs have also
    resulted in this behaviour in other browsers in some contexts, as recently as
    iOS 6 Safari.
  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - "<=2.1.0"
  package_manager: maven
  disclosed_date: 2016-09-18
  created_date: 2016-09-18
  last_modified_date: 2016-09-18
  credit:
  - OSSIndex
  references:
  - https://cwe.mitre.org/data/definitions/79.html
  - https://github.com/jfhbrook/node-ecstatic/issues/151
  - https://github.com/jfhbrook/node-ecstatic/pull/142
  source_url: https://ossindex.net/resource/package/7143458367/vulnerabilities
- id: ossindex:maven:org.webjars.npm:ecstatic:8400152768
  title: Cross Site Scripting (XSS) in directory listing code
  description: The directory listing code from nodejitsu's static server has some
    xss flaws since `req.url` comes directly from the user and hasn't been filtered
    at all.
  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - "<0.0.4"
  package_manager: maven
  disclosed_date: 2016-09-18
  created_date: 2016-09-18
  last_modified_date: 2016-09-18
  credit:
  - OSSIndex
  references:
  - https://cwe.mitre.org/data/definitions/79.html
  - https://github.com/jfhbrook/node-ecstatic/issues/11
  source_url: https://ossindex.net/resource/package/7143458367/vulnerabilities
- id: ossindex:maven:org.webjars.npm:ecstatic:8400171454
  title: fixes the xss issues
  description: Cross Site Scripting attacks were possible due to an unguarded `req.headers.host`.
  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - "<0.0.4"
  package_manager: maven
  disclosed_date: 2016-10-05
  created_date: 2016-10-05
  last_modified_date: 2016-10-05
  credit:
  - OSSIndex
  references:
  - https://github.com/jfhbrook/node-ecstatic/issues/13
  source_url: https://ossindex.net/resource/package/7143458367/vulnerabilities
- id: snykio:maven:org.webjars.npm:ecstatic:479644
  title: Denial of Service (DoS)
  description: |+
    [org.webjars.npm:ecstatic][1] is a simple static file server middleware.
    Use it with a raw http server, express/connect or on the CLI.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The vulnerability is caused by the combination of two bugs.
    First, the underlying V8 engine throws an exception when processing the
    specially crafted date, instead of stating the date is invalid as it
    should. Second, the ecstatic server does not handle the exception,
    triggering the crash.

    Upgrading `Ecstatic` will address the second issue and thus fix the
    vulnerability.



    [1]: https://www.npmjs.com/package/ecstatic
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-9242
  cwe:
  - CWE-248
  disclosed_date: 2015-12-23
  created_date: 2015-12-24
  last_modified_date: 2015-12-24
  credit:
  - James Halliday
  references:
  - https://bugs.chromium.org/p/v8/issues/detail?id=4640
  - https://github.com/jfhbrook/node-ecstatic/pull/179
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-479644
- id: snykio:maven:org.webjars.npm:ecstatic:479645
  title: Open Redirect
  description: |
    [org.webjars.npm:ecstatic][1] is a simple static file server middleware.
    Use it with a raw http server, express/connect or on the CLI.

    Affected versions of this package are vulnerable to Open Redirect. The
    package failed to validate redirects, allowing attackers to craft
    requests that result in an `HTTP 301` redirect to any other domains.



    [1]: https://www.npmjs.com/package/ecstatic
  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-601
  disclosed_date: 2019-04-23
  created_date: 2019-04-30
  last_modified_date: 2019-04-30
  credit:
  - Mario Casola
  references:
  - https://github.com/jfhbrook/node-ecstatic/commit/be6fc25a826f190b67f4d16158f9d67899e38ee4
  - https://www.npmjs.com/advisories/830
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-479645
- id: snykio:maven:org.webjars.npm:ecstatic:479646
  title: Denial of Service (DoS)
  description: |+
    [org.webjars.npm:ecstatic][1] is a simple static file server middleware.
    Use it with a raw http server, express/connect or on the CLI.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The process of replacing null bytes in the url string is being
    done in a loop:

    `Find Null Bytes` --&gt; `If found remove Null Byte` --&gt; `Repeat`

    When no more Null Bytes found, the flow of the program continues.

    This method would work fine with a normal URL that should be relatively
    short, but a malicious user may craft a very long URL with a lot of Null
    Bytes.

    **PoC by Checkmarx:**

    `http://www.checkmarx.com/advisories/%00%00%00%00%00%00...`

    **Slowdown:**

    > A payload of 22kB caused a lag of 1 second, A payload of 35kB caused a
    > lag of 3 seconds, A payload of 86kB caused the server to crash



    [1]: https://www.npmjs.com/package/ecstatic
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-10703
  cwe:
  - CWE-400
  disclosed_date: 2016-08-08
  created_date: 2017-12-14
  last_modified_date: 2017-12-14
  credit:
  - Checkmarx
  references:
  - https://github.com/jfhbrook/node-ecstatic/commit/71ce93988ead4b561a8592168c72143907189f01#diff-b2b5a88fb51675f1aa1065c093dce1ee
  - https://github.com/jfhbrook/node-ecstatic/issues/16
  - https://www.checkmarx.com/advisories/denial-of-service-dos-vulnerability-in-ecstatic-npm-package/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-479646
- id: snykio:maven:org.webjars.npm:ecstatic:540355
  title: Denial of Service (DoS)
  description: |+
    [org.webjars.npm:ecstatic][1] is a simple static file server middleware.
    Use it with a raw http server, express/connect or on the CLI.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). It is possible to crash a server using the package due to the way
    URL params parsing is handled during redirect.

    ### PoC   {#poc}

        curl --path-as-is $(echo -e -n "http://127.0.0.1:8080/existing-dir-name?\x0cfoo")

    In the PoC the library is trying to redirect
    `/existing-dir-name?\x0cfoo` to `/existing-dir-name/?\x0cfoo` which
    cause `TypeError: The header content contains invalid characters` error
    because of `\x0c` symbol.



    [1]: https://www.npmjs.com/package/ecstatic
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.webjars.npm:ecstatic
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-10775
  cwe:
  - CWE-400
  disclosed_date: 2019-12-31
  created_date: 2019-12-31
  last_modified_date: 2019-12-31
  credit:
  - Snyk Research
  references:
  - https://github.com/jfhbrook/node-ecstatic/commit/72044b89941ada4a5e864d77257b4efb20aef498
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-540355
