---
- id: snykio:cocoapods:mosquitto:470675
  title: Improper Authentication
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Improper
    Authentication. Clients are granted access to the broker because it
    incorrectly validated empty lines or malformed data in the password
    file, treating such data as a valid username and allowing an attacker to
    bypass authentication. This vulnerability does not affect the users
    using the `mosquitto_passwd` utility to create and modify their password
    files.



    [1]: https://github.com/eclipse/mosquitto.git
  affected_package: mosquitto
  vulnerable_versions:
  - ">=1.0.0  <1.5.6"
  severity: high
  package_manager: cocoapods
  cve:
  - CVE-2018-12551
  cwe:
  - CWE-287
  disclosed_date: 2019-01-31
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - Unknown
  references:
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=543401
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-470675
- id: snykio:cocoapods:mosquitto:470926
  title: Improper Access Control
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Improper Access
    Control. Mosquitto is vulnerable to potentially insecure configuration
    issues. The vulnerability is caused by a `SIGHUP` signal when no
    additional file descriptors can be allocated by the broker when opening
    the configuration file. This causes the default configuration values to
    be reloaded, which can potentially strip off the intended security
    options.



    [1]: https://github.com/eclipse/mosquitto.git
  affected_package: mosquitto
  vulnerable_versions:
  - ">=0.0.0"
  severity: high
  package_manager: cocoapods
  cve:
  - CVE-2017-7652
  cwe:
  - CWE-284
  disclosed_date: 2018-02-27
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=530102
  - https://mosquitto.org/files/cve/2017-7652
  - https://security-tracker.debian.org/tracker/CVE-2017-7652
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-470926
- id: snykio:cocoapods:mosquitto:470937
  title: Denial of Service (DoS)
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The vulnerability exists due to a memory leak issue which can be
    caused by unauthenticated users through `CONNECT` packets.



    [1]: https://github.com/eclipse/mosquitto.git
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package][1]



    [1]: https://snyk.io/vuln/npm:ws:20171108
  affected_package: mosquitto
  vulnerable_versions:
  - ">=0.0.0"
  severity: high
  package_manager: cocoapods
  cve:
  - CVE-2017-7654
  cwe:
  - CWE-189
  disclosed_date: 2018-05-03
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=533493
  - https://github.com/eclipse/mosquitto/commit/51ec5601c2ec523bf2973fdc1eca77335eafb8de
  - https://security-tracker.debian.org/tracker/CVE-2017-7654
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-470937
- id: snykio:cocoapods:mosquitto:470938
  title: Denial of Service (DoS)
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The vulnerability can be performed by unauthenticated clients and
    is caused when the brokers are unable to control limit memory usage when
    handling `CONNECT` packets. This allows multiple clients to cause a DoS
    through Memory Exhaustion.



    [1]: https://github.com/eclipse/mosquitto.git
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package][1]



    [1]: https://snyk.io/vuln/npm:ws:20171108
  affected_package: mosquitto
  vulnerable_versions:
  - ">=0.0.0"
  severity: high
  package_manager: cocoapods
  cve:
  - CVE-2017-7651
  cwe:
  - CWE-189
  disclosed_date: 2018-02-27
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=529754
  - https://mosquitto.org/blog/2018/02/security-advisory-cve-2017-7651-cve-2017-7652/
  - https://mosquitto.org/files/cve/2017-7651
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-470938
- id: snykio:cocoapods:mosquitto:470940
  title: Security Features
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Security Features.
    The library does not enforce the access control checking for retained
    messages published by an authorized user to not to deliver to future
    subscriber after the publisher\'s access has been revoked for that
    topic.



    [1]: https://github.com/eclipse/mosquitto.git
  affected_package: mosquitto
  vulnerable_versions:
  - ">=0.0.0"
  severity: medium
  package_manager: cocoapods
  cve:
  - CVE-2018-12546
  cwe:
  - CWE-254
  disclosed_date: 2019-02-01
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Yan Jia
  references:
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=543127
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-470940
- id: snykio:cocoapods:mosquitto:471317
  title: Access Restriction Bypass
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. It does not perform ACL check for the clients with client\_id or
    username including symbols (`#` or `+`) when pattern based ACLs is used.



    [1]: https://github.com/eclipse/mosquitto.git
  affected_package: mosquitto
  vulnerable_versions:
  - ">=0.0.0"
  severity: medium
  package_manager: cocoapods
  cve:
  - CVE-2017-7650
  cwe:
  - CWE-264
  disclosed_date: 2017-05-26
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Artem Zinenko
  references:
  - http://mosquitto.org/2017/05/security-advisory-cve-2017-7650/
  - http://www.securityfocus.com/bid/98741
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-471317
- id: snykio:cocoapods:mosquitto:471321
  title: Denial of Service (DoS)
  description: "[Mosquitto][1] is an open source implementation of a server for version\n3.1
    and 3.1.1 of the MQTT protocol.\n\nAffected versions of this package are vulnerable
    to Denial of Service\n(DoS). The vulnerability exists due to the lack of checks
    on invalid\nUTF-8 characters in the topic strings, causing a broker to disconnect\nwhen
    parsing invalid strings.\n\n\n\n[1]: https://github.com/eclipse/mosquitto.git\n\\nDenial
    of Service (DoS) describes a family of attacks, all aimed at\nmaking a system
    inaccessible to its original and legitimate users. There\nare many types of DoS
    attacks, ranging from trying to clog the network\npipes to the system by generating
    a large volume of traffic from many\nmachines (a Distributed Denial of Service
    - DDoS - attack) to sending\ncrafted requests that cause a system to crash or
    take a disproportional\namount of time to process.\n\nThe Regular expression Denial
    of Service (ReDoS) is a type of Denial of\nService attack. Regular expressions
    are incredibly powerful, but they\naren\\'t very intuitive and can ultimately
    end up making it easy for\nattackers to take your site down.\n\nLet’s take the
    following regular expression as an example:\n\n    regex = /A(B|C+)+D/\n{: .language-js}\n\nThis
    regular expression accomplishes the following:\n\n* `A` The string must start
    with the letter \\'A\\'\n* `(B|C+)+` The string must then follow the letter A
    with either the\n  letter \\'B\\' or some number of occurrences of the letter
    \\'C\\' (the\n  `+` matches one or more times). The `+` at the end of this section\n
    \ states that we can look for one or more matches of this section.\n* `D` Finally,
    we ensure this section of the string ends with a \\'D\\'\n\nThe expression would
    match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD`\nand `ACCCCCD`\n\nIt most cases,
    it doesn\\'t take very long for a regex engine to find a\nmatch:\n\n    $ time
    node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n    0.04s user
    0.01s system 95% cpu 0.052 total\n    \n    $ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n
    \   1.79s user 0.02s system 99% cpu 1.812 total\n{: .language-bash}\n\nThe entire
    process of testing it against a 30 characters long string\ntakes around ~52ms.
    But when given an invalid string, it takes nearly\ntwo seconds to complete the
    test, over ten times as long as it took to\ntest a valid string. The dramatic
    difference is due to the way regular\nexpressions get evaluated.\n\nMost Regex
    engines will work very similarly (with minor differences).\nThe engine will match
    the first possible way to accept the current\ncharacter and proceed to the next
    one. If it then fails to match the\nnext one, it will backtrack and see if there
    was another way to digest\nthe previous character. If it goes too far down the
    rabbit hole only to\nfind out the string doesn’t match in the end, and if many
    characters\nhave multiple valid regex paths, the number of backtracking steps
    can\nbecome very large, resulting in what is known as *catastrophic\nbacktracking*.\n\nLet\\'s
    look at how our expression runs into this problem, using a\nshorter string: \\\"ACCCX\\\".
    While it seems fairly straightforward, there\nare still four different ways that
    the engine could match those three\nC\\'s:\n\n1.  CCC\n2.  CC+C\n3.  C+CC\n4.
    \ C+C+C.\n\nThe engine has to try each of those combinations to see if any of
    them\npotentially match against the expression. When you combine that with the\nother
    steps the engine must take, we can use [RegEx 101 debugger][1] to\nsee the engine
    has to take a total of 38 steps before it can determine\nthe string doesn\\'t
    match.\n\nFrom there, the number of steps the engine must use to validate a string\njust
    continues to grow.\n\n| String | Number of C\\'s | Number of steps |\n|----------\n|
    ACCCX | 3 | 38 |\n| ACCCCX | 4 | 71 |\n| ACCCCCX | 5 | 136 |\n| ACCCCCCCCCCCCCCX
    | 14 | 65,553 |\n\nBy the time the string includes 14 C\\'s, the engine has to
    take over\n65,000 steps just to see if the string is valid. These extreme\nsituations
    can cause them to work very slowly (exponentially related to\ninput size, as shown
    above), allowing an attacker to exploit this and\ncan cause the service to excessively
    consume CPU, resulting in a Denial\nof Service.\n\n\n\n[1]: https://regex101.com/debugger\n"
  affected_package: mosquitto
  vulnerable_versions:
  - ">=1.4.8  <1.5.0"
  severity: medium
  package_manager: cocoapods
  cve:
  - CVE-2017-7653
  cwe:
  - CWE-400
  disclosed_date: 2018-03-07
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - http://docs.oasis-open.org/mqtt/disallowed-chars/v1.0/disallowed-chars-v1.0.pdf
  - https://bugs.eclipse.org/bugs/show_bug.cgi?id=532113
  - https://github.com/eclipse/mosquitto/commit/b11855821e5848fdbb6f66b609b2e1c25c7ddb8a
  - https://lists.debian.org/debian-lts-announce/2018/09/msg00036.html
  - https://usn.ubuntu.com/4023-1/
  - https://www.debian.org/security/2018/dsa-4325
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-471321
- id: snykio:cocoapods:mosquitto:471328
  title: Information Exposure
  description: |
    [Mosquitto][1] is an open source implementation of a server for version
    3.1 and 3.1.1 of the MQTT protocol.

    Affected versions of this package are vulnerable to Information
    Exposure. The leakage is due to keeping the mosquitto.db (aka the
    persistence file) as world readable. Therefore, local users can access
    sensitive MQTT topic information.



    [1]: https://github.com/eclipse/mosquitto.git
  affected_package: mosquitto
  vulnerable_versions:
  - ">=1.4.8  <1.4.13"
  severity: medium
  package_manager: cocoapods
  cve:
  - CVE-2017-9868
  cwe:
  - CWE-200
  disclosed_date: 2017-06-22
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - https://github.com/eclipse/mosquitto/commit/09cb1b61c8f48284d9c42bd911faa7525cc689c7
  - https://github.com/eclipse/mosquitto/issues/468
  - https://lists.debian.org/debian-lts-announce/2018/09/msg00036.html
  source_url: https://snyk.io/vuln/SNYK-COCOAPODS-MOSQUITTO-471328
