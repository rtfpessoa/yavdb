---
- id: snykio:go:github.com/mholt/archiver/cmd/arc:174728
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[github.com/mholt/archiver/cmd/arc][1] is a cross-platform, multi-format\narchive
    utility and Go library.\n\nAffected versions of this package are vulnerable to
    Arbitrary File Write\nvia Archive Extraction (Zip Slip) via the `Unarchive` functions.\n\n\n\n[1]:
    https://github.com/mholt/archiver\n\\nIt is exploited using a specially crafted
    zip archive, that holds path\ntraversal filenames. When exploited, a filename
    in a malicious archive\nis concatenated to the target extraction directory, which
    results in the\nfinal path ending up outside of the target folder. For instance,
    a zip\nmay hold a file with a \\\"../../file.exe\\\" location and thus break out
    of\nthe target folder. If an executable or a configuration file is\noverwritten
    with a file containing malicious code, the problem can turn\ninto an arbitrary
    code execution issue quite easily.\n\nThe following is an example of a zip archive
    with one benign file and\none malicious file. Extracting the malicous file will
    result in\ntraversing out of the target folder, ending up in `/root/.ssh/`\noverwriting
    the `authorized_keys` file:\n\n    \n    +2018-04-15 22:04:29 ..... 19 19 good.txt\n
    \   \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: github.com/mholt/archiver/cmd/arc
  vulnerable_versions:
  - ">=3.0.0"
  severity: medium
  package_manager: go
  cve:
  - CVE-2019-10743
  cwe:
  - CWE-29
  disclosed_date: 2019-05-13
  created_date: 2019-05-16
  last_modified_date: 2019-05-16
  credit:
  - Giulio Comi
  references:
  - https://github.com/mholt/archiver/pull/169
  - https://github.com/mholt/archiver/pull/203
  - https://github.com/snyk/zip-slip-vulnerability
  - https://snyk.io/research/zip-slip-vulnerability
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARC-174728
