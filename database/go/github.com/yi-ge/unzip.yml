---
- id: snykio:go:github.com/yi-ge/unzip:559345
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[github.com/yi-ge/unzip][1] is a Golang \\*.zip decompress package.
    This\npackage is a fork from [https://github.com/artdarek/go-unzip][2] with\nadded
    support for Symlinks.\n\nAffected versions of this package are vulnerable to Arbitrary
    File Write\nvia Archive Extraction (Zip Slip). ZIP Path traversal is possible
    during\nextraction due to no validation and sanitization of filenames.\n\n###
    PoC   {#poc}\n\n    package main\n    import (\"github.com/yi-ge/unzip\"\n    \"fmt\")\n
    \   \n    func main() {\n    u := unzip.New(\"/home/snoopy/zip-slip.zip\", \"/home/snoopy/uploads\")\n
    \   err := u.Extract()\n    if err != nil {\n    fmt.Println(err)\n    }\n    }\n\n\n\n[1]:
    https://pkg.go.dev/mod/github.com/yi-ge/unzip\n[2]: https://github.com/artdarek/go-unzip\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: github.com/yi-ge/unzip
  vulnerable_versions:
  - "*"
  severity: medium
  package_manager: go
  cwe:
  - CWE-29
  disclosed_date: 2020-03-05
  created_date: 2020-03-05
  last_modified_date: 2020-03-05
  credit:
  - Snyk Security Team
  references:
  - https://github.com/artdarek/go-unzip/pull/2
  - https://github.com/yi-ge/unzip/pull/1
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMYIGEUNZIP-559345
