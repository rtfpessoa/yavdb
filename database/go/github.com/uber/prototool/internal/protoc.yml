---
- id: snykio:go:github.com/uber/prototool/internal/protoc:472938
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[github.com/uber/prototool/internal/protoc][1] is a package for Protocol\nBuffers.\n\nAffected
    versions of this package are vulnerable to Arbitrary File Write\nvia Archive Extraction
    (Zip Slip). Files within a zip file can break out\nof the target directory when
    being extracted.\n\n\n\n[1]: https://godoc.org/github.com/uber/prototool/internal/protoc\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: github.com/uber/prototool/internal/protoc
  vulnerable_versions:
  - "*"
  severity: low
  package_manager: go
  cwe:
  - CWE-22
  disclosed_date: 2019-09-10
  created_date: 2019-10-11
  last_modified_date: 2019-10-11
  credit:
  - Semmle Security Research
  references:
  - https://github.com/uber/prototool/blob/dev/internal/protoc/downloader.go#L245
  - https://github.com/uber/prototool/issues/497
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUBERPROTOTOOLINTERNALPROTOC-472938
