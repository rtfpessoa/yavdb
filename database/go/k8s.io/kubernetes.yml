---
- id: snykio:go:k8s.io/kubernetes:1048855
  title: Man-in-the-Middle (MitM)
  description: "[k8s.io/kubernetes][1] is a Production-Grade Container Scheduling
    and\nManagement.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle\n(MitM).
    An attacker that is able to create a ClusterIP service and set\nthe `spec.externalIPs`
    field can intercept traffic to that IP. An\nattacker that is able to patch the
    status (which is considered a\nprivileged operation and should not typically be
    granted to users) of a\nLoadBalancer service can set the `status.loadBalancer.ingress.ip`
    to\nsimilar effect.\n\nMitigations have been published:\n\n1.  To restrict the
    use of external IPs we are providing an admission\n    webhook container:\n    `k8s.gcr.io/multitenancy/externalip-webhook:v1.0.0`.
    The source code\n    and deployment instructions are published at\n    [https://github.com/kubernetes-sigs/externalip-webhook][2].\n2.
    \ Alternatively, external IPs can be restricted using OPA Gatekeeper.\n    A sample
    ConstraintTemplate and Constraint can be found here:\n    [https://github.com/open-policy-agent/gatekeeper-library/tree/master/library/general/externalip][3].\n
    \   ## Remediation   {#remediation}\n    \n    There is no fixed version for `k8s.io/kubernetes`.\n
    \   ## References   {#references}\n\n* [GitHub Issue][4]\n* [GitHub Issue][5]\n*
    [Kubernetes Security Advisory][6]\n* [RedHat Bugzilla Bug][7]\n\n\n\n[1]: https://kubernetes.io\n[2]:
    https://github.com/kubernetes-sigs/externalip-webhook\n[3]: https://github.com/open-policy-agent/gatekeeper-library/tree/master/library/general/externalip\n[4]:
    https://github.com/kubernetes/kubernetes/issues/97076\n[5]: https://github.com/kubernetes/kubernetes/issues/97110\n[6]:
    https://groups.google.com/g/kubernetes-security-announce/c/iZWsF9nbKE8\n[7]: https://bugzilla.redhat.com/show_bug.cgi?id=1891051\n"
  affected_package: k8s.io/kubernetes
  vulnerable_versions:
  - "*"
  severity: medium
  package_manager: go
  cve:
  - CVE-2020-8554
  cwe:
  - CWE-300
  disclosed_date: 2020-12-07
  created_date: 2020-12-08
  last_modified_date: 2020-12-08
  credit:
  - Etienne Champetier of Anevia
  source_url: https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-1048855
- id: snykio:go:k8s.io/kubernetes:50004
  title: Privilege Escalation
  description: |
    Affected version of [`github.com/kubernetes/kubernetes`][1] are
    vulnerable to Privilege Escalation. Kubernetes version 1.5.0-1.5.4 is
    vulnerable to a privilege escalation in the PodSecurityPolicy admission
    plugin resulting in the ability to make use of any existing
    PodSecurityPolicy object.



    [1]: https://github.com/kubernetes/kubernetes
  affected_package: k8s.io/kubernetes
  vulnerable_versions:
  - ">=1.5.0 <1.5.5"
  severity: high
  package_manager: go
  cve:
  - CVE-2017-1000056
  cwe:
  - CWE-265
  disclosed_date: 2017-03-01
  created_date: 2017-03-01
  last_modified_date: 2017-03-01
  credit:
  - Unknown
  references:
  - https://github.com/kubernetes/kubernetes/commit/7fef0a4f6a44ea36f166c39fdade5324eff2dd5e
  - https://github.com/kubernetes/kubernetes/issues/43459
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-1000056
  source_url: https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50004
- id: snykio:go:k8s.io/kubernetes:50019
  title: Directory Traversal
  description: |
    Affected version of [`github.com/kubernetes/kubernetes`][1] are
    vulnerable to Directory Traversal. Directory traversal vulnerability in
    Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows
    attackers to write to arbitrary files via a crafted object type name,
    which is not properly handled before passing it to etcd.



    [1]: https://github.com/kubernetes/kubernetes
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: k8s.io/kubernetes
  vulnerable_versions:
  - "<1.1.1"
  severity: medium
  package_manager: go
  cve:
  - CVE-2015-5305
  cwe:
  - CWE-22
  disclosed_date: 2015-06-11
  created_date: 2015-06-11
  last_modified_date: 2015-06-11
  credit:
  - Unknown
  references:
  - https://access.redhat.com/errata/RHSA-2015:1945
  - https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305
  source_url: https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50019
- id: snykio:go:k8s.io/kubernetes:50026
  title: Information Exposure
  description: |
    Affected version of [`github.com/kubernetes/kubernetes`][1] are
    vulnerable to Information Exposure. Kubernetes before 1.2.0-alpha.5
    allows remote attackers to read arbitrary pod logs via a container name.



    [1]: https://github.com/kubernetes/kubernetes
  affected_package: k8s.io/kubernetes
  vulnerable_versions:
  - "<1.2.0-alpha.5"
  severity: medium
  package_manager: go
  cve:
  - CVE-2015-7528
  cwe:
  - CWE-200
  disclosed_date: 2015-11-28
  created_date: 2015-11-28
  last_modified_date: 2015-11-28
  credit:
  - Unknown
  references:
  - https://github.com/kubernetes/kubernetes/commit/afd56495a1052a3387b81df1786a8d0f51bc8671
  - https://github.com/kubernetes/kubernetes/pull/17886
  - https://github.com/kubernetes/kubernetes/releases/tag/v1.2.0-alpha.5
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7528
  source_url: https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50026
- id: snykio:go:k8s.io/kubernetes:50034
  title: Access Restriction Bypass
  description: |
    Affected version of [`github.com/kubernetes/kubernetes`][1] are
    vulnerable to Access Restriction Bypass. The API server in Kubernetes
    does not properly check admission control, which allows remote
    authenticated users to access additional resources via a crafted patched
    object.



    [1]: https://github.com/kubernetes/kubernetes
  affected_package: k8s.io/kubernetes
  vulnerable_versions:
  - "<1.2.0-alpha.6"
  severity: high
  package_manager: go
  cve:
  - CVE-2016-1905
  cwe:
  - CWE-284
  disclosed_date: 2016-03-02
  created_date: 2016-03-02
  last_modified_date: 2016-03-02
  credit:
  - Unknown
  references:
  - https://access.redhat.com/errata/RHSA-2016:0070
  - https://github.com/kubernetes/kubernetes/commit/9e6912384a5bc714f2a780b870944a8cee264a22
  - https://github.com/kubernetes/kubernetes/issues/19479
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1905
  source_url: https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50034
