---
- id: friendsofphp:packagist:studio-42/elfinder:CVE-2019-6257
  title: Fixed being bypassable of CVE-2019-6257 SSRF.
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.49"
  package_manager: packagist
  cve:
  - CVE-2019-6257
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://github.com/Studio-42/elFinder/releases/tag/2.1.49
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-6257.yaml
- id: friendsofphp:packagist:studio-42/elfinder:CVE-2019-9194
  title: elFinder before 2.1.48 has a command injection vulnerability in the PHP connector.
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.48"
  package_manager: packagist
  cve:
  - CVE-2019-9194
  disclosed_date: 2019-02-26
  created_date: 2019-02-26
  last_modified_date: 2019-02-26
  credit:
  - FriendsOfPHP
  references:
  - https://github.com/Studio-42/elFinder/releases/tag/2.1.48
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-9194.yaml
- id: snykio:packagist:studio-42/elfinder:468992
  title: Command Injection
  description: |
    [studio-42/elfinder][1] is an open-source file manager for web, written
    in JavaScript using jQuery UI.

    Affected versions of this package are vulnerable to Command Injection
    via the PHP connector.



    [1]: https://github.com/Studio-42/elFinder
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.48"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-9194
  cwe:
  - CWE-78
  disclosed_date: 2019-02-26
  created_date: 2019-09-23
  last_modified_date: 2019-09-23
  credit:
  - Thomas Chauchefoin
  references:
  - https://github.com/Studio-42/elFinder/issues/2868
  - https://github.com/Studio-42/elFinder/releases/tag/2.1.48
  - https://www.exploit-db.com/exploits/46481
  - https://www.exploit-db.com/exploits/46539
  source_url: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-468992
- id: snykio:packagist:studio-42/elfinder:72129
  title: Directory Traversal
  description: |
    [studio-42/elfinder][1] is an open-source file manager for web, written
    in JavaScript using jQuery UI.

    Affected versions of this package are vulnerable to Directory Traversal
    attacks via the `zipdl()` function in the `elFinder.class.php` class,
    resulting in file deletion.



    [1]: https://packagist.org/packages/studio-42/elfinder
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.36"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-9109
  cwe:
  - CWE-22
  disclosed_date: 2018-03-28
  created_date: 2018-04-17
  last_modified_date: 2018-04-17
  credit:
  - Unknown
  references:
  - https://github.com/Studio-42/elFinder/commit/157f471d7e48f190f74e66eb5bc73360b5352fd3
  - https://github.com/Studio-42/elFinder/releases/tag/2.1.36
  - https://nvd.nist.gov/vuln/detail/CVE-2018-9109
  source_url: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-72129
- id: snykio:packagist:studio-42/elfinder:72130
  title: Directory Traversal
  description: |
    [studio-42/elfinder][1] is an open-source file manager for web, written
    in JavaScript using jQuery UI. Creation is inspired by simplicity and
    convenience of Finder program used in Mac OS X operating system.

    Affected versions of this package are vulnerable to Directory Traversal
    via the `zipdl()` function in the `elFinder.class.php` class, resulting
    in file deletion.

    **NOTE**\: this issue exists because of an incomplete fix for
    [CVE-2018-9109][2].



    [1]: https://packagist.org/packages/studio-42/elfinder
    [2]: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-72129
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.37"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-9110
  cwe:
  - CWE-22
  disclosed_date: 2018-03-28
  created_date: 2018-04-17
  last_modified_date: 2018-04-17
  credit:
  - Unknown
  references:
  - https://github.com/Studio-42/elFinder/commit/e6351557b86cc10a7651253d2d2aff7f6b918f8e
  - https://github.com/Studio-42/elFinder/releases/tag/2.1.37
  - https://nvd.nist.gov/vuln/detail/CVE-2018-9110
  source_url: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-72130
- id: snykio:packagist:studio-42/elfinder:73505
  title: Information Exposure
  description: |
    [studio-42/elfinder][1] is an open-source file manager for web, written
    in JavaScript using jQuery UI.

    Affected versions of this package are vulnerable to Information
    Exposure. There is a possible leak of information if PHP\'s curl
    extension is enabled and safe\_mode or open\_basedir is not set.



    [1]: https://github.com/Studio-42/elFinder
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.45"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-5884
  cwe:
  - CWE-200
  disclosed_date: 2019-01-09
  created_date: 2019-01-14
  last_modified_date: 2019-01-14
  credit:
  - Ravindra Rajaram and Hamsalekha Madiraju
  references:
  - https://github.com/Studio-42/elFinder/commit/f133163f2d754584de65d718b2fde96191557316
  source_url: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-73505
- id: snykio:packagist:studio-42/elfinder:73510
  title: Server Side Request Forgery (SSRF)
  description: |
    [studio-42/elfinder][1] is an open-source file manager for web, written
    in JavaScript using jQuery UI.

    Affected versions of this package are vulnerable to Server Side Request
    Forgery (SSRF). Malicious users could gain access to the contents of
    internal network resources. This occurs in `get_remote_contents()` in
    `php/elFinder.class.php`.



    [1]: https://github.com/Studio-42/elFinder
  affected_package: studio-42/elfinder
  vulnerable_versions:
  - "<2.1.46"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-6257
  cwe:
  - CWE-918
  disclosed_date: 2019-01-14
  created_date: 2019-01-14
  last_modified_date: 2019-01-14
  credit:
  - Do Ha Anh
  references:
  - https://github.com/Studio-42/elFinder/blob/68ec63c0aeca3963101aca8f842dc9f2e4c4c6d3/Changelog
  - https://github.com/Studio-42/elFinder/commit/2f522db8f037a66ce9040ee0b216aa4a0359286c
  source_url: https://snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-73510
