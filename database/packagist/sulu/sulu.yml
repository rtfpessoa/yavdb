---
- id: snykio:packagist:sulu/sulu:597470
  title: Information Exposure
  description: |
    [sulu/sulu][1] is a highly extensible open-source PHP content management
    system based on the Symfony framework.

    Affected versions of this package are vulnerable to Information
    Exposure. This vulnerability consists of a few related issues:

    #### Forget password leaks information if the user exists   {#forget-password-leaks-information-if-the-user-exists}

    When the \"Forget password\" feature on the login screen is used, Sulu
    asks the user for a username or email address. If the given string is
    not found, a response with a `400` error code is returned, along with a
    error message saying that this user name does not exist:

        {
            "code": 0,
            "message": "Entity with the type \u0022Sulu\\Bundle\\SecurityBundle\\Entity\\User\u0022 and the id \u0022asdf\u0022 not found."
        }
    {: .language-json}

    This enables attackers to retrieve valid usernames.

    #### Forgot password leaks user email if user exists   {#forgot-password-leaks-user-email-if-user-exists}

    The response of the \"Forgot Password\" request returns the email
    address to which the email was sent, if the operation was successful:

        {"email":"admin@localhost.local"}
    {: .language-json}

    This information should not be exposed, as it can be used to gather
    email addresses.

    #### Response time of login gives hint if the username exists   {#response-time-of-login-gives-hint-if-the-username-exists}

    If the username the user enters in the login screen does not exists, the
    request responds much faster than if the username exists. This again
    allows attackers to retrieve valid usernames.

    #### Reset Token for Forgot Password feature is not hashed   {#reset-token-for-forgot-password-feature-is-not-hashed}

    The reset token in the user database table is not hashed. That means
    that somebody could try to request a new password using the Forgot
    Password feature, and look that up in the database, if the attacker
    somehow got access to the database. Hashing the reset token would fix
    that problem.



    [1]: https://github.com/sulu/sulu
  affected_package: sulu/sulu
  vulnerable_versions:
  - "<1.6.35"
  - ">=2.0.0  <2.0.10"
  - ">=2.1.0  <2.1.1"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2020-15132
  cwe:
  - CWE-200
  disclosed_date: 2020-08-06
  created_date: 2020-08-06
  last_modified_date: 2020-08-06
  credit:
  - Unknown
  references:
  - https://github.com/sulu/sulu/security/advisories/GHSA-wfm4-pq59-wg6r
  source_url: https://snyk.io/vuln/SNYK-PHP-SULUSULU-597470
