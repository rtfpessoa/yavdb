---
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:201606-01
  title: Link injection
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.4"
  package_manager: packagist
  disclosed_date: 2016-06-06
  created_date: 2016-06-06
  last_modified_date: 2016-06-06
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201606-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/201606-01.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:201710-01
  title: Signature validation bypass
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.12.0 <1.13.0"
  - ">=1.13.0 <1.14.0"
  - ">=1.14.0 <1.14.17"
  package_manager: packagist
  disclosed_date: 2017-10-25
  created_date: 2017-10-25
  last_modified_date: 2017-10-25
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201710-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/201710-01.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:2018-12-20
  title: Credentials exposure in session storage
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.16.0 <1.16.3"
  package_manager: packagist
  disclosed_date: 2018-12-20
  created_date: 2018-12-20
  last_modified_date: 2018-12-20
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201812-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/2018-12-20.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:2019-07-10
  title: Reflected Cross-Site-Scripting
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.12.0 <1.13.0"
  - ">=1.13.0 <1.14.0"
  - ">=1.14.0 <1.15.0"
  - ">=1.15.0 <1.16.0"
  - ">=1.16.0 <1.17.0"
  - ">=1.17.0 <1.17.3"
  package_manager: packagist
  disclosed_date: 2019-07-09
  created_date: 2019-07-09
  last_modified_date: 2019-07-09
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201907-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/2019-07-10.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:2019-11-19
  title: Information disclosure
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.17.0 <1.17.8"
  package_manager: packagist
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201911-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/2019-11-19.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2016-3124
  title: Information leakage issue in the sanitycheck module
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.1"
  package_manager: packagist
  cve:
  - CVE-2016-3124
  disclosed_date: 2016-03-07
  created_date: 2016-03-07
  last_modified_date: 2016-03-07
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201603-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2016-3124.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2016-9955
  title: Incorrect signature verification
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.11"
  package_manager: packagist
  cve:
  - CVE-2016-9955
  disclosed_date: 2016-12-03
  created_date: 2016-12-03
  last_modified_date: 2016-12-03
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201612-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2016-9955.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12867
  title: Invalid token creation and validation
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.14.0 <1.14.15"
  package_manager: packagist
  cve:
  - CVE-2017-12867
  disclosed_date: 2017-06-28
  created_date: 2017-06-28
  last_modified_date: 2017-06-28
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201708-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12867.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12868
  title: Session fixation and authentication bypass (authcrypt module)
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.14.12 <1.14.14"
  package_manager: packagist
  cve:
  - CVE-2017-12868
  disclosed_date: 2017-05-05
  created_date: 2017-05-05
  last_modified_date: 2017-05-05
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201705-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12868.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12869
  title: Authentication context bypass (multiauth module)
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.14"
  package_manager: packagist
  cve:
  - CVE-2017-12869
  disclosed_date: 2017-05-05
  created_date: 2017-05-05
  last_modified_date: 2017-05-05
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201704-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12869.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12870
  title: Unauthenticated encryption in CBC mode
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.13"
  package_manager: packagist
  cve:
  - CVE-2017-12870
  disclosed_date: 2017-04-26
  created_date: 2017-04-26
  last_modified_date: 2017-04-26
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201704-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12870.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12871
  title: Incorrect IV generation for encryption
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.14.0 <1.14.12"
  package_manager: packagist
  cve:
  - CVE-2017-12871
  disclosed_date: 2017-03-30
  created_date: 2017-03-30
  last_modified_date: 2017-03-30
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201703-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12871.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12872
  title: Multiple timing side-channel issues
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.12.0 <1.13.0"
  - ">=1.13.0 <1.14.0"
  - ">=1.14.0 <1.14.12"
  package_manager: packagist
  cve:
  - CVE-2017-12872
  disclosed_date: 2017-03-17
  created_date: 2017-03-17
  last_modified_date: 2017-03-17
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201703-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12872.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-12873
  title: Incorrect persistent NameID generation
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.7.0 <1.14.11"
  package_manager: packagist
  cve:
  - CVE-2017-12873
  disclosed_date: 2016-12-12
  created_date: 2016-12-12
  last_modified_date: 2016-12-12
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201612-04
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12873.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-18121
  title: Cross Site Scripting (XSS) in the consentAdmin module
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.12.0 <1.13.0"
  - ">=1.13.0 <1.14.0"
  - ">=1.14.0 <1.14.16"
  package_manager: packagist
  cve:
  - CVE-2017-18121
  disclosed_date: 2017-08-25
  created_date: 2017-08-25
  last_modified_date: 2017-08-25
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201709-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-18121.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2017-18122
  title: Signature validation bypass (SAML 1.1)
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.17"
  package_manager: packagist
  cve:
  - CVE-2017-18122
  disclosed_date: 2017-10-25
  created_date: 2017-10-25
  last_modified_date: 2017-10-25
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201710-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-18122.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2018-6520
  title: Open redirection protection bypass
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.15.2"
  package_manager: packagist
  cve:
  - CVE-2018-6520
  disclosed_date: 2018-01-31
  created_date: 2018-01-31
  last_modified_date: 2018-01-31
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201801-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2018-6520.yaml
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp:CVE-2018-6521
  title: Use of insecure connection charset (sqlauth module)
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.15.2"
  package_manager: packagist
  cve:
  - CVE-2018-6521
  disclosed_date: 2018-01-31
  created_date: 2018-01-31
  last_modified_date: 2018-01-31
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201801-03
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2018-6521.yaml
- id: ossindex:packagist:simplesamlphp/simplesamlphp:8399183299
  title: Information leakage issue in the sanitycheck module
  description: Information leakage issue in the sanitycheck module
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<=1.14.1"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2016-3124.yaml
  - https://simplesamlphp.org/security/201603-01
  source_url: https://ossindex.net/resource/package/8397596457/vulnerabilities
- id: ossindex:packagist:simplesamlphp/simplesamlphp:8400192138
  title: Link injection
  description: Link injection
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.4"
  package_manager: packagist
  disclosed_date: 2016-10-22
  created_date: 2016-10-22
  last_modified_date: 2016-10-22
  credit:
  - OSSIndex
  references:
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/201606-01.yaml
  - https://simplesamlphp.org/security/201606-01
  source_url: https://ossindex.net/resource/package/8397596457/vulnerabilities
- id: snykio:packagist:simplesamlphp/simplesamlphp:451570
  title: Cross-site Scripting (XSS)
  description: |
    [simplesamlphp/simplesamlphp][1] is a PHP implementation of a SAML 2.0
    service provider and identity provider, also compatible with Shibboleth
    1.3 and 2.0.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). When sending a `SAML` message to another entity, SimpleSAMLphp
    will use the URL of the appropriate endpoint to redirect the user\'s
    browser to it, or craft a form that will be automatically posted to it.
    The URL that\'s target of the message is fetched from the stored
    metadata for the given entity, and that metadata is trusted as correct.

    However, if that metadata has been altered by a malicious party (either
    an attacker or a rogue administrator) to substitute the URLs of the
    endpoints with javascript code, SimpleSAMLphp uses them without any
    validation.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.12.0  <1.17.3"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2019-07-14
  created_date: 2019-07-14
  last_modified_date: 2019-07-14
  credit:
  - Steve Manzuik
  references:
  - https://github.com/simplesamlphp/simplesamlphp/commit/ce2294e092b3be7db2fc4e18e774b791d4564ff3
  - https://simplesamlphp.org/security/201907-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-451570
- id: snykio:packagist:simplesamlphp/simplesamlphp:536104
  title: Information Exposure
  description: |
    [simplesamlphp/simplesamlphp][1] is a PHP implementation of a SAML 2.0
    service provider and identity provider, also compatible with Shibboleth
    1.3 and 2.0.

    Affected versions of this package are vulnerable to Information
    Exposure. It is possible to access an unprotected endpoint part of
    SimpleSAMLphp, which contains deployment and debugging information.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.17.0  <1.17.8"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2019-11-27
  created_date: 2019-12-01
  last_modified_date: 2019-12-01
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201911-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-536104
- id: snykio:packagist:simplesamlphp/simplesamlphp:543283
  title: Cross-site Scripting (XSS)
  description: |+
    [simplesamlphp/simplesamlphp][1] is a PHP implementation of a SAML 2.0
    service provider and identity provider, also compatible with Shibboleth
    1.3 and 2.0.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). It allows error reports to be submitted and sent to the system
    administrator. Starting with SimpleSAMLphp 1.18.0, a new
    SimpleSAML\\Utils\\EMail class was introduced to handle sending emails,
    implemented as a wrapper of an external dependency. This new wrapper
    allows us to use Twig templates in order to create the email sent with
    an error report. Since Twig provides automatic escaping of variables,
    manual escaping of the free-text field in www/errorreport.php was
    removed to avoid double escaping. However, for those not using the new
    user interface yet, an email template is hardcoded into the class itself
    in plain PHP. Since no escaping is provided in this template, it is then
    possible to inject HTML inside the template by manually crafting the
    contents of the free-text field.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.18.0  <1.18.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2020-5226
  cwe:
  - CWE-79
  disclosed_date: 2020-01-24
  created_date: 2020-01-26
  last_modified_date: 2020-01-26
  credit:
  - Unknown
  references:
  - https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-mj9p-v2r8-wf8w
  - https://simplesamlphp.org/security/202001-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-543283
- id: snykio:packagist:simplesamlphp/simplesamlphp:543287
  title: Log Injection
  description: |
    [simplesamlphp/simplesamlphp][1] is a PHP implementation of a SAML 2.0
    service provider and identity provider, also compatible with Shibboleth
    1.3 and 2.0.

    Affected versions of this package are vulnerable to Log Injection. The
    `www/erroreport.php` script, which receives error reports and sends them
    via email to the system administrator, did not properly sanitize the
    report identifier obtained from the request. This allows an attacker,
    under specific circumstances, to inject new log lines by manually
    crafting this report ID. When configured to use the file logging
    handler, SimpleSAMLphp will output all its logs by appending each log
    line to a given file. Since the reportID parameter received in a request
    sent to www/errorreport.php was not properly sanitized, it was possible
    to inject newline characters into it, effectively allowing a malicious
    user to inject new log lines with arbitrary content.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.18.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2020-5225
  cwe:
  - CWE-200
  disclosed_date: 2020-01-24
  created_date: 2020-01-26
  last_modified_date: 2020-01-26
  credit:
  - Frederic Vleminckx
  references:
  - https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-6gc6-m364-85ww
  - https://simplesamlphp.org/security/202001-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-543287
- id: snykio:packagist:simplesamlphp/simplesamlphp:70160
  title: Link Injection
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Link Injection.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.4"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-74
  disclosed_date: 2016-06-06
  created_date: 2016-06-06
  last_modified_date: 2016-06-06
  credit:
  - John Page
  references:
  - https://simplesamlphp.org/security/201606-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70160
- id: snykio:packagist:simplesamlphp/simplesamlphp:70161
  title: TLS Timing Attack
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Multiple timing side-channel issues.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.12"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-310
  disclosed_date: 2017-03-17
  created_date: 2017-03-17
  last_modified_date: 2017-03-17
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201703-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70161
- id: snykio:packagist:simplesamlphp/simplesamlphp:70162
  title: Insecure Randomness
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Insecure Randomness.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.14.0  <1.14.12"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-330
  disclosed_date: 2017-03-30
  created_date: 2017-03-30
  last_modified_date: 2017-03-30
  credit:
  - Chris Czub
  references:
  - https://simplesamlphp.org/security/201703-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70162
- id: snykio:packagist:simplesamlphp/simplesamlphp:70163
  title: Invalid Token Creation and Validation
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Invalid Token Creation and Validation.

    The SimpleSAML\_Auth\_TimeLimitedToken class in SimpleSAMLphp 1.14.14
    and earlier allows attackers with access to a secret token to extend its
    validity period by manipulating the prepended time offset.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.15"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-12867
  cwe:
  - CWE-284
  disclosed_date: 2017-06-28
  created_date: 2017-06-28
  last_modified_date: 2017-06-28
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201708-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70163
- id: snykio:packagist:simplesamlphp/simplesamlphp:70164
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.16"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2017-08-25
  created_date: 2017-08-25
  last_modified_date: 2017-08-25
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201709-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70164
- id: snykio:packagist:simplesamlphp/simplesamlphp:70165
  title: Information Exposure
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Information Exposure.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.1"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2016-3124
  cwe:
  - CWE-200
  disclosed_date: 2016-03-07
  created_date: 2016-03-07
  last_modified_date: 2016-03-07
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201603-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70165
- id: snykio:packagist:simplesamlphp/simplesamlphp:70166
  title: Incorrect Signature Verification
  description: |
    Affected versions of [`simplesamlphp/simplesamlphp`][1] are vulnerable
    to Incorrect signature verification.

    > The SimpleSAML\_XML\_Validator class allows the verification of the
    > XML digital signature of a SAML 1 message with a given key. In
    > particular, the constructor of the class receives an XML node and a
    > key to verify it, and throws an exception in case there is any error,
    > either caused by incorrect input or an invalid signature. This method
    > uses the verify() method from the RobRichards\\XMLSecDSig class to
    > verify the signature with the given key, which in turn will end up
    > calling openssl\_verify() depending on the signature algorithm used.

    > The openssl\_verify() function returns 1 when the signature was
    > successfully verified, 0 if it failed to verify with the given key,
    > and -1 in case an error occurs. PHP allows translating numerical
    > values to boolean implicitly, with the following correspondences:

    * 0 equals false.
    * Non-zero equals true. This means that an implicit conversion to
      boolean of the values returned by openssl\_verify() will convert an
      error state, signaled by the value -1, to a successful verification of
      the signature (represented by the boolean true). The aforementioned
      constructor was performing an implicit conversion to boolean of the
      values returned by the verify() method, which subsequently will return
      the same output as openssl\_verify() under most circumstances. This
      means an error during signature verification is treated as a
      successful verification by the method.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.11"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2016-9955
  cwe:
  - CWE-345
  disclosed_date: 2016-12-03
  created_date: 2016-12-03
  last_modified_date: 2016-12-03
  credit:
  - Thijs Kinkhorst
  references:
  - https://simplesamlphp.org/security/201612-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-70166
- id: snykio:packagist:simplesamlphp/simplesamlphp:72006
  title: Information Exposure
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication.

    Affected version of this package are vulnerable to Information Exposure.
    Man-in-the-middle attackers may obtain sensitive information by
    leveraging use of the aesEncrypt and aesDecrypt methods in the
    SimpleSAML/Utils/Crypto class to protect session identifiers in replies
    to non-HTTPS service providers.



    [1]: https://simplesamlphp.org/security/201704-01
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.13"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-12870
  cwe:
  - CWE-200
  disclosed_date: 2017-04-26
  created_date: 2018-02-06
  last_modified_date: 2018-02-06
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-12870
  - https://simplesamlphp.org/security/201704-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72006
- id: snykio:packagist:simplesamlphp/simplesamlphp:72007
  title: Open Redirect
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication.

    Affected version of this package are vulnerable to Open Redirect. An
    attacker may bypass an open redirect protection mechanism via crafted
    authority data in a URL.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "< 1.15.2"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-6520
  cwe:
  - CWE-601
  disclosed_date: 2018-01-29
  created_date: 2018-02-06
  last_modified_date: 2018-02-06
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2018-6520
  - https://simplesamlphp.org/security/201801-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72007
- id: snykio:packagist:simplesamlphp/simplesamlphp:72018
  title: Authentication Bypass
  description: |
    [simplesamlphp][1] is an application written in native PHP that deals
    with authentication.

    Affected versions of this package are vulnerable to Authentication
    Bypass, A remote attacker may bypass intended access restrictions.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.15.2"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-6521
  cwe:
  - CWE-592
  disclosed_date: 2017-12-18
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Cure53
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2018-6521
  - https://simplesamlphp.org/security/201801-03
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72018
- id: snykio:packagist:simplesamlphp/simplesamlphp:72019
  title: Authentication Bypass
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication.

    Affected versions of this package are vulnerable to Authentication
    Bypass due due to missing proper validation of user input, resulting in
    the execution of arbitrary authentication sources.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.14"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-12869
  cwe:
  - CWE-287
  disclosed_date: 2017-05-05
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Michel Minsoul
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-12869
  - https://simplesamlphp.org/security/201704-02
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72019
- id: snykio:packagist:simplesamlphp/simplesamlphp:72020
  title: Authentication Bypass
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication.

    Affected version of this package are vulnerable to Authentication
    Bypass. An attacker may authenticate with any account and a random
    password, provided that the original password is stored in an `htpasswd`
    file and hashed using the crypt() algorithm.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.14"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-12868
  cwe:
  - CWE-287
  disclosed_date: 2017-05-05
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Jaime Perez Crespo
  references:
  - https://github.com/simplesamlphp/simplesamlphp/commit/4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e
  - https://nvd.nist.gov/vuln/detail/CVE-2017-12868
  - https://simplesamlphp.org/security/201705-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72020
- id: snykio:packagist:simplesamlphp/simplesamlphp:72021
  title: Information Exposure
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication

    Affected versions of this package are vulnerable to Information
    Exposure. An attacker may obtain sensitive information, gain
    unauthorized access, or have unspecified other impacts by leveraging
    incorrect persistent NameID generation when an Identity Provider (IdP)
    is misconfigured.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.7.0  <1.14.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-12873
  cwe:
  - CWE-200
  disclosed_date: 2016-12-13
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Unknown
  references:
  - https://github.com/simplesamlphp/simplesamlphp/commit/90dca835158495b173808273e7df127303b8b953
  - https://nvd.nist.gov/vuln/detail/CVE-2017-12873
  - https://simplesamlphp.org/security/201612-04
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72021
- id: snykio:packagist:simplesamlphp/simplesamlphp:72023
  title: Security Bypass
  description: |
    [simplesamlphp][1] is an application written in native PHP that deals
    with authentication.

    Affected versions of this package are vulnerable to Security Bypass. An
    attacker can leverage this vulnerability to impersonate any user from
    any SAML 1 Identity Provider trusted by a SimpleSAMLphp Service
    Provider, with the only pre-requisite of a valid assertion previously
    sent to the affected Service Provider.



    [1]: https://simplesamlphp.org/
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.17"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-18122
  cwe:
  - CWE-289
  disclosed_date: 2018-02-02
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Matt Schwager
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-18122
  - https://simplesamlphp.org/security/201710-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72023
- id: snykio:packagist:simplesamlphp/simplesamlphp:72043
  title: Signature Validation Bypass
  description: |
    [simplesamlphp/simplesamlphp][1] is an application written in native PHP
    that deals with authentication.

    Affected versions of this package are vulnerable to Signature Validation
    Bypass due to lax comparison of the node being checked and the nodes in
    the verified list.



    [1]: https://github.com/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - "<1.14.17"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-347
  disclosed_date: 2017-10-24
  created_date: 2018-02-22
  last_modified_date: 2018-02-22
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201710-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72043
- id: snykio:packagist:simplesamlphp/simplesamlphp:72722
  title: Information Exposure
  description: |
    [simplesamlphp/simplesamlphp][1] is a PHP implementation of a SAML 2.0
    service provider and identity provider, also compatible with Shibboleth
    1.3 and 2.0.

    Affected versions of this package are vulnerable to Information
    Exposure. In order to implement support for the SAML Enhanced Client or
    Proxy profile, the credentials obtained for authentication were stored
    in the state in order to pass them to the relevant routines. This, led
    to the credentials being recorded in the user\'s session, which can be
    stored in permanent storage such as the local file system or a remote
    memcache or database server.



    [1]: https://packagist.org/packages/simplesamlphp/simplesamlphp
  affected_package: simplesamlphp/simplesamlphp
  vulnerable_versions:
  - ">=1.16.0  <1.16.3"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-12-23
  created_date: 2018-12-24
  last_modified_date: 2018-12-24
  credit:
  - Brad Higgins
  - Jason Baker
  references:
  - https://simplesamlphp.org/security/201812-01
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHP-72722
