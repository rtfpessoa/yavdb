---
- id: friendsofphp:packagist:symfony/symfony:2011-11-16
  title: Vulnerability in the EntityUserProvider as provided in the Doctrine bridge
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.6"
  package_manager: packagist
  disclosed_date: 2012-11-08
  created_date: 2012-11-08
  last_modified_date: 2012-11-08
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-6
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2011-11-16.yaml
- id: friendsofphp:packagist:symfony/symfony:2012-02-24
  title: XML decoding attack vector through external entities
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.11"
  package_manager: packagist
  disclosed_date: 2012-02-24
  created_date: 2012-02-24
  last_modified_date: 2012-02-24
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-11-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-02-24.yaml
- id: friendsofphp:packagist:symfony/symfony:2012-08-28
  title: Security fixes related to the way XML is handled
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.17"
  package_manager: packagist
  disclosed_date: 2012-08-27
  created_date: 2012-08-27
  last_modified_date: 2012-08-27
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-17-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-08-28.yaml
- id: friendsofphp:packagist:symfony/symfony:2012-11-29
  title: Request::getClientIp() when the trust proxy mode is enabled
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.19"
  - ">=2.1.0 <2.1.4"
  package_manager: packagist
  disclosed_date: 2012-11-27
  created_date: 2012-11-27
  last_modified_date: 2012-11-27
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-19-and-2-1-4
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-11-29.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2012-6431
  title: Routes behind a firewall are accessible even when not logged in
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.19"
  package_manager: packagist
  cve:
  - CVE-2012-6431
  disclosed_date: 2012-03-19
  created_date: 2012-03-19
  last_modified_date: 2012-03-19
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2012-6432
  title: Code execution vulnerability via the "internal" routes
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.20"
  - ">=2.1.0 <2.1.5"
  package_manager: packagist
  cve:
  - CVE-2012-6432
  disclosed_date: 2012-12-19
  created_date: 2012-12-19
  last_modified_date: 2012-12-19
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2013-1348
  title: Ability to enable/disable PHP parsing in Yaml::parse()
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.22"
  package_manager: packagist
  cve:
  - CVE-2013-1348
  disclosed_date: 2013-01-15
  created_date: 2013-01-15
  last_modified_date: 2013-01-15
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-1348.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2013-1397
  title: Ability to enable/disable object support in YAML parsing and dumping
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.22"
  - ">=2.1.0 <2.1.7"
  package_manager: packagist
  cve:
  - CVE-2013-1397
  disclosed_date: 2013-01-15
  created_date: 2013-01-15
  last_modified_date: 2013-01-15
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-1397.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2013-4751
  title: Validation metadata serialization and loss of information
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.24"
  - ">=2.1.0 <2.1.12"
  - ">=2.2.0 <2.2.5"
  - ">=2.3.0 <2.3.3"
  package_manager: packagist
  cve:
  - CVE-2013-4751
  disclosed_date: 2013-08-17
  created_date: 2013-08-17
  last_modified_date: 2013-08-17
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-4751.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2013-4752
  title: Request::getHost() poisoning
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.24"
  - ">=2.1.0 <2.1.12"
  - ">=2.2.0 <2.2.5"
  - ">=2.3.0 <2.3.3"
  package_manager: packagist
  cve:
  - CVE-2013-4752
  disclosed_date: 2013-08-17
  created_date: 2013-08-17
  last_modified_date: 2013-08-17
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-4752.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2013-5958
  title: Possible DOS attack with long user-submitted passwords
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.25"
  - ">=2.1.0 <2.1.13"
  - ">=2.2.0 <2.2.9"
  - ">=2.3.0 <2.3.6"
  package_manager: packagist
  cve:
  - CVE-2013-5958
  disclosed_date: 2013-10-10
  created_date: 2013-10-10
  last_modified_date: 2013-10-10
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-releases-cve-2013-5958-symfony-2-0-25-2-1-13-2-2-9-and-2-3-6-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-5958.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2014-4931
  title: Code injection in the way Symfony implements translation caching in FrameworkBundle
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  cve:
  - CVE-2014-4931
  disclosed_date: 2014-07-25
  created_date: 2014-07-25
  last_modified_date: 2014-07-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/security-releases-cve-2014-4931-symfony-2-3-18-2-4-8-and-2-5-2-released
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-4931.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2014-5244
  title: Denial of service with a malicious HTTP Host header
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  cve:
  - CVE-2014-5244
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2014-5244
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-5244.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2014-5245
  title: Direct access of ESI URLs behind a trusted proxy
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  cve:
  - CVE-2014-5245
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2014-5245
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-5245.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2014-6061
  title: Security issue when parsing the Authorization header
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  cve:
  - CVE-2014-6061
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2014-6061
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-6061.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2014-6072
  title: CSRF vulnerability in the Web Profiler
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  cve:
  - CVE-2014-6072
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2014-6072
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-6072.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2015-2308
  title: Esi Code Injection
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.27"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.5.11"
  - ">=2.6.0 <2.6.6"
  package_manager: packagist
  cve:
  - CVE-2015-2308
  disclosed_date: 2015-04-01
  created_date: 2015-04-01
  last_modified_date: 2015-04-01
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2015-2308
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-2308.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2015-2309
  title: Unsafe methods in the Request class
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.27"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.5.11"
  - ">=2.6.0 <2.6.6"
  package_manager: packagist
  cve:
  - CVE-2015-2309
  disclosed_date: 2015-04-01
  created_date: 2015-04-01
  last_modified_date: 2015-04-01
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2015-2309
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-2309.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2015-4050
  title: 'CVE-2015-4050: ESI unauthorized access'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.19 <2.3.29"
  - ">=2.4.9 <2.5.0"
  - ">=2.5.4 <2.5.12"
  - ">=2.6.0 <2.6.8"
  package_manager: packagist
  cve:
  - CVE-2015-4050
  disclosed_date: 2015-05-26
  created_date: 2015-05-26
  last_modified_date: 2015-05-26
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2015-4050
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-4050.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2015-8124
  title: 'CVE-2015-8124: Session Fixation in the "Remember Me" Login Feature'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.35"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.12"
  - ">=2.7.0 <2.7.7"
  package_manager: packagist
  cve:
  - CVE-2015-8124
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2015-8124
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-8124.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2015-8125
  title: 'CVE-2015-8125: Potential Remote Timing Attack Vulnerability in Security
    Remember-Me Service'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.35"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.12"
  - ">=2.7.0 <2.7.7"
  package_manager: packagist
  cve:
  - CVE-2015-8125
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2015-8125
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-8125.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2016-1902
  title: 'CVE-2016-1902: SecureRandom''s fallback not secure when OpenSSL fails '
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.37"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.13"
  - ">=2.7.0 <2.7.9"
  package_manager: packagist
  cve:
  - CVE-2016-1902
  disclosed_date: 2016-01-14
  created_date: 2016-01-14
  last_modified_date: 2016-01-14
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2016-1902
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-1902.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2016-2403
  title: 'CVE-2016-2403: Unauthorized access on a misconfigured Ldap server when using
    an empty password'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0 <2.8.6"
  - ">=3.0.0 <3.0.6"
  package_manager: packagist
  cve:
  - CVE-2016-2403
  disclosed_date: 2016-05-09
  created_date: 2016-05-09
  last_modified_date: 2016-05-09
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2016-2403
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-2403.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2016-4423
  title: 'CVE-2016-4423: Large username storage in session'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.41"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.13"
  - ">=2.8.0 <2.8.6"
  - ">=3.0.0 <3.0.6"
  package_manager: packagist
  cve:
  - CVE-2016-4423
  disclosed_date: 2016-05-09
  created_date: 2016-05-09
  last_modified_date: 2016-05-09
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2016-4423
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-4423.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2017-11365
  title: 'CVE-2017-11365: Empty passwords validation issue'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.30 <2.7.32"
  - ">=2.8.23 <2.8.25"
  - ">=3.2.10 <3.2.12"
  - ">=3.3.3 <3.3.5"
  package_manager: packagist
  cve:
  - CVE-2017-11365
  disclosed_date: 2017-07-17
  created_date: 2017-07-17
  last_modified_date: 2017-07-17
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2017-11365
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2017-11365.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2017-16652
  title: 'CVE-2017-16652: Open redirect vulnerability on security handlers'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.38"
  - ">=2.8.0 <2.8.31"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.2.14"
  - ">=3.3.0 <3.3.13"
  package_manager: packagist
  cve:
  - CVE-2017-16652
  disclosed_date: 2017-11-16
  created_date: 2017-11-16
  last_modified_date: 2017-11-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2017-16652
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2017-16652.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2017-16653
  title: 'CVE-2017-16653: CSRF protection does not use different tokens for HTTP and
    HTTPS'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.38"
  - ">=2.8.0 <2.8.31"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.2.14"
  - ">=3.3.0 <3.3.13"
  package_manager: packagist
  cve:
  - CVE-2017-16653
  disclosed_date: 2017-11-16
  created_date: 2017-11-16
  last_modified_date: 2017-11-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2017-16653
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2017-16653.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2017-16654
  title: 'CVE-2017-16654: Intl bundle readers breaking out of paths'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.38"
  - ">=2.8.0 <2.8.31"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.2.14"
  - ">=3.3.0 <3.3.13"
  package_manager: packagist
  cve:
  - CVE-2017-16654
  disclosed_date: 2017-11-16
  created_date: 2017-11-16
  last_modified_date: 2017-11-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2017-16654
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2017-16654.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2017-16790
  title: 'CVE-2017-16790: Ensure that submitted data are uploaded files'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.38"
  - ">=2.8.0 <2.8.31"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.2.14"
  - ">=3.3.0 <3.3.13"
  package_manager: packagist
  cve:
  - CVE-2017-16790
  disclosed_date: 2017-11-16
  created_date: 2017-11-16
  last_modified_date: 2017-11-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2017-16790
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2017-16790.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-11385
  title: 'CVE-2018-11385: Session Fixation Issue for Guard Authentication'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.48"
  - ">=2.8.0 <2.8.41"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.17"
  - ">=3.4.0 <3.4.11"
  - ">=4.0.0 <4.0.11"
  package_manager: packagist
  cve:
  - CVE-2018-11385
  disclosed_date: 2018-05-25
  created_date: 2018-05-25
  last_modified_date: 2018-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-11385
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-11385.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-11386
  title: 'CVE-2018-11386: Denial of service when using PDOSessionHandler'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.48"
  - ">=2.8.0 <2.8.41"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.17"
  - ">=3.4.0 <3.4.11"
  - ">=4.0.0 <4.0.11"
  package_manager: packagist
  cve:
  - CVE-2018-11386
  disclosed_date: 2018-05-25
  created_date: 2018-05-25
  last_modified_date: 2018-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-11386
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-11386.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-11406
  title: 'CVE-2018-11406: CSRF Token Fixation'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.48"
  - ">=2.8.0 <2.8.41"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.17"
  - ">=3.4.0 <3.4.11"
  - ">=4.0.0 <4.0.11"
  package_manager: packagist
  cve:
  - CVE-2018-11406
  disclosed_date: 2018-05-25
  created_date: 2018-05-25
  last_modified_date: 2018-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-11406
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-11406.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-11407
  title: 'CVE-2018-11407: Unauthorized access on a misconfigured LDAP server when
    using an empty password'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0 <2.8.37"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.17"
  - ">=3.4.0 <3.4.7"
  - ">=4.0.0 <4.0.7"
  package_manager: packagist
  cve:
  - CVE-2018-11407
  disclosed_date: 2018-05-25
  created_date: 2018-05-25
  last_modified_date: 2018-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-11407
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-11407.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-11408
  title: 'CVE-2018-11408: Open redirect vulnerability on security handlers'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.38 <2.7.48"
  - ">=2.8.0 <2.8.41"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.17"
  - ">=3.4.0 <3.4.11"
  - ">=4.0.0 <4.0.11"
  package_manager: packagist
  cve:
  - CVE-2018-11408
  disclosed_date: 2018-05-25
  created_date: 2018-05-25
  last_modified_date: 2018-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-11408
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-11408.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-14773
  title: 'CVE-2018-14773: Remove support for legacy and risky HTTP headers'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.49"
  - ">=2.8.0 <2.8.44"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.3.18"
  - ">=3.4.0 <3.4.14"
  - ">=4.0.0 <4.0.14"
  - ">=4.1.0 <4.1.3"
  package_manager: packagist
  cve:
  - CVE-2018-14773
  disclosed_date: 2018-08-01
  created_date: 2018-08-01
  last_modified_date: 2018-08-01
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/blog/cve-2018-14773-remove-support-for-legacy-and-risky-http-headers
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-14773.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-19789
  title: 'CVE-2018-19789: Temporary uploaded file path disclosure'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.38 <2.7.50"
  - ">=2.8.0 <2.8.49"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.20"
  - ">=4.0.0 <4.0.15"
  - ">=4.1.0 <4.1.9"
  - ">=4.2.0 <4.2.1"
  package_manager: packagist
  cve:
  - CVE-2018-19789
  disclosed_date: 2018-11-06
  created_date: 2018-11-06
  last_modified_date: 2018-11-06
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-19789
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2018-19790
  title: 'CVE-2018-19790: Open Redirect Vulnerability on login'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.38 <2.7.50"
  - ">=2.8.0 <2.8.49"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.20"
  - ">=4.0.0 <4.0.15"
  - ">=4.1.0 <4.1.9"
  - ">=4.2.0 <4.2.1"
  package_manager: packagist
  cve:
  - CVE-2018-19790
  disclosed_date: 2018-11-06
  created_date: 2018-11-06
  last_modified_date: 2018-11-06
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2018-19790
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19790.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-10909
  title: 'CVE-2019-10909: Escape validation messages in the PHP templating engine'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.51"
  - ">=2.8.0 <2.8.50"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.26"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.1.12"
  - ">=4.2.0 <4.2.7"
  package_manager: packagist
  cve:
  - CVE-2019-10909
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-10909
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10909.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-10910
  title: 'CVE-2019-10910: Check service IDs are valid'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.51"
  - ">=2.8.0 <2.8.50"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.26"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.1.12"
  - ">=4.2.0 <4.2.7"
  package_manager: packagist
  cve:
  - CVE-2019-10910
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-10910
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10910.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-10911
  title: 'CVE-2019-10911: Add a separator in the remember me cookie hash'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.51"
  - ">=2.8.0 <2.8.50"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.26"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.1.12"
  - ">=4.2.0 <4.2.7"
  package_manager: packagist
  cve:
  - CVE-2019-10911
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-10911
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10911.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-10912
  title: 'CVE-2019-10912: Prevent destructors with side-effects from being unserialized'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0 <2.8.50"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.26"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.1.12"
  - ">=4.2.0 <4.2.7"
  package_manager: packagist
  cve:
  - CVE-2019-10912
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-10912
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10912.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-10913
  title: 'CVE-2019-10913: Reject invalid HTTP method overrides'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0 <2.7.51"
  - ">=2.8.0 <2.8.50"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.26"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.1.12"
  - ">=4.2.0 <4.2.7"
  package_manager: packagist
  cve:
  - CVE-2019-10913
  disclosed_date: 2019-04-16
  created_date: 2019-04-16
  last_modified_date: 2019-04-16
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-10913
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10913.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-11325
  title: 'CVE-2019-11325: Fix escaping of strings in VarExporter'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.2.0 <4.2.12"
  - ">=4.3.0 <4.3.8"
  package_manager: packagist
  cve:
  - CVE-2019-11325
  disclosed_date: 2019-11-13
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-11325
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-11325.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-18886
  title: 'CVE-2019-18886: Prevent user enumeration using switch user functionality'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.1.0 <4.2.0"
  - ">=4.2.0 <4.2.12"
  - ">=4.3.0 <4.3.8"
  package_manager: packagist
  cve:
  - CVE-2019-18886
  disclosed_date: 2019-11-13
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-18886
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-18886.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-18887
  title: 'CVE-2019-18887: Use constant time comparison in UriSigner'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.8.0"
  - ">=2.8.0 <2.8.52"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.35"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.2.0"
  - ">=4.2.0 <4.2.12"
  - ">=4.3.0 <4.3.8"
  package_manager: packagist
  cve:
  - CVE-2019-18887
  disclosed_date: 2019-11-13
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-18887
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-18887.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-18888
  title: 'CVE-2019-18888: Prevent argument injection in a MimeTypeGuesser'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.4.0"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.8.0"
  - ">=2.8.0 <2.8.52"
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.35"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.2.0"
  - ">=4.2.0 <4.2.12"
  - ">=4.3.0 <4.3.8"
  package_manager: packagist
  cve:
  - CVE-2019-18888
  disclosed_date: 2019-11-13
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-18888
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-18888.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2019-18889
  title: 'CVE-2019-18889: Forbid serializing AbstractAdapter and TagAwareAdapter instances'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.3.0"
  - ">=3.3.0 <3.4.0"
  - ">=3.4.0 <3.4.35"
  - ">=4.0.0 <4.1.0"
  - ">=4.1.0 <4.2.0"
  - ">=4.2.0 <4.2.12"
  - ">=4.3.0 <4.3.8"
  package_manager: packagist
  cve:
  - CVE-2019-18889
  disclosed_date: 2019-11-13
  created_date: 2019-11-13
  last_modified_date: 2019-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2019-18889
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-18889.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2020-5255
  title: 'CVE-2020-5255: Prevent cache poisoning via a Response Content-Type header'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0 <4.4.7"
  - ">=5.0.0 <5.0.7"
  package_manager: packagist
  cve:
  - CVE-2020-5255
  disclosed_date: 2020-03-30
  created_date: 2020-03-30
  last_modified_date: 2020-03-30
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2020-5255
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2020-5255.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2020-5274
  title: 'CVE-2020-5274: Fix Exception message escaping rendered by ErrorHandler'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0 <4.4.4"
  - ">=5.0.0 <5.0.4"
  package_manager: packagist
  cve:
  - CVE-2020-5274
  disclosed_date: 2020-03-30
  created_date: 2020-03-30
  last_modified_date: 2020-03-30
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2020-5274
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2020-5274.yaml
- id: friendsofphp:packagist:symfony/symfony:CVE-2020-5275
  title: 'CVE-2020-5275: All rules set in "access_control" are required when the firewall
    is configured with the unanimous strategy'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0 <4.4.7"
  - ">=5.0.0 <5.0.7"
  package_manager: packagist
  cve:
  - CVE-2020-5275
  disclosed_date: 2020-03-30
  created_date: 2020-03-30
  last_modified_date: 2020-03-30
  credit:
  - FriendsOfPHP
  references:
  - https://symfony.com/cve-2020-5275
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2020-5275.yaml
- id: ossindex:packagist:symfony/symfony:351071
  title: "[CVE-2012-2667] Session fixation vulnerability in lib/user/sfBasicSecurityUser.class.php
    in Sens..."
  description: Session fixation vulnerability in lib/user/sfBasicSecurityUser.class.php
    in SensioLabs Symfony before 1.4.18 allows remote attackers to hijack web sessions
    via vectors related to the regenerate method and unspecified "database backed
    session classes."
  affected_package: symfony/symfony
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.2
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  package_manager: packagist
  cve:
  - CVE-2012-2667
  disclosed_date: 2012-06-07
  created_date: 2012-06-07
  last_modified_date: 2012-06-08
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/49312
  - http://symfony.com/blog/security-release-symfony-1-4-18-released
  - http://trac.symfony-project.org/browser/tags/RELEASE_1_4_18/CHANGELOG
  - http://www.openwall.com/lists/oss-security/2012/06/04/1
  - http://www.openwall.com/lists/oss-security/2012/06/05/2
  - http://www.securityfocus.com/bid/53776
  - http://xforce.iss.net/xforce/xfdb/76027
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/76027
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:353372
  title: "[CVE-2012-5574]  Permissions, Privileges, and Access Controls"
  description: lib/form/sfForm.class.php in Symfony CMS before 1.4.20 allows remote
    attackers to read arbitrary files via a crafted upload request.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 1.4.0
  - 1.4.1
  - 1.4.10
  - 1.4.11
  - 1.4.12
  - 1.4.13
  - 1.4.14
  - 1.4.15
  - 1.4.16
  - 1.4.17
  - 1.4.18
  - 1.4.19
  - 1.4.2
  - 1.4.3
  - 1.4.4
  - 1.4.5
  - 1.4.6
  - 1.4.7
  - 1.4.8
  - 1.4.9
  package_manager: packagist
  cve:
  - CVE-2012-5574
  disclosed_date: 2012-12-18
  created_date: 2012-12-18
  last_modified_date: 2012-12-28
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2012-December/093698.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2012-December/093920.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2012-December/093922.html
  - http://secunia.com/advisories/51372
  - http://symfony.com/blog/security-release-symfony-1-4-20-released
  - http://trac.symfony-project.org/changeset/33598
  - http://www.openwall.com/lists/oss-security/2012/11/26/12
  - http://www.osvdb.org/87869
  - http://www.securityfocus.com/bid/56685
  - http://xforce.iss.net/xforce/xfdb/80309
  - https://bugs.gentoo.org/show_bug.cgi?id=444696
  - https://bugzilla.redhat.com/show_bug.cgi?id=880240
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/80309
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:353823
  title: "[CVE-2012-6431]  Permissions, Privileges, and Access Controls"
  description: Symfony 2.0.x before 2.0.20 does not process URL encoded data consistently
    within the Routing and Security components, which allows remote attackers to bypass
    intended URI restrictions via a doubly encoded string.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  package_manager: packagist
  cve:
  - CVE-2012-6431
  disclosed_date: 2012-12-27
  created_date: 2012-12-27
  last_modified_date: 2013-01-07
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:353824
  title: "[CVE-2012-6432]  Permissions, Privileges, and Access Controls"
  description: Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when
    the internal routes configuration is enabled, allows remote attackers to access
    arbitrary services via vectors involving a URI beginning with a /_internal substring.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.20
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  - 2.1.0
  - 2.1.1
  - 2.1.2
  - 2.1.3
  - '2.2'
  package_manager: packagist
  cve:
  - CVE-2012-6432
  disclosed_date: 2012-12-27
  created_date: 2012-12-27
  last_modified_date: 2012-12-27
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:355162
  title: '[CVE-2013-1348]  Improper Control of Generation of Code ("Code Injection")'
  description: The Yaml::parse function in Symfony 2.0.x before 2.0.22 remote attackers
    to execute arbitrary PHP code via a PHP file, a different vulnerability than CVE-2013-1397.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.20
  - 2.0.21
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  package_manager: packagist
  cve:
  - CVE-2013-1348
  disclosed_date: 2014-06-02
  created_date: 2014-06-02
  last_modified_date: 2014-06-03
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/51980
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  - http://www.securityfocus.com/bid/57574
  - http://xforce.iss.net/xforce/xfdb/81550
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/81550
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:355192
  title: '[CVE-2013-1397]  Improper Control of Generation of Code ("Code Injection")'
  description: Symfony 2.0.x before 2.0.22, 2.1.x before 2.1.7, and 2.2.x remote attackers
    to execute arbitrary PHP code via a serialized PHP object to the (1) Yaml::parse
    or (2) Yaml\Parser::parse function, a different vulnerability than CVE-2013-1348.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.20
  - 2.0.21
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  - 2.1.0
  - 2.1.1
  - 2.1.2
  - 2.1.3
  - 2.1.4
  - 2.1.5
  - 2.1.6
  - 2.2.0
  - 2.2.1
  - 2.2.10
  - 2.2.11
  - 2.2.2
  - 2.2.3
  - 2.2.4
  - 2.2.5
  - 2.2.6
  - 2.2.8
  - 2.2.9
  package_manager: packagist
  cve:
  - CVE-2013-1397
  disclosed_date: 2014-06-02
  created_date: 2014-06-02
  last_modified_date: 2014-06-03
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/51980
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  - http://www.securityfocus.com/bid/57574
  - http://xforce.iss.net/xforce/xfdb/81551
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/81551
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:358743
  title: "[CVE-2013-5958]  Resource Management Errors"
  description: The Security component in Symfony 2.0.x before 2.0.25, 2.1.x before
    2.1.13, 2.2.x before 2.2.9, and 2.3.x before 2.3.6 allows remote attackers to
    cause a denial of service (CPU consumption) via a long password that triggers
    an expensive hash computation, as demonstrated by a PBKDF2 computation, a similar
    issue to CVE-2013-5750.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.20
  - 2.0.21
  - 2.0.22
  - 2.0.23
  - 2.0.24
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  - 2.1.0
  - 2.1.1
  - 2.1.10
  - 2.1.11
  - 2.1.12
  - 2.1.2
  - 2.1.3
  - 2.1.4
  - 2.1.5
  - 2.1.6
  - 2.1.7
  - 2.1.8
  - 2.1.9
  - '2.2'
  - 2.2.0
  - 2.2.1
  - 2.2.2
  - 2.2.3
  - 2.2.4
  - 2.2.5
  - 2.2.6
  - 2.2.8
  - 2.3.0
  - 2.3.1
  - 2.3.2
  - 2.3.3
  - 2.3.4
  - 2.3.5
  package_manager: packagist
  cve:
  - CVE-2013-5958
  disclosed_date: 2014-12-27
  created_date: 2014-12-27
  last_modified_date: 2014-12-29
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-releases-cve-2013-5958-symfony-2-0-25-2-1-13-2-2-9-and-2-3-6-released
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:7005954146
  title: "[CVE-2015-4050]  Improper Access Control"
  description: FragmentListener in the HttpKernel component in Symfony 2.3.19 through
    2.3.28, 2.4.9 through 2.4.10, 2.5.4 through 2.5.11, and 2.6.0 through 2.6.7, when
    ESI or SSI support enabled, does not check if the _controller attribute is set,
    which allows remote attackers to bypass URL signing and security rules by including
    (1) no hash or (2) an invalid hash in a request to /_fragment.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.3.19
  - 2.3.20
  - 2.3.21
  - 2.3.22
  - 2.3.23
  - 2.3.24
  - 2.3.25
  - 2.3.26
  - 2.3.27
  - 2.3.28
  - 2.4.10
  - 2.4.9
  - 2.5.10
  - 2.5.11
  - 2.5.4
  - 2.5.5
  - 2.5.6
  - 2.5.7
  - 2.5.8
  - 2.5.9
  - 2.6.0
  - 2.6.1
  - 2.6.3
  - 2.6.4
  - 2.6.5
  - 2.6.6
  - 2.6.7
  package_manager: packagist
  cve:
  - CVE-2015-4050
  disclosed_date: 2015-06-02
  created_date: 2015-06-02
  last_modified_date: 2016-12-31
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-June/159513.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-June/159603.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-June/159610.html
  - http://symfony.com/blog/cve-2015-4050-esi-unauthorized-access
  - http://www.debian.org/security/2015/dsa-3276
  - http://www.securityfocus.com/bid/74928
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:7021694948
  title: '[CVE-2015-2308]  Improper Control of Generation of Code ("Code Injection")'
  description: Eval injection vulnerability in the HttpCache class in HttpKernel in
    Symfony 2.x before 2.3.27, 2.4.x and 2.5.x before 2.5.11, and 2.6.x before 2.6.6
    allows remote attackers to execute arbitrary PHP code via a language="php" attribute
    of a SCRIPT element.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.0.0
  - 2.0.1
  - 2.0.10
  - 2.0.11
  - 2.0.12
  - 2.0.13
  - 2.0.14
  - 2.0.15
  - 2.0.16
  - 2.0.17
  - 2.0.18
  - 2.0.19
  - 2.0.2
  - 2.0.20
  - 2.0.21
  - 2.0.22
  - 2.0.3
  - 2.0.4
  - 2.0.5
  - 2.0.6
  - 2.0.7
  - 2.0.8
  - 2.0.9
  - 2.1.0
  - 2.1.1
  - 2.1.2
  - 2.1.3
  - 2.1.4
  - 2.1.5
  - 2.1.6
  - 2.1.7
  - 2.2.0
  - 2.2.1
  - 2.2.10
  - 2.2.11
  - 2.2.2
  - 2.2.3
  - 2.2.4
  - 2.2.5
  - 2.2.6
  - 2.2.8
  - 2.2.9
  - 2.3.19
  - 2.3.20
  - 2.3.21
  - 2.3.22
  - 2.3.23
  - 2.3.24
  - 2.3.25
  - 2.3.26
  - 2.4.1
  - 2.4.10
  - 2.4.2
  - 2.4.3
  - 2.4.4
  - 2.4.5
  - 2.4.6
  - 2.4.7
  - 2.4.8
  - 2.4.9
  - 2.5.1
  - 2.5.10
  - 2.5.2
  - 2.5.3
  - 2.5.4
  - 2.5.5
  - 2.5.6
  - 2.5.7
  - 2.5.8
  - 2.5.9
  - 2.6.0
  - 2.6.1
  - 2.6.3
  - 2.6.4
  - 2.6.5
  package_manager: packagist
  cve:
  - CVE-2015-2308
  disclosed_date: 2015-06-24
  created_date: 2015-06-24
  last_modified_date: 2016-12-03
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN19578958/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2015-000089
  - http://www.securityfocus.com/bid/75357
  - https://symfony.com/blog/cve-2015-2308-esi-code-injection
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8396656606
  title: '[CVE-2015-8124] Session fixation vulnerability in the "Remember Me" login
    feature in Symfony 2.3...'
  description: Session fixation vulnerability in the "Remember Me" login feature in
    Symfony 2.3.x before 2.3.35, 2.6.x before 2.6.12, and 2.7.x before 2.7.7 allows
    remote attackers to hijack web sessions via a session id.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.3.0
  - 2.3.1
  - 2.3.10
  - 2.3.11
  - 2.3.12
  - 2.3.13
  - 2.3.14
  - 2.3.15
  - 2.3.16
  - 2.3.17
  - 2.3.18
  - 2.3.19
  - 2.3.2
  - 2.3.20
  - 2.3.21
  - 2.3.22
  - 2.3.23
  - 2.3.24
  - 2.3.25
  - 2.3.26
  - 2.3.27
  - 2.3.28
  - 2.3.29
  - 2.3.3
  - 2.3.30
  - 2.3.31
  - 2.3.32
  - 2.3.33
  - 2.3.34
  - 2.3.4
  - 2.3.5
  - 2.3.6
  - 2.3.7
  - 2.3.8
  - 2.3.9
  - 2.6.0
  - 2.6.1
  - 2.6.10
  - 2.6.11
  - 2.6.2
  - 2.6.3
  - 2.6.4
  - 2.6.5
  - 2.6.6
  - 2.6.7
  - 2.6.8
  - 2.6.9
  - 2.7.0
  - 2.7.1
  - 2.7.2
  - 2.7.3
  - 2.7.4
  - 2.7.5
  - 2.7.6
  package_manager: packagist
  cve:
  - CVE-2015-8124
  disclosed_date: 2015-12-07
  created_date: 2015-12-07
  last_modified_date: 2016-12-07
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173271.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173300.html
  - http://seclists.org/fulldisclosure/2015/Dec/89
  - http://www.debian.org/security/2015/dsa-3402
  - http://www.securityfocus.com/archive/1/archive/1/537183/100/0/threaded
  - http://www.securityfocus.com/bid/77694
  - https://symfony.com/blog/cve-2015-8124-session-fixation-in-the-remember-me-login-feature
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8396656607
  title: "[CVE-2015-8125] Symfony 2.3.x before 2.3.35, 2.6.x before 2.6.12, and 2.7.x
    before 2.7.7 might a..."
  description: Symfony 2.3.x before 2.3.35, 2.6.x before 2.6.12, and 2.7.x before
    2.7.7 might allow remote attackers to have unspecified impact via a timing attack
    involving the (1) Symfony/Component/Security/Http/RememberMe/PersistentTokenBasedRememberMeServices
    or (2) Symfony/Component/Security/Http/Firewall/DigestAuthenticationListener class
    in the Symfony Security Component, or (3) legacy CSRF implementation from the
    Symfony/Component/Form/Extension/Csrf/CsrfProvider/DefaultCsrfProvider class in
    the Symfony Form component.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.3.0
  - 2.3.1
  - 2.3.10
  - 2.3.11
  - 2.3.12
  - 2.3.13
  - 2.3.14
  - 2.3.15
  - 2.3.16
  - 2.3.17
  - 2.3.18
  - 2.3.19
  - 2.3.2
  - 2.3.20
  - 2.3.21
  - 2.3.22
  - 2.3.23
  - 2.3.24
  - 2.3.25
  - 2.3.26
  - 2.3.27
  - 2.3.28
  - 2.3.29
  - 2.3.3
  - 2.3.30
  - 2.3.31
  - 2.3.32
  - 2.3.33
  - 2.3.34
  - 2.3.4
  - 2.3.5
  - 2.3.6
  - 2.3.7
  - 2.3.8
  - 2.3.9
  - 2.6.0
  - 2.6.1
  - 2.6.10
  - 2.6.11
  - 2.6.2
  - 2.6.3
  - 2.6.4
  - 2.6.5
  - 2.6.6
  - 2.6.7
  - 2.6.8
  - 2.6.9
  - 2.7.0
  - 2.7.1
  - 2.7.2
  - 2.7.3
  - 2.7.4
  - 2.7.5
  - 2.7.6
  package_manager: packagist
  cve:
  - CVE-2015-8125
  disclosed_date: 2015-12-07
  created_date: 2015-12-07
  last_modified_date: 2016-12-07
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173271.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173300.html
  - http://www.debian.org/security/2015/dsa-3402
  - http://www.securityfocus.com/bid/77692
  - https://symfony.com/blog/cve-2015-8125-potential-remote-timing-attack-vulnerability-in-security-remember-me-service
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183327
  title: Vulnerability in the EntityUserProvider as provided in the Doctrine bridge
  description: Vulnerability in the EntityUserProvider as provided in the Doctrine
    bridge
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-6
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2011-11-16.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183328
  title: XML decoding attack vector through external entities
  description: XML decoding attack vector through external entities
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.11"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-11-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-02-24.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183329
  title: Security fixes related to the way XML is handled
  description: Security fixes related to the way XML is handled
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.17"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-17-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-08-28.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183330
  title: Request::getClientIp() when the trust proxy mode is enabled
  description: Request::getClientIp() when the trust proxy mode is enabled
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.19"
  - ">=2.1.0 <2.1.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-19-and-2-1-4
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/2012-11-29.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183331
  title: Routes behind a firewall are accessible even when not logged in
  description: Routes behind a firewall are accessible even when not logged in
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.19"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183332
  title: Code execution vulnerability via the "internal" routes
  description: Code execution vulnerability via the "internal" routes
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.20"
  - ">=2.1.0 <2.1.5"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183333
  title: Ability to enable/disable PHP parsing in Yaml::parse()
  description: Ability to enable/disable PHP parsing in Yaml::parse()
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.22"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-1348.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183334
  title: Ability to enable/disable object support in YAML parsing and dumping
  description: Ability to enable/disable object support in YAML parsing and dumping
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.22"
  - ">=2.1.0 <2.1.7"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-1397.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183335
  title: Validation metadata serialization and loss of information
  description: Validation metadata serialization and loss of information
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.24"
  - ">=2.1.0 <2.1.12"
  - ">=2.2.0 <2.2.5"
  - ">=2.3.0 <2.3.3"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-4751.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183336
  title: Request::getHost() poisoning
  description: Request::getHost() poisoning
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.24"
  - ">=2.1.0 <2.1.12"
  - ">=2.2.0 <2.2.5"
  - ">=2.3.0 <2.3.3"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-4752.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183337
  title: Possible DOS attack with long user-submitted passwords
  description: Possible DOS attack with long user-submitted passwords
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.0.25"
  - ">=2.1.0 <2.1.13"
  - ">=2.2.0 <2.2.9"
  - ">=2.3.0 <2.3.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-releases-cve-2013-5958-symfony-2-0-25-2-1-13-2-2-9-and-2-3-6-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2013-5958.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183338
  title: Code injection in the way Symfony implements translation caching in FrameworkBundle
  description: Code injection in the way Symfony implements translation caching in
    FrameworkBundle
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/security-releases-cve-2014-4931-symfony-2-3-18-2-4-8-and-2-5-2-released
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-4931.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183339
  title: Denial of service with a malicious HTTP Host header
  description: Denial of service with a malicious HTTP Host header
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2014-5244-denial-of-service-with-a-malicious-http-host-header
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-5244.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183340
  title: Direct access of ESI URLs behind a trusted proxy
  description: Direct access of ESI URLs behind a trusted proxy
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2014-5245-direct-access-of-esi-urls-behind-a-trusted-proxy
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-5245.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183341
  title: Security issue when parsing the Authorization header
  description: Security issue when parsing the Authorization header
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2014-6061-security-issue-when-parsing-the-authorization-header
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-6061.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183342
  title: CSRF vulnerability in the Web Profiler
  description: CSRF vulnerability in the Web Profiler
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.19"
  - ">=2.4.0 <2.4.9"
  - ">=2.5.0 <2.5.4"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2014-6072-csrf-vulnerability-in-the-web-profiler
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2014-6072.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183343
  title: Esi Code Injection
  description: Esi Code Injection
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.27"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.5.11"
  - ">=2.6.0 <2.6.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2015-2308-esi-code-injection
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-2308.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183344
  title: Unsafe methods in the Request class
  description: Unsafe methods in the Request class
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.0.0 <2.1.0"
  - ">=2.1.0 <2.2.0"
  - ">=2.2.0 <2.3.0"
  - ">=2.3.0 <2.3.27"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.5.11"
  - ">=2.6.0 <2.6.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2015-2309-unsafe-methods-in-the-request-class
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-2309.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183345
  title: '"CVE-2015-4050: ESI unauthorized access"'
  description: '"CVE-2015-4050: ESI unauthorized access"'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.19 <2.3.29"
  - ">=2.4.9 <2.5.0"
  - ">=2.5.4 <2.5.12"
  - ">=2.6.0 <2.6.8"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2015-4050-esi-unauthorized-access
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-4050.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183346
  title: 'CVE-2015-8124: Session Fixation in the "Remember Me" Login Feature'
  description: 'CVE-2015-8124: Session Fixation in the "Remember Me" Login Feature'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.35"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.12"
  - ">=2.7.0 <2.7.7"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2015-8124-session-fixation-in-the-remember-me-login-feature
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-8124.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183347
  title: '"CVE-2015-8125: Potential Remote Timing Attack Vulnerability in Security
    Remember-Me Service"'
  description: '"CVE-2015-8125: Potential Remote Timing Attack Vulnerability in Security
    Remember-Me Service"'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.35"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.12"
  - ">=2.7.0 <2.7.7"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2015-8125-potential-remote-timing-attack-vulnerability-in-security-remember-me-service
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2015-8125.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183348
  title: '"CVE-2016-1902: SecureRandom''s fallback not secure when OpenSSL fails "'
  description: '"CVE-2016-1902: SecureRandom''s fallback not secure when OpenSSL fails
    "'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.37"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.6.13"
  - ">=2.7.0 <2.7.9"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2016-1902-securerandom-s-fallback-not-secure-when-openssl-fails
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-1902.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183349
  title: '"CVE-2016-2403: Unauthorized access on a misconfigured Ldap server when
    using an empty password"'
  description: '"CVE-2016-2403: Unauthorized access on a misconfigured Ldap server
    when using an empty password"'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0 <2.8.6"
  - ">=3.0.0 <3.0.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2016-2403-unauthorized-access-on-a-misconfigured-ldap-server-when-using-an-empty-password
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-2403.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399183350
  title: '"CVE-2016-4423: Large username storage in session"'
  description: '"CVE-2016-4423: Large username storage in session"'
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0 <2.3.41"
  - ">=2.4.0 <2.5.0"
  - ">=2.5.0 <2.6.0"
  - ">=2.6.0 <2.7.0"
  - ">=2.7.0 <2.7.13"
  - ">=2.8.0 <2.8.6"
  - ">=3.0.0 <3.0.6"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2016-4423-large-username-storage-in-session
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2016-4423.yaml
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399186845
  title: "[CVE-2016-1902]  Cryptographic Issues"
  description: The nextBytes function in the SecureRandom class in Symfony before
    2.3.37, 2.6.x before 2.6.13, and 2.7.x before 2.7.9 does not properly generate
    random numbers when used with PHP 5.x without the paragonie/random_compat library
    and the openssl_random_pseudo_bytes function fails, which makes it easier for
    attackers to defeat cryptographic protection mechanisms via unspecified vectors.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.3.36
  - 2.6.0
  - 2.6.1
  - 2.6.10
  - 2.6.11
  - 2.6.12
  - 2.6.2
  - 2.6.3
  - 2.6.4
  - 2.6.5
  - 2.6.6
  - 2.6.7
  - 2.6.8
  - 2.6.9
  - 2.7.0
  - 2.7.1
  - 2.7.2
  - 2.7.3
  - 2.7.4
  - 2.7.5
  - 2.7.6
  - 2.7.7
  - 2.7.8
  package_manager: packagist
  cve:
  - CVE-2016-1902
  disclosed_date: 2016-06-01
  created_date: 2016-06-01
  last_modified_date: 2016-06-03
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2016-1902-securerandom-s-fallback-not-secure-when-openssl-fails
  - http://www.debian.org/security/2016/dsa-3588
  - https://github.com/symfony/symfony/pull/17359
  - https://www.landaire.net/blog/cve-2016-1902-symfony-securerandom/
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8399186904
  title: "[CVE-2016-4423]  Resource Management Errors"
  description: The attemptAuthentication function in Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php
    in Symfony before 2.3.41, 2.7.x before 2.7.13, 2.8.x before 2.8.6, and 3.0.x before
    3.0.6 does not limit the length of a username stored in a session, which allows
    remote attackers to cause a denial of service (session storage consumption) via
    a series of authentication attempts with long, non-existent usernames.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.3.40
  - 2.7.0
  - 2.7.1
  - 2.7.10
  - 2.7.11
  - 2.7.12
  - 2.7.2
  - 2.7.3
  - 2.7.4
  - 2.7.5
  - 2.7.6
  - 2.7.7
  - 2.7.8
  - 2.7.9
  - 2.8.0
  - 2.8.1
  - 2.8.2
  - 2.8.3
  - 2.8.4
  - 2.8.5
  - 3.0.0
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  package_manager: packagist
  cve:
  - CVE-2016-4423
  disclosed_date: 2016-06-01
  created_date: 2016-06-01
  last_modified_date: 2016-06-03
  credit:
  - OSSIndex
  references:
  - http://www.debian.org/security/2016/dsa-3588
  - https://github.com/symfony/symfony/pull/18733
  - https://symfony.com/blog/cve-2016-4423-large-username-storage-in-session
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: ossindex:packagist:symfony/symfony:8402514318
  title: "[CVE-2016-2403]  Improper Authentication"
  description: Symfony before 2.8.6 and 3.x before 3.0.6 allows remote attackers to
    bypass authentication by logging in with an empty password and valid username,
    which triggers an unauthenticated bind.
  affected_package: symfony/symfony
  vulnerable_versions:
  - 2.8.0
  - 2.8.1
  - 2.8.2
  - 2.8.3
  - 2.8.4
  - 2.8.5
  - 3.0.0
  - 3.0.1
  - 3.0.2
  - 3.0.3
  - 3.0.4
  - 3.0.5
  package_manager: packagist
  cve:
  - CVE-2016-2403
  disclosed_date: 2017-02-07
  created_date: 2017-02-07
  last_modified_date: 2017-02-28
  credit:
  - OSSIndex
  references:
  - http://symfony.com/blog/cve-2016-2403-unauthorized-access-on-a-misconfigured-ldap-server-when-using-an-empty-password
  - http://www.securityfocus.com/bid/96137
  source_url: https://ossindex.net/resource/package/8397625916/vulnerabilities
- id: snykio:packagist:symfony/symfony:173743
  title: Cross-site Scripting (XSS)
  description: |+
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). A remote attacker could inject arbitrary web script or HTML via
    the \"file\" parameter in a URL.



    [1]: https://packagist.org/packages/symfony/symfony
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: symfony/symfony
  vulnerable_versions:
  - "<4.1"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-12040
  cwe:
  - CWE-79
  disclosed_date: 2018-06-08
  created_date: 2018-06-14
  last_modified_date: 2018-06-14
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2018-12040
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-173743
- id: snykio:packagist:symfony/symfony:173744
  title: Host Header Injection
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Host Header
    Injection. When using `HttpCache`, the values of the `X-Forwarded-Host`
    headers are implicitly set as trusted while this should be forbidden,
    leading to potential host header injection.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.49"
  - ">=2.8.0  <2.8.44"
  - ">=3.3.0  <3.3.18"
  - ">=3.4.0  <3.4.14"
  - ">=4.0.0  <4.0.14"
  - ">=4.1.0  <4.1.2"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-14774
  cwe:
  - CWE-444
  disclosed_date: 2018-07-31
  created_date: 2018-08-05
  last_modified_date: 2018-08-05
  credit:
  - Chaosversum
  references:
  - https://github.com/symfony/symfony/commit/725dee4cd8b4ccd52e335ae4b4522242cea9bd4a
  - https://github.com/symfony/symfony/releases/tag/v4.1.3
  - https://symfony.com/blog/cve-2018-14774-possible-host-header-injection-when-using-httpcache
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-173744
- id: snykio:packagist:symfony/symfony:173745
  title: Cross-site Scripting (XSS)
  description: |+
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) via the content page.



    [1]: https://packagist.org/packages/symfony/symfony
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.7"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-12043
  cwe:
  - CWE-79
  disclosed_date: 2018-06-07
  created_date: 2018-06-13
  last_modified_date: 2018-06-13
  credit:
  - Unknown
  references:
  - https://github.com/symphonycms/symphony-2/commit/1ace6b31867cc83267b3550686271c9c65ac3ec0
  - https://nvd.nist.gov/vuln/detail/CVE-2018-12043
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-173745
- id: snykio:packagist:symfony/symfony:174495
  title: Deserialization of Untrusted Data
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Deserialization of
    Untrusted Data. Malicious content obtained from user input could be used
    to trigger file deletions or echo raw output by triggering the
    `unserialize()` function.



    [1]: https://packagist.org/packages/symfony/symfony
    \nSerialization is a process of converting an object into a sequence of
    bytes which can be persisted to a disk or database or can be sent
    through streams. The reverse process of creating object from sequence of
    bytes is called deserialization. Serialization is commonly used for
    communication (sharing objects between multiple hosts) and persistence
    (store the object state in a file or a database). It is an integral part
    of popular protocols like *Remote Method Invocation (RMI)*, *Java
    Management Extension (JMX)*, *Java Messaging System (JMS)*, *Action
    Message Format (AMF)*, *Java Server Faces (JSF) ViewState*, etc.

    *Deserialization of untrusted data* ([CWE-502][1]), is when the
    application deserializes untrusted data without sufficiently verifying
    that the resulting data will be valid, letting the attacker to control
    the state or the flow of the execution.

    Java deserialization issues have been known for years. However, interest
    in the issue intensified greatly in 2015, when classes that could be
    abused to achieve remote code execution were found in a [popular library
    (Apache Commons Collection)][2]. These classes were used in zero-days
    affecting IBM WebSphere, Oracle WebLogic and many other products.

    An attacker just needs to identify a piece of software that has both a
    vulnerable class on its path, and performs deserialization on untrusted
    data. Then all they need to do is send the payload into the
    deserializer, getting the command executed.

    > Developers put too much trust in Java Object Serialization. Some even
    > de-serialize objects pre-authentication. When deserializing an Object
    > in Java you typically cast it to an expected type, and therefore
    > Java\'s strict type system will ensure you only get valid object
    > trees. Unfortunately, by the time the type checking happens, platform
    > code has already created and executed significant logic. So, before
    > the final type is checked a lot of code is executed from the
    > readObject() methods of various objects, all of which is out of the
    > developer\'s control. By combining the readObject() methods of various
    > classes which are available on the classpath of the vulnerable
    > application an attacker can execute functions (including calling
    > Runtime.exec() to execute local OS commands).

    * Apache Blog



    [1]: https://cwe.mitre.org/data/definitions/502.html
    [2]: https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0  <2.8.50"
  - ">=3.0.0  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.3.0"
  - ">=3.3.0  <3.4.0"
  - ">=3.4.0  <3.4.26"
  - ">=4.0.0  <4.1.0"
  - ">=4.1.0  <4.1.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-10912
  cwe:
  - CWE-502
  disclosed_date: 2019-04-24
  created_date: 2019-04-24
  last_modified_date: 2019-04-24
  credit:
  - Mindaugas Vedegys
  references:
  - https://github.com/symfony/symfony/commit/4fb975281634b8d49ebf013af9e502e67c28816b
  - https://symfony.com/blog/cve-2019-10912-prevent-destructors-with-side-effects-from-being-unserialized
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-174495
- id: snykio:packagist:symfony/symfony:174496
  title: Arbitrary Code Execution
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Service IDs derived from unfiltered user input could result
    in the execution of any arbitrary code.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.51"
  - ">=2.8.0  <2.8.50"
  - ">=3.0.0  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.3.0"
  - ">=3.3.0  <3.4.0"
  - ">=3.4.0  <3.4.26"
  - ">=4.0.0  <4.1.0"
  - ">=4.1.0  <4.1.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-10910
  cwe:
  - CWE-94
  disclosed_date: 2019-04-24
  created_date: 2019-04-24
  last_modified_date: 2019-04-24
  credit:
  - Unknown
  references:
  - https://github.com/symfony/symfony/commit/d2fb5893923292a1da7985f0b56960b5bb10737b
  - https://symfony.com/blog/cve-2019-10910-check-service-ids-are-valid
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-174496
- id: snykio:packagist:symfony/symfony:174497
  title: Improper Input Validation
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Improper Input
    Validation. The function `getMethod()` does not validate or escape the
    `X-HTTP-Method-Override` header or the HTTP method itself. This could
    result resulting in those input being returned in dangerous contexts
    under certain circumstances.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.51"
  - ">=2.8.0  <2.8.50"
  - ">=3.0.0  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.3.0"
  - ">=3.3.0  <3.4.0"
  - ">=3.4.0  <3.4.26"
  - ">=4.0.0  <4.1.0"
  - ">=4.1.0  <4.1.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-10913
  cwe:
  - CWE-20
  disclosed_date: 2019-04-24
  created_date: 2019-04-24
  last_modified_date: 2019-04-24
  credit:
  - mschop
  references:
  - https://github.com/symfony/symfony/commit/944e60f083c3bffbc6a0b5112db127a10a66a8ec
  - https://symfony.com/blog/cve-2019-10913-reject-invalid-http-method-overrides
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-174497
- id: snykio:packagist:symfony/symfony:174498
  title: Cross-site Scripting (XSS)
  description: |+
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). Validation messages are not escaped when using the form theme of
    the PHP templating engine which, when validation messages may reflect
    user input, could result in an Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/symfony/symfony
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.51"
  - ">=2.8.0  <2.8.50"
  - ">=3.0.0  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.3.0"
  - ">=3.3.0  <3.4.0"
  - ">=3.4.0  <3.4.26"
  - ">=4.0.0  <4.1.0"
  - ">=4.1.0  <4.1.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-10909
  cwe:
  - CWE-79
  disclosed_date: 2019-04-24
  created_date: 2019-04-24
  last_modified_date: 2019-04-24
  credit:
  - Christophe Coevoet
  references:
  - https://github.com/symfony/symfony/commit/ab4d05358c3d0dd1a36fc8c306829f68e3dd84e2
  - https://symfony.com/blog/cve-2019-10909-escape-validation-messages-in-the-php-templating-engine
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-174498
- id: snykio:packagist:symfony/symfony:174499
  title: Access Control Bypass
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Access Control
    Bypass. The `generateCookieHash` function used to create a user\'s
    remember me cookie does not contain a delimiter during token generation.
    As such, an attacker could modify the remember me cookie and
    authenticate as a different user. This attack is only possible if the
    remember me functionality is enabled and the two users share a password
    hash or if the password hashes (e.g. `UserInterface::getPassword()`) are
    null for all users (which is valid if passwords are checked by an
    external system, e.g. an SSO).



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.51"
  - ">=2.8.0  <2.8.50"
  - ">=3.0.0  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.3.0"
  - ">=3.3.0  <3.4.0"
  - ">=3.4.0  <3.4.26"
  - ">=4.0.0  <4.1.0"
  - ">=4.1.0  <4.1.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-10911
  cwe:
  - CWE-288
  disclosed_date: 2019-04-24
  created_date: 2019-04-24
  last_modified_date: 2019-04-24
  credit:
  - Jon Cave
  references:
  - https://github.com/symfony/symfony/commit/a29ce2817cf43bb1850cf6af114004ac26c7a081
  - https://symfony.com/blog/cve-2019-10911-add-a-separator-in-the-remember-me-cookie-hash
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-174499
- id: snykio:packagist:symfony/symfony:535350
  title: Timing Attack
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Timing Attack. When
    checking the signature of an URI (an ESI fragment URL for instance), the
    URISigner does not use a constant time string comparison function,
    resulting in a potential remote timing attack vulnerability.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0  <2.8.52"
  - ">=3.4.0  <3.4.35"
  - ">=4.2.0  <4.2.12"
  - ">=4.3.0  <4.3.8"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-18887
  cwe:
  - CWE-362
  disclosed_date: 2019-11-21
  created_date: 2019-11-22
  last_modified_date: 2019-11-22
  credit:
  - Unknown
  references:
  - https://github.com/symfony/symfony/commit/cccefe6a7f12e776df0665aeb77fe9294c285fbb
  - https://github.com/symfony/symfony/releases/tag/v4.3.8
  - https://symfony.com/blog/cve-2019-18887-use-constant-time-comparison-in-urisigner
  - https://symfony.com/blog/symfony-4-3-8-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-535350
- id: snykio:packagist:symfony/symfony:535351
  title: User Enumeration
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to User Enumeration.
    The ability to enumerate users was possible due to different handling
    depending on whether the user existed when making unauthorized attempts
    to use the switch users functionality.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.2.0  <4.2.12"
  - ">=4.3.0  <4.3.8"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2019-18886
  cwe:
  - CWE-203
  disclosed_date: 2019-11-13
  created_date: 2019-11-22
  last_modified_date: 2019-11-22
  credit:
  - Matt Daum
  references:
  - https://github.com/symfony/symfony/commit/7bd4a92fc9cc15d9a9fbb9eb1041e01b977f8332
  - https://github.com/symfony/symfony/releases/tag/v4.3.8
  - https://symfony.com/blog/cve-2019-18886-prevent-user-enumeration-using-switch-user-functionality
  - https://symfony.com/blog/symfony-4-3-8-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-535351
- id: snykio:packagist:symfony/symfony:535352
  title: Arbitrary Code Execution
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Some strings were not properly escaped when being dumped by
    the `VarExporter` component leading to remote code execution.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.2.0  <4.2.12"
  - ">=4.3.0  <4.3.8"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-11325
  cwe:
  - CWE-94
  disclosed_date: 2019-11-13
  created_date: 2019-11-22
  last_modified_date: 2019-11-22
  credit:
  - Seung Woo Yuk (xtac)
  references:
  - https://github.com/symfony/symfony/commit/0524868cbf3d3a36e0af804432016d5a6d98169a
  - https://github.com/symfony/symfony/releases/tag/v4.3.8
  - https://symfony.com/blog/cve-2019-11325-fix-escaping-of-strings-in-varexporter
  - https://symfony.com/blog/symfony-4-3-8-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-535352
- id: snykio:packagist:symfony/symfony:535353
  title: Arbitrary Code Execution
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. When an instance of `TagAwareAdapter` is destructed, Symfony
    execute callables stored in privates properties in order to invalidates
    tags. When the instance has been created by unserializing an external
    payload, those properties are not checked leading to a remote code
    execution.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=3.4.0  <3.4.35"
  - ">=4.2.0  <4.2.12"
  - ">=4.3.0  <4.3.8"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-18889
  cwe:
  - CWE-94
  disclosed_date: 2019-11-13
  created_date: 2019-11-22
  last_modified_date: 2019-11-22
  credit:
  - wisdomtree
  references:
  - https://github.com/symfony/symfony/commit/8817d28fcaacb31fe01d267f6e19b44d8179395a
  - https://github.com/symfony/symfony/releases/tag/v4.3.8
  - https://symfony.com/blog/cve-2019-18889-forbid-serializing-abstractadapter-and-tagawareadapter-instances
  - https://symfony.com/blog/symfony-4-3-8-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-535353
- id: snykio:packagist:symfony/symfony:535354
  title: Arbitrary Code Execution
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Provided file paths were not being properly escaped before
    being used in the `FileBinaryMimeTypeGuesser` resulting in potential
    argument injection through the provided `$path` variable.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0  <2.8.52"
  - ">=3.4.0  <3.4.35"
  - ">=4.2.0  <4.2.11"
  - ">=4.3.0  <4.3.8"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-18888
  cwe:
  - CWE-94
  disclosed_date: 2019-11-13
  created_date: 2019-11-22
  last_modified_date: 2019-11-22
  credit:
  - Ivan Novikov
  references:
  - https://github.com/symfony/symfony/commit/691486e43ce0e4893cd703e221bafc10a871f365
  - https://github.com/symfony/symfony/commit/77ddabf2e785ea85860d2720cc86f7c5d8967ed5
  - https://github.com/symfony/symfony/releases/tag/v4.3.8
  - https://symfony.com/blog/cve-2019-18888-prevent-argument-injection-in-a-mimetypeguesser
  - https://symfony.com/blog/symfony-4-3-8-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-535354
- id: snykio:packagist:symfony/symfony:561576
  title: Information Exposure
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Information Exposure
    some properties of the Exception were not properly escaped when the
    `ErrorHandler` rendered it stacktrace, which is also displayed displayed
    in a non-debug configuration.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0  <4.4.4"
  - ">=5.0.0  <5.0.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2020-5274
  cwe:
  - CWE-200
  - CWE-209
  disclosed_date: 2020-03-30
  created_date: 2020-03-31
  last_modified_date: 2020-03-31
  credit:
  - Luka Sikic
  references:
  - https://github.com/symfony/symfony/commit/629d21b800a15dc649fb0ae9ed7cd9211e7e45db
  - https://github.com/symfony/symfony/commit/cf80224589ac05402d4f72f5ddf80900ec94d5ad
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-561576
- id: snykio:packagist:symfony/symfony:561580
  title: Denial of Service
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Denial of Service.
    When a `Response` does not contain a `Content-Type` header, Symfony can
    fallback to the format defined in the `Accept` header of the request,
    leading to a possible mismatch between the response\'s content and
    `Content-Type` header.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0  <4.4.7"
  - ">=5.0.0  <5.0.7"
  severity: low
  package_manager: packagist
  cve:
  - CVE-2020-5255
  cwe:
  - CWE-400
  - CWE-435
  disclosed_date: 2020-03-30
  created_date: 2020-03-31
  last_modified_date: 2020-03-31
  credit:
  - Xavier Lacot
  references:
  - https://github.com/symfony/symfony/commit/dca343442e6a954f96a2609e7b4e9c21ed6d74e6
  - https://github.com/symfony/symfony/security/advisories/GHSA-mcx4-f5f5-4859
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-561580
- id: snykio:packagist:symfony/symfony:561581
  title: Improper Authorization
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Improper
    Authorization. When checking access control rule it suffices with one
    attribute that is granted access through `accessDecisionManager`,
    instead of checking all attributes.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=4.4.0  <4.4.7"
  - ">=5.0.0  <5.0.7"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2020-5275
  cwe:
  - CWE-285
  disclosed_date: 2020-03-30
  created_date: 2020-03-30
  last_modified_date: 2020-03-30
  credit:
  - Antonio J. Garcia Lagar
  references:
  - https://github.com/symfony/symfony/commit/c935e4a3fba6cc2ab463a6ca382858068d63cebf
  - https://github.com/symfony/symfony/security/advisories/GHSA-g4m9-5hpf-hx72
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-561581
- id: snykio:packagist:symfony/symfony:70199
  title: Access Restriction Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Access
    Restriction Bypass.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.0.6"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-287
  disclosed_date: 2012-11-08
  created_date: 2012-11-08
  last_modified_date: 2012-11-08
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-6
  - https://github.com/symfony/symfony/commit/9d2ab9ca9c1762
  - https://github.com/symfony/symfony/pull/2033
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70199
- id: snykio:packagist:symfony/symfony:70200
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`symfony/symfony`][1] are vulnerable to XML
    External Entity (XXE) Injection.



    [1]: https://packagist.org/packages/symfony/symfony
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.11"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2012-02-24
  created_date: 2012-02-24
  last_modified_date: 2012-02-24
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-11-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70200
- id: snykio:packagist:symfony/symfony:70201
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`symfony/symfony`][1] are vulnerable to XML
    External Entity (XXE) Injection.

    > Symfony 2.0.11 carried a \[similar\] XXE security fix, however, on
    > review of ZF2 I also noted a vulnerability to XML Entity Expansion
    > (XEE) attacks whereby all extensions making use of libxml2 have no
    > defense against XEE Quadratic Blowup Attacks. The vulnerability is a
    > function of there being no current method of disabling custom entities
    > in PHP (i.e. defined internal to the XML document without using
    > external entities). In a QBA, a long entity can be defined and then
    > referred to multiple times in document elements, creating a memory
    > sink with which Denial Of Service attacks against a host\'s RAM can be
    > mounted. The use of the LIBXML\_NOENT or equivalent option in a
    > dependent extension amplified the impact (it doesn\'t actually mean
    > \"No Entities\"). In addition, libxml2\'s innate defense against the
    > related Exponential or Billion Laugh\'s XEE attacks is active only so
    > long as the LIBXML\_PARSEHUGE is NOT set (it disables libxml2\'s
    > hardcoded entity recursion limit).



    [1]: https://packagist.org/packages/symfony/symfony
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.17"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2012-08-27
  created_date: 2012-08-27
  last_modified_date: 2012-08-27
  credit:
  - Pádraic Brady
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-17-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70201
- id: snykio:packagist:symfony/symfony:70202
  title: Access Restriction Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Access
    Restriction Bypass.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.19"
  - ">=2.1.0  <2.1.4"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-284
  disclosed_date: 2012-11-27
  created_date: 2012-11-27
  last_modified_date: 2012-11-27
  credit:
  - Damien Tournoud
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-19-and-2-1-4
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70202
- id: snykio:packagist:symfony/symfony:70203
  title: Path Disclosure
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Path
    Disclosure.

    On the Symfony 2.0.x version, there\'s a security issue that allows
    access to routes protected by a firewall even when the user is not
    logged in.

    Both the Routing component and the Security component uses the path
    returned by getPathInfo() to match a Request. The getPathInfo() returns
    a decoded path, but the Routing component
    (Symfony\\Component\\Routing\\Matcher\\UrlMatcher) decodes the path a
    second time; whereas the Security component,
    Symfony\\Component\\HttpFoundation\\RequestMatcher, does not.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.19"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2012-6431
  cwe:
  - CWE-200
  disclosed_date: 2012-03-19
  created_date: 2012-03-19
  last_modified_date: 2012-03-19
  credit:
  - Manuele Menozzi
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70203
- id: snykio:packagist:symfony/symfony:70204
  title: Arbitrary Code Execution
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Arbitrary
    Code Execution.

    Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the
    internal routes configuration is enabled, allows remote attackers to
    access arbitrary services via vectors involving a URI beginning with a
    /internal substring.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.20"
  - ">=2.1.0  <2.1.5"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2012-6432
  cwe:
  - CWE-94
  disclosed_date: 2012-12-19
  created_date: 2012-12-19
  last_modified_date: 2012-12-19
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released
  - https://nvd.nist.gov/vuln/detail/CVE-2012-6432
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70204
- id: snykio:packagist:symfony/symfony:70205
  title: Arbitrary Code Execution
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Arbitrary
    Code Execution.

    The Yaml::parse function in Symfony 2.0.x before 2.0.22 remote attackers
    to execute arbitrary PHP code via a PHP file, a different vulnerability
    than CVE-2013-1397.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.22"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2013-1348
  cwe:
  - CWE-94
  disclosed_date: 2013-01-15
  created_date: 2013-01-15
  last_modified_date: 2013-01-15
  credit:
  - Pádraic Brady
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70205
- id: snykio:packagist:symfony/symfony:70206
  title: Arbitrary Code Execution
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Arbitrary
    Code Execution.

    Symfony 2.0.x before 2.0.22, 2.1.x before 2.1.7, and 2.2.x remote
    attackers to execute arbitrary PHP code via a serialized PHP object to
    the (1) Yaml::parse or (2) Yaml\\Parser::parse function, a different
    vulnerability than CVE-2013-1348.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.22"
  - ">=2.1.0  <2.1.7"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2013-1397
  cwe:
  - CWE-94
  disclosed_date: 2013-01-15
  created_date: 2013-01-15
  last_modified_date: 2013-01-15
  credit:
  - Johannes Schmitt
  references:
  - http://symfony.com/blog/security-release-symfony-2-0-22-and-2-1-7-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70206
- id: snykio:packagist:symfony/symfony:70207
  title: Loss of Information
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Loss of
    Information.

    When using the Validator component, if
    Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache is enabled (or
    any other cache implementing
    Symfony\\Component\\Validator\\Mapping\\Cache\\CacheInterface), some
    information is lost during serialization (the collectionCascaded and the
    collectionCascadedDeeply fields).



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.24"
  - ">=2.1.0  <2.1.12"
  - ">=2.2.0  <2.2.5"
  - ">=2.3.0  <2.3.3"
  severity: low
  package_manager: packagist
  cve:
  - CVE-2013-4751
  cwe:
  - CWE-221
  disclosed_date: 2013-08-17
  created_date: 2013-08-17
  last_modified_date: 2013-08-17
  credit:
  - Alexandre Salome
  references:
  - http://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70207
- id: snykio:packagist:symfony/symfony:70208
  title: HTTP Host Header Poisoning
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to HTTP Host
    Header Poisoning.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.24"
  - ">=2.1.0  <2.1.12"
  - ">=2.2.0  <2.2.5"
  - ">=2.3.0  <2.3.3"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2013-4752
  cwe:
  - CWE-74
  disclosed_date: 2013-08-17
  created_date: 2013-08-17
  last_modified_date: 2013-08-17
  credit:
  - Jordan Alliot
  references:
  - http://symfony.com/blog/security-releases-symfony-2-0-24-2-1-12-2-2-5-and-2-3-3-released
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70208
- id: snykio:packagist:symfony/symfony:70209
  title: Denial of Service (DoS)
  description: |+
    Affected versions of [`symfony/symfony`][1] are vulnerable to Denial of
    Service (DoS).

    The Security component in Symfony 2.0.x before 2.0.25, 2.1.x before
    2.1.13, 2.2.x before 2.2.9, and 2.3.x before 2.3.6 allows remote
    attackers to cause a denial of service (CPU consumption) via a long
    password that triggers an expensive hash computation, as demonstrated by
    a PBKDF2 computation, a similar issue to [CVE-2013-5750][2].



    [1]: https://packagist.org/packages/symfony/symfony
    [2]: https://snyk.io/vuln/SNYK-PHP-FRIENDSOFSYMFONYUSERBUNDLE-70102
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.0.25"
  - ">=2.1.0  <2.1.13"
  - ">=2.2.0  <2.2.9"
  - ">=2.3.0  <2.3.6"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2013-5958
  cwe:
  - CWE-400
  disclosed_date: 2013-10-10
  created_date: 2013-10-10
  last_modified_date: 2013-10-10
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/security-releases-cve-2013-5958-symfony-2-0-25-2-1-13-2-2-9-and-2-3-6-released
  - https://nvd.nist.gov/vuln/detail/CVE-2013-5958
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70209
- id: snykio:packagist:symfony/symfony:70210
  title: Arbitrary Code Injection
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Arbitrary
    Code Injection.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.1.0"
  - ">=2.1.0  <2.2.0"
  - ">=2.2.0  <2.3.0"
  - ">=2.3.0  <2.3.19"
  - ">=2.4.0  <2.4.9"
  - ">=2.5.0  <2.5.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2014-4931
  cwe:
  - CWE-94
  disclosed_date: 2014-07-25
  created_date: 2014-07-25
  last_modified_date: 2014-07-25
  credit:
  - Jeremy Derussé
  references:
  - http://symfony.com/blog/security-releases-cve-2014-4931-symfony-2-3-18-2-4-8-and-2-5-2-released
  - https://github.com/symfony/symfony/commit/06a80fbdbe744ad6f3010479ba64ef5cf35dd9af
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70210
- id: snykio:packagist:symfony/symfony:70211
  title: Denial of Service (DoS)
  description: |+
    Affected versions of [`symfony/symfony`][1] are vulnerable to Denial of
    Service (DoS).



    [1]: https://packagist.org/packages/symfony/symfony
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.3.19"
  - ">=2.4.0  <2.4.9"
  - ">=2.5.0  <2.5.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2014-5244
  cwe:
  - CWE-400
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2014-5244-denial-of-service-with-a-malicious-http-host-header
  - https://github.com/symfony/symfony/commit/1ee96a8b1b0987ffe2a62dca7ad268bf9edfa9b8
  - https://github.com/symfony/symfony/pull/11828
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70211
- id: snykio:packagist:symfony/symfony:70212
  title: Information Exposure
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to
    Information Exposure.

    When you enable the ESI feature and when you are using a proxy like
    Varnish that you configured as a trusted proxy, the FragmentHandler
    considered requests to render fragments as coming from a trusted source,
    even if the client was requesting them directly. Symfony can not
    distinguish between ESI requests done on behalf of the client by Varnish
    and faked fragment requests coming directly from the client.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.1.0"
  - ">=2.1.0  <2.2.0"
  - ">=2.2.0  <2.3.0"
  - ">=2.3.0  <2.3.19"
  - ">=2.4.0  <2.4.9"
  - ">=2.5.0  <2.5.4"
  severity: low
  package_manager: packagist
  cve:
  - CVE-2014-5245
  cwe:
  - CWE-200
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - Christophe Coevoet
  - Cédric Nirousset
  - Trent Steel
  references:
  - http://symfony.com/blog/cve-2014-5245-direct-access-of-esi-urls-behind-a-trusted-proxy
  - https://github.com/symfony/symfony/pull/11831
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70212
- id: snykio:packagist:symfony/symfony:70213
  title: Authentication Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to
    Authentication Bypass.

    When an application uses an HTTP basic or digest authentication, Symfony
    does not parse the Authorization header properly, which could be
    exploited in some server setups (no exploits have been demonstrated
    though.)



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.1.0"
  - ">=2.1.0  <2.2.0"
  - ">=2.2.0  <2.3.0"
  - ">=2.3.0  <2.3.19"
  - ">=2.4.0  <2.4.9"
  - ">=2.5.0  <2.5.4"
  severity: low
  package_manager: packagist
  cve:
  - CVE-2014-6061
  cwe:
  - CWE-592
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - Damien Tournoud
  references:
  - http://symfony.com/blog/cve-2014-6061-security-issue-when-parsing-the-authorization-header
  - https://github.com/symfony/symfony/pull/11829
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70213
- id: snykio:packagist:symfony/symfony:70214
  title: Cross-site Request Forgery (CSRF)
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Cross-site
    Request Forgery (CSRF).



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.1.0"
  - ">=2.1.0  <2.2.0"
  - ">=2.2.0  <2.3.0"
  - ">=2.3.0  <2.3.19"
  - ">=2.4.0  <2.4.9"
  - ">=2.5.0  <2.5.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2014-6072
  cwe:
  - CWE-352
  disclosed_date: 2014-09-03
  created_date: 2014-09-03
  last_modified_date: 2014-09-03
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2014-6072-csrf-vulnerability-in-the-web-profiler
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70214
- id: snykio:packagist:symfony/symfony:70215
  title: Arbitrary Code Injection
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Arbitrary
    Code Injection.

    Eval injection vulnerability in the HttpCache class in HttpKernel in
    Symfony 2.x before 2.3.27, 2.4.x and 2.5.x before 2.5.11, and 2.6.x
    before 2.6.6 allows remote attackers to execute arbitrary PHP code via a
    `language="php"` attribute of a SCRIPT element.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.1.0"
  - ">=2.1.0  <2.2.0"
  - ">=2.2.0  <2.3.0"
  - ">=2.3.0  <2.3.27"
  - ">=2.4.0  <2.5.0"
  - ">=2.5.0  <2.5.11"
  - ">=2.6.0  <2.6.6"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2015-2308
  cwe:
  - CWE-94
  disclosed_date: 2015-04-01
  created_date: 2015-04-01
  last_modified_date: 2015-04-01
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2015-2308-esi-code-injection
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70215
- id: snykio:packagist:symfony/symfony:70216
  title: Man-in-the-Middle (MitM)
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to
    Man-in-the-Middle (MitM).

    The `Symfony\Component\HttpFoundation\Request` class provides a
    mechanism that ensures it does not trust HTTP header values coming from
    a \"non-trusted\" client. Unfortunately, it assumes that the remote
    address is always a trusted client if at least one trusted proxy is
    involved in the request; this allows a man-in-the-middle attack between
    the latest trusted proxy and the web server.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2  <2.3.27"
  - ">=2.4.0  <2.5.11"
  - ">=2.6.0  <2.6.6"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2015-2309
  cwe:
  - CWE-300
  disclosed_date: 2015-04-01
  created_date: 2015-04-01
  last_modified_date: 2015-04-01
  credit:
  - Dmitrii Chekaliuk
  references:
  - http://symfony.com/blog/cve-2015-2309-unsafe-methods-in-the-request-class
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70216
- id: snykio:packagist:symfony/symfony:70217
  title: Access Restriction Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Access
    Restriction Bypass.

    FragmentListener in the HttpKernel component in Symfony 2.3.19 through
    2.3.28, 2.4.9 through 2.4.10, 2.5.4 through 2.5.11, and 2.6.0 through
    2.6.7, when ESI or SSI support enabled, does not check if the
    `_controller` attribute is set, which allows remote attackers to bypass
    URL signing and security rules by including (1) no hash or (2) an
    invalid hash in a request to `/_fragment`.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.19  <2.3.29"
  - ">=2.4.9  <2.5.0"
  - ">=2.5.4  <2.5.12"
  - ">=2.6.0  <2.6.8"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2015-4050
  cwe:
  - CWE-284
  disclosed_date: 2015-05-26
  created_date: 2015-05-26
  last_modified_date: 2015-05-26
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2015-4050-esi-unauthorized-access
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70217
- id: snykio:packagist:symfony/symfony:70218
  title: Session Fixation
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Session
    Fixation.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0  <2.3.35"
  - ">=2.4.0  <2.5.0"
  - ">=2.5.0  <2.6.0"
  - ">=2.6.0  <2.6.12"
  - ">=2.7.0  <2.7.7"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2015-8124
  cwe:
  - CWE-384
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2015-8124-session-fixation-in-the-remember-me-login-feature
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70218
- id: snykio:packagist:symfony/symfony:70219
  title: Timing Attack
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Timing
    Attack.

    Symfony 2.3.x before 2.3.35, 2.6.x before 2.6.12, and 2.7.x before 2.7.7
    might allow remote attackers to have unspecified impact via a timing
    attack involving:

    * Symfony/Component/Security/Http/RememberMe/PersistentTokenBasedRememberMeServices
      or
    * Symfony/Component/Security/Http/Firewall/DigestAuthenticationListener
      class in the Symfony Security Component, or
    * legacy CSRF implementation from the
      Symfony/Component/Form/Extension/Csrf/CsrfProvider/DefaultCsrfProvider
      class in the Symfony Form component.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0  <2.3.35"
  - ">=2.4.0  <2.5.0"
  - ">=2.5.0  <2.6.0"
  - ">=2.6.0  <2.6.12"
  - ">=2.7.0  <2.7.7"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2015-8125
  cwe:
  - CWE-208
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - Sebastiaan Stok
  references:
  - http://symfony.com/blog/cve-2015-8125-potential-remote-timing-attack-vulnerability-in-security-remember-me-service
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70219
- id: snykio:packagist:symfony/symfony:70220
  title: Insecure Randomness
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Insecure
    Randomness .

    The nextBytes function in the SecureRandom class in Symfony before
    2.3.37, 2.6.x before 2.6.13, and 2.7.x before 2.7.9 does not properly
    generate random numbers when used with PHP 5.x without the
    paragonie/random\_compat library and the openssl\_random\_pseudo\_bytes
    function fails, which makes it easier for attackers to defeat
    cryptographic protection mechanisms via unspecified vectors.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0  <2.3.37"
  - ">=2.4.0  <2.5.0"
  - ">=2.5.0  <2.6.0"
  - ">=2.6.0  <2.6.13"
  - ">=2.7.0  <2.7.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2016-1902
  cwe:
  - CWE-330
  disclosed_date: 2016-01-14
  created_date: 2016-01-14
  last_modified_date: 2016-01-14
  credit:
  - Unknown
  references:
  - http://symfony.com/blog/cve-2016-1902-securerandom-s-fallback-not-secure-when-openssl-fails
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70220
- id: snykio:packagist:symfony/symfony:70221
  title: Access Restriction Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Access
    Restriction Bypass.

    Symfony before 2.8.6 and 3.x before 3.0.6 allows remote attackers to
    bypass authentication by logging in with an empty password and valid
    username, which triggers an unauthenticated bind.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.8.0  <2.8.6"
  - ">=3.0.0  <3.0.6"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2016-2403
  cwe:
  - CWE-284
  disclosed_date: 2016-05-09
  created_date: 2016-05-09
  last_modified_date: 2016-05-09
  credit:
  - Matteo Rossi
  references:
  - http://symfony.com/blog/cve-2016-2403-unauthorized-access-on-a-misconfigured-ldap-server-when-using-an-empty-password
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70221
- id: snykio:packagist:symfony/symfony:70222
  title: Denial of Service (DoS)
  description: |+
    Affected versions of [`symfony/symfony`][1] are vulnerable to Denial of
    Service (DoS).

    The attemptAuthentication function in
    Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php
    in Symfony before 2.3.41, 2.7.x before 2.7.13, 2.8.x before 2.8.6, and
    3.0.x before 3.0.6 does not limit the length of a username stored in a
    session, which allows remote attackers to cause a denial of service
    (session storage consumption) via a series of authentication attempts
    with long, non-existent usernames.



    [1]: https://packagist.org/packages/symfony/symfony
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.3.0  <2.3.41"
  - ">=2.4.0  <2.5.0"
  - ">=2.5.0  <2.6.0"
  - ">=2.6.0  <2.7.0"
  - ">=2.7.0  <2.7.13"
  - ">=2.8.0  <2.8.6"
  - ">=3  <3.0.6"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2016-4423
  cwe:
  - CWE-400
  disclosed_date: 2016-05-09
  created_date: 2016-05-09
  last_modified_date: 2016-05-09
  credit:
  - Marek Alaksa
  references:
  - http://symfony.com/blog/cve-2016-4423-large-username-storage-in-session
  - https://github.com/symfony/symfony/pull/18733
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70222
- id: snykio:packagist:symfony/symfony:70223
  title: Access Restriction Bypass
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Access
    Restriction Bypass. Validating a user password with a UserPassword
    constraint but with no NotBlank constraint would pass without any error.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.30  <2.7.32"
  - ">=2.8.23  <2.8.25"
  - ">=3.2.10  <3.2.12"
  - ">=3.3.3  <3.3.5"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-11365
  cwe:
  - CWE-284
  disclosed_date: 2017-07-17
  created_date: 2017-07-17
  last_modified_date: 2017-07-17
  credit:
  - Unknown
  references:
  - https://symfony.com/blog/cve-2017-11365-empty-passwords-validation-issue
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70223
- id: snykio:packagist:symfony/symfony:70376
  title: Information Exposure
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to
    Information Exposure.

    When a form is submitted by the user, the request handler classes of the
    Form component merge POST data (known as the `$_POST` array in plain
    PHP) and uploaded files data (known as the `$_FILES` array in plain PHP)
    into one array. This big array forms the data that are then bound to the
    form. At this stage there is no difference anymore between submitted
    POST data and uploaded files.

    A user can send a crafted HTTP request where the value of a FileType is
    sent as normal POST data that could be interpreted as a locale file path
    on the server-side (for example, file:///etc/passwd). If the application
    did not perform any additional checks about the value submitted to the
    FileType, the contents of the given file on the server could have been
    exposed to the attacker.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.38"
  - ">=2.8.0  <2.8.31"
  - ">=3  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.2.14"
  - ">=3.3.0  <3.3.13"
  - ">=3.4-BETA0  <3.4-BETA5"
  - ">=4.0-BETA0  <4.0-BETA5"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-16790
  cwe:
  - CWE-200
  disclosed_date: 2017-11-16
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Ondrej Exner
  references:
  - http://symfony.com/blog/cve-2017-16790-ensure-that-submitted-data-are-uploaded-files
  - https://github.com/symfony/symfony/pull/24993
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70376
- id: snykio:packagist:symfony/symfony:70377
  title: Directory Traversal
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Directory
    Traversal.

    The Intl component includes various bundle readers that are used to read
    resource bundles from the local filesystem. The `read()` methods of
    these classes use a path and a locale to determine the language bundle
    to retrieve.

    The locale argument value is commonly retrieved from untrusted user
    input (like a URL parameter). An attacker can use this argument to
    navigate to arbitrary directories via the dot-dot-slash attack.



    [1]: https://packagist.org/packages/symfony/symfony
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.38"
  - ">=2.8.0  <2.8.31"
  - ">=3  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.2.14"
  - ">=3.3.0  <3.3.13"
  - ">=3.4-BETA0  <3.4-BETA5"
  - ">=4.0-BETA0  <4.0-BETA5"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-16654
  cwe:
  - CWE-22
  disclosed_date: 2017-11-16
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - David Bohannon
  references:
  - http://symfony.com/blog/cve-2017-16654-intl-bundle-readers-breaking-out-of-paths
  - https://github.com/symfony/symfony/pull/24994
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70377
- id: snykio:packagist:symfony/symfony:70380
  title: Cross-site Request Forgery (CSRF)
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Cross-site
    Request Forgery (CSRF).

    The implementation of CSRF protection did not use different tokens for
    HTTP and HTTPS, therefore the token was subject to MITM attacks on HTTP
    and could then be used in HTTPS context to do CSRF attacks.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.38"
  - ">=2.8.0  <2.8.31"
  - ">=3  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.2.14"
  - ">=3.3.0  <3.3.13"
  - ">=3.4-BETA0  <3.4-BETA5"
  - ">=4.0-BETA0  <4.0-BETA5"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-16653
  cwe:
  - CWE-352
  disclosed_date: 2017-11-16
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Oliver Hoff
  references:
  - http://symfony.com/blog/cve-2017-16653-csrf-protection-does-not-use-different-tokens-for-http-and-https
  - https://github.com/symfony/symfony/pull/24992
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70380
- id: snykio:packagist:symfony/symfony:70381
  title: Open Redirect
  description: |
    Affected versions of [`symfony/symfony`][1] are vulnerable to Open
    Redirect.

    `DefaultAuthenticationSuccessHandler` or
    `DefaultAuthenticationFailureHandler` take the content of the
    `_target_path` parameter and generate a redirect response but no check
    is performed on the path, which could be an absolute URL to an external
    domain, opening redirect vulnerability.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.38"
  - ">=2.8.0  <2.8.31"
  - ">=3  <3.1.0"
  - ">=3.1.0  <3.2.0"
  - ">=3.2.0  <3.2.14"
  - ">=3.3.0  <3.3.13"
  - ">=3.4-BETA0  <3.4-BETA5"
  - ">=4.0-BETA0  <4.0-BETA5"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-16652
  cwe:
  - CWE-601
  disclosed_date: 2017-11-17
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Stefano Angaran
  references:
  - http://symfony.com/blog/cve-2017-16652-open-redirect-vulnerability-on-security-handlers
  - https://github.com/symfony/symfony/pull/24995
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70381
- id: snykio:packagist:symfony/symfony:72196
  title: Denial of Service (DoS)
  description: |+
    [symfony/symfony][1] is a set of reusable PHP components.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) attacks via the `PDOSessionHandler` class.

    **An application is vulnerable when:**

    * It uses `PDOSessionHandler` to store its sessions
    * And it uses MySQL as a backend for sessions managed by
      `PDOSessionHandler`
    * And the SQL mode does not contain `STRICT_ALL_TABLES` or
      `STRICT_TRANS_TABLES`.

    With this configuration, An attacker may conduct a denial of service by
    a well-crafted session, which leads to an infinite loop in the code.



    [1]: https://packagist.org/packages/symfony/symfony
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.48"
  - ">=2.8.0  <2.8.41"
  - ">=3.0.0  <3.3.17"
  - ">=3.4.0  <3.4.11"
  - ">=4.0.0  <4.0.11"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-11386
  cwe:
  - CWE-835
  disclosed_date: 2018-05-30
  created_date: 2018-05-30
  last_modified_date: 2018-05-30
  credit:
  - Federico Stange
  references:
  - https://symfony.com/cve-2018-11386
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72196
- id: snykio:packagist:symfony/symfony:72197
  title: Access Restriction Bypass
  description: |
    [symfony/symfony][1] is a set of PHP components.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. A misconfigured LDAP server allowed unauthorized access, due to
    a missing check for `null` passwords.

    **Note:** This is related to [CVE-2016-2403][2].



    [1]: https://packagist.org/packages/symfony/symfony
    [2]: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70221
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.8.37"
  - ">=3.0.0  <3.3.17"
  - ">=3.4.0  <3.4.7"
  - ">=4.0.0  <4.0.7"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-11407
  cwe:
  - CWE-284
  disclosed_date: 2018-05-30
  created_date: 2018-05-30
  last_modified_date: 2018-05-30
  credit:
  - Theo Bouge
  references:
  - https://symfony.com/cve-2018-11407
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72197
- id: snykio:packagist:symfony/symfony:72198
  title: CSRF Token Fixation
  description: |
    [symfony/symfony][1] is a set of reusable PHP components.

    Affected versions of this package are vulnerable to CSRF Token Fixation.
    CSRF tokens where not erased during logout, when the
    `invalidate_session` option was disabled. By default, a user’s session
    is invalidated when the user is logged out.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.48"
  - ">=2.8.0  <2.8.41"
  - ">=3.0.0  <3.3.17"
  - ">=3.4.0  <3.4.11"
  - ">=4.0.0  <4.0.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-11406
  cwe:
  - CWE-384
  disclosed_date: 2018-05-30
  created_date: 2018-05-30
  last_modified_date: 2018-05-30
  credit:
  - Kevin Liagre
  references:
  - https://symfony.com/cve-2018-11406
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72198
- id: snykio:packagist:symfony/symfony:72199
  title: Open Redirect
  description: |
    [symfony/symfony][1] is a set of reusable PHP components.

    Affected versions of this package are vulnerable to Open Redirect. This
    is due to an incomplete fix for [CVE-2017-16652][2]. There was an an
    edge case when the `security.http_utils` was inlined by the container.



    [1]: https://packagist.org/packages/symfony/symfony
    [2]: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-70381
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.48"
  - ">=2.8.0  <2.8.41"
  - ">=3.0.0  <3.3.17"
  - ">=3.4.0  <3.4.11"
  - ">=4.0.0  <4.0.11"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-11408
  cwe:
  - CWE-601
  disclosed_date: 2018-05-30
  created_date: 2018-05-30
  last_modified_date: 2018-05-30
  credit:
  - Antal Aron
  references:
  - https://symfony.com/cve-2018-11408
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72199
- id: snykio:packagist:symfony/symfony:72200
  title: Session Fixation
  description: |
    [symfony/symfony][1] is a set of reusable PHP components.

    Affected versions of this package are vulnerable to Session Fixation via
    the `Guard` login feature. An attacker may be able to impersonate the
    victim towards the web application if the session id value was
    previously known to the attacker. This allows the attacker to access a
    Symfony web application with the attacked user\'s permissions.

    **Note:**

    * The `Guard authentication` login feature must be enabled for the
      attack to be applicable.
    * The attacker must have access to the `PHPSESSID` cookie value or has
      successfully set a new value in the user\'s browser.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.48"
  - ">=2.8.0  <2.8.41"
  - ">=3.0.0  <3.3.17"
  - ">=3.4.0  <3.4.11"
  - ">=4.0.0  <4.0.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2018-11385
  cwe:
  - CWE-384
  disclosed_date: 2018-05-30
  created_date: 2018-05-30
  last_modified_date: 2018-05-30
  credit:
  - Chris Wilkinson
  references:
  - https://symfony.com/cve-2018-11385
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72200
- id: snykio:packagist:symfony/symfony:72246
  title: Cross-site Scripting (XSS)
  description: |+
    [symfony/symfony][1] is the The Symfony PHP framework.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks via the `ExceptionHandler.php` method.



    [1]: https://packagist.org/packages/symfony/symfony
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: symfony/symfony
  vulnerable_versions:
  - "<2.7.33"
  - ">=2.8.0  <2.8.26"
  - ">=3.0.0  <3.2.13"
  - ">=3.3.0  <3.3.6"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-18343
  cwe:
  - CWE-79
  disclosed_date: 2018-07-20
  created_date: 2018-07-30
  last_modified_date: 2018-07-30
  credit:
  - Unknown
  references:
  - https://github.com/symfony/symfony/issues/27987
  - https://github.com/symfony/symfony/pull/23684
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72246
- id: snykio:packagist:symfony/symfony:72257
  title: Access Restriction Bypass
  description: |
    [symfony/symfony][1] is a set of reusable PHP components.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. It maintained support for (legacy) IIS headers (`X-Original-URL`
    or `X-Rewrite-URL`) that allowed users to override the path in a request
    URL. As a result, it allowed a user to access one URL but have Symfony
    return a different one which can bypass restrictions on higher level
    caches and web servers.



    [1]: https://symfony.com/
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7  <2.7.49"
  - ">=2.8  <2.8.44"
  - ">=3  <3.3.18"
  - ">=3.4  <3.4.14"
  - ">=4  <4.0.14"
  - ">=4.1  <4.1.3"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-14773
  cwe:
  - CWE-284
  disclosed_date: 2018-08-02
  created_date: 2018-08-02
  last_modified_date: 2018-08-02
  credit:
  - Michael Cullum
  references:
  - https://symfony.com/blog/cve-2018-14773-remove-support-for-legacy-and-risky-http-headers
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72257
- id: snykio:packagist:symfony/symfony:72657
  title: Information Exposure
  description: |
    [symfony/symfony][1] is a The Symfony PHP framework.

    Affected versions of this package are vulnerable to Information
    Exposure. When using the scalar type hint string in a setter method of a
    class that’s the data\_class of a form, and when a file upload is
    submitted to the corresponding field instead of a normal text input,
    then the `UploadedFile::__toString()` function is called which will then
    return and disclose the path of the uploaded file.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.38  <2.7.50"
  - ">=2.8.0  <2.8.49"
  - ">=3.0.0  <3.4.20"
  - ">=4.0.0  <4.0.15"
  - ">=4.1.0  <4.1.9"
  - ">=4.2.0  <4.2.1"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-19789
  cwe:
  - CWE-200
  disclosed_date: 2018-12-07
  created_date: 2018-12-10
  last_modified_date: 2018-12-10
  credit:
  - David Gorges
  references:
  - https://symfony.com/cve-2018-19789
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72657
- id: snykio:packagist:symfony/symfony:72660
  title: Open Redirect
  description: |
    [symfony/symfony][1] is a PHP framework for web applications and a set
    of reusable PHP components.

    Affected versions of this package are vulnerable to Open Redirect. An
    attacker could redirect the user to any domain after login while using
    backslashes in the `_failure_path` input field of login form.



    [1]: https://packagist.org/packages/symfony/symfony
  affected_package: symfony/symfony
  vulnerable_versions:
  - ">=2.7.0  <2.7.50"
  - ">=2.8.0  <2.8.49"
  - ">=3.0.0  <3.4.20"
  - ">=4.0.0  <4.0.15"
  - ">=4.1.0  <4.1.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-19790
  cwe:
  - CWE-601
  disclosed_date: 2018-12-07
  created_date: 2018-12-10
  last_modified_date: 2018-12-10
  credit:
  - Unknown
  references:
  - https://symfony.com/cve-2018-19790
  source_url: https://snyk.io/vuln/SNYK-PHP-SYMFONYSYMFONY-72660
