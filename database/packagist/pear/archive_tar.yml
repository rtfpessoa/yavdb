---
- id: friendsofphp:packagist:pear/archive_tar:CVE-2018-1000888
  title: Potential RCE if filename starts with phar://
  affected_package: pear/archive_tar
  vulnerable_versions:
  - "<1.4.4"
  package_manager: packagist
  cve:
  - CVE-2018-1000888
  disclosed_date: 2018-12-20
  created_date: 2018-12-20
  last_modified_date: 2018-12-20
  credit:
  - FriendsOfPHP
  references:
  - https://pear.php.net/bugs/bug.php?id=23782
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/pear/archive_tar/CVE-2018-1000888.yaml
- id: snykio:packagist:pear/archive_tar:1042147
  title: Deserialization of Untrusted Data
  description: |
    [pear/archive\_tar][1] is a Tar file management class with compression
    support (gzip, bzip2, lzma2)

    Affected versions of this package are vulnerable to Deserialization of
    Untrusted Data because the `PHAR:` (as opposed to `phar:`) is not
    blacklisted.



    [1]: https://github.com/pear/Archive_Tar
    \nSerialization is a process of converting an object into a sequence of
    bytes which can be persisted to a disk or database or can be sent
    through streams. The reverse process of creating object from sequence of
    bytes is called deserialization. Serialization is commonly used for
    communication (sharing objects between multiple hosts) and persistence
    (store the object state in a file or a database). It is an integral part
    of popular protocols like *Remote Method Invocation (RMI)*, *Java
    Management Extension (JMX)*, *Java Messaging System (JMS)*, *Action
    Message Format (AMF)*, *Java Server Faces (JSF) ViewState*, etc.

    *Deserialization of untrusted data* ([CWE-502][1]), is when the
    application deserializes untrusted data without sufficiently verifying
    that the resulting data will be valid, letting the attacker to control
    the state or the flow of the execution.

    Java deserialization issues have been known for years. However, interest
    in the issue intensified greatly in 2015, when classes that could be
    abused to achieve remote code execution were found in a [popular library
    (Apache Commons Collection)][2]. These classes were used in zero-days
    affecting IBM WebSphere, Oracle WebLogic and many other products.

    An attacker just needs to identify a piece of software that has both a
    vulnerable class on its path, and performs deserialization on untrusted
    data. Then all they need to do is send the payload into the
    deserializer, getting the command executed.

    > Developers put too much trust in Java Object Serialization. Some even
    > de-serialize objects pre-authentication. When deserializing an Object
    > in Java you typically cast it to an expected type, and therefore
    > Java\'s strict type system will ensure you only get valid object
    > trees. Unfortunately, by the time the type checking happens, platform
    > code has already created and executed significant logic. So, before
    > the final type is checked a lot of code is executed from the
    > readObject() methods of various objects, all of which is out of the
    > developer\'s control. By combining the readObject() methods of various
    > classes which are available on the classpath of the vulnerable
    > application an attacker can execute functions (including calling
    > Runtime.exec() to execute local OS commands).

    * Apache Blog



    [1]: https://cwe.mitre.org/data/definitions/502.html
    [2]: https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078
  affected_package: pear/archive_tar
  vulnerable_versions:
  - "<1.4.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2020-28948
  cwe:
  - CWE-502
  disclosed_date: 2020-11-20
  created_date: 2020-11-20
  last_modified_date: 2020-11-20
  credit:
  - xorathustra
  references:
  - https://github.com/pear/Archive_Tar/issues/33
  source_url: https://snyk.io/vuln/SNYK-PHP-PEARARCHIVETAR-1042147
- id: snykio:packagist:pear/archive_tar:1042148
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[pear/archive\\_tar][1] is a Tar file management class with compression\nsupport
    (gzip, bzip2, lzma2)\n\nAffected versions of this package are vulnerable to Arbitrary
    File Write\nvia Archive Extraction (Zip Slip). It has `://` filename sanitisation\nonly
    to address PHAR attacks, and thus any other stream-wrapper attack\n(such as `file://`
    to overwrite files) can still succeed.\n\n\n\n[1]: https://github.com/pear/Archive_Tar\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: pear/archive_tar
  vulnerable_versions:
  - "<1.4.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2020-28949
  cwe:
  - CWE-29
  disclosed_date: 2020-11-20
  created_date: 2020-11-20
  last_modified_date: 2020-11-20
  credit:
  - xorathustra
  references:
  - https://github.com/pear/Archive_Tar/issues/33
  source_url: https://snyk.io/vuln/SNYK-PHP-PEARARCHIVETAR-1042148
- id: snykio:packagist:pear/archive_tar:73509
  title: Remote Code Execution (RCE)
  description: |
    [pear/archive\_tar][1] is a Tar file management class with compression
    support (gzip, bzip2, lzma2)

    Affected versions of this package are vulnerable to Remote Code
    Execution (RCE). Filenames that start with `phar://` are vulnerable.



    [1]: https://github.com/pear/Archive_Tar
  affected_package: pear/archive_tar
  vulnerable_versions:
  - "<1.4.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-1000888
  cwe:
  - CWE-94
  disclosed_date: 2018-12-28
  created_date: 2019-01-15
  last_modified_date: 2019-01-15
  credit:
  - mrook
  references:
  - https://github.com/pear/Archive_Tar/commit/59ace120ac5ceb5f0d36e40e48e1884de1badf76
  - https://pear.php.net/bugs/bug.php?id=23782
  - https://www.exploit-db.com/exploits/46108
  source_url: https://snyk.io/vuln/SNYK-PHP-PEARARCHIVETAR-73509
