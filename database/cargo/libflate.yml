---
- id: rustsec:cargo:libflate:RUSTSEC-2019-0010
  title: MultiDecoder::read() drops uninitialized memory of arbitrary type on panic
    in client code
  description: |
    Affected versions of libflate have set a field of an internal structure with a generic type to an uninitialized value in `MultiDecoder::read()` and reverted it to the original value after the function completed. However, execution of `MultiDecoder::read()` could be interrupted by a panic in caller-supplied `Read` implementation. This would cause `drop()` to be called on uninitialized memory of a generic type implementing `Read`.

    This is equivalent to a use-after-free vulnerability and could allow an attacker to gain arbitrary code execution.

    The flaw was corrected by aborting immediately instead of unwinding the stack in case of panic within `MultiDecoder::read()`. The issue was discovered and fixed by Shnatsel.
  affected_package: libflate
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: cargo
  cve:
  - CVE-2019-15552
  disclosed_date: 2019-07-04
  created_date: 2019-07-04
  last_modified_date: 2019-07-04
  credit:
  - RustSec
  references:
  - https://github.com/sile/libflate/issues/35
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/libflate/RUSTSEC-2019-0010.toml
