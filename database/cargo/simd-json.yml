---
- id: rustsec:cargo:simd-json:RUSTSEC-2019-0008
  title: Flaw in string parsing can lead to crashes due to invalid memory access.
  description: |
    The affected version of this crate did not guard against accessing memory
    beyond the range of its input data. A pointer cast to read the data into
    a 256-bit register could lead to a segmentation fault when the end plus
    the 32 bytes (256 bit) read would overlap into the next page during string
    parsing.

    ```
    page   |  ...  page 1  ...  | ... page 2  ... |
    data   | x[n * 32 byte]xx__ |                 |
    access | ..][ 32 byte ]     |                 |
    segflt |               [ 32 | byte ]          |
    ```

    This allows an attacker to eventually crash a service.

    The flaw was corrected by using a padding buffer for the last read from the
    input. So that we are we never read over the boundary of the input data.
  affected_package: simd-json
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: cargo
  cve:
  - CVE-2019-15550
  disclosed_date: 2019-06-24
  created_date: 2019-06-24
  last_modified_date: 2019-06-24
  credit:
  - RustSec
  references:
  - https://github.com/Licenser/simdjson-rs/pull/27
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/simd-json/RUSTSEC-2019-0008.toml
