---
- id: rustsec:cargo:smallvec:RUSTSEC-2018-0003
  title: Possible double free during unwinding in SmallVec::insert_many
  description: |
    If an iterator passed to `SmallVec::insert_many` panicked in `Iterator::next`,
    destructors were run during unwinding while the vector was in an inconsistent
    state, possibly causing a double free (a destructor running on two copies of
    the same value).

    This is fixed in smallvec 0.6.3 by ensuring that the vector's length is not
    updated to include moved items until they have been removed from their
    original positions.  Items may now be leaked if `Iterator::next` panics, but
    they will not be dropped more than once.

    Thank you to @Vurich for reporting this bug.
  affected_package: smallvec
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: cargo
  cve:
  - CVE-2018-20991
  disclosed_date: 2018-07-19
  created_date: 2018-07-19
  last_modified_date: 2018-07-19
  credit:
  - RustSec
  references:
  - https://github.com/servo/rust-smallvec/issues/96
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/smallvec/RUSTSEC-2018-0003.toml
- id: rustsec:cargo:smallvec:RUSTSEC-2019-0009
  title: Double-free and use-after-free in SmallVec::grow()
  description: |
    Attempting to call `grow` on a spilled SmallVec with a value equal to the current capacity causes it to free the existing data. This performs a double free immediately and may lead to use-after-free on subsequent accesses to the SmallVec contents.

    An attacker that controls the value passed to `grow` may exploit this flaw to obtain memory contents or gain remote code execution.

    Credits to @ehuss for discovering, reporting and fixing the bug.
  affected_package: smallvec
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: cargo
  cve:
  - CVE-2019-15551
  disclosed_date: 2019-06-06
  created_date: 2019-06-06
  last_modified_date: 2019-06-06
  credit:
  - RustSec
  references:
  - https://github.com/servo/rust-smallvec/issues/148
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/smallvec/RUSTSEC-2019-0009.toml
- id: rustsec:cargo:smallvec:RUSTSEC-2019-0012
  title: Memory corruption in SmallVec::grow()
  description: |
    Attempting to call `grow` on a spilled SmallVec with a value less than the current capacity causes corruption of memory allocator data structures.

    An attacker that controls the value passed to `grow` may exploit this flaw to obtain memory contents or gain remote code execution.

    Credits to @ehuss for discovering, reporting and fixing the bug.
  affected_package: smallvec
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: cargo
  cve:
  - CVE-2019-15554
  disclosed_date: 2019-07-19
  created_date: 2019-07-19
  last_modified_date: 2019-07-19
  credit:
  - RustSec
  references:
  - https://github.com/servo/rust-smallvec/issues/149
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/smallvec/RUSTSEC-2019-0012.toml
