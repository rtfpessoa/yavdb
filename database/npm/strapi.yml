---
- id: npmjs:npm:strapi:1311
  title: Privilege Escalation
  description: Versions of `strapi` prior to 3.0.0-beta.17.5 are vulnerable to Privilege
    Escalation. The password reset routes allows an unauthenticated attacker to reset
    an admin's password without providing a valid password reset token.
  affected_package: strapi
  vulnerable_versions:
  - ">=3.0.0-alpha.4.3 <=3.0.0-alpha.26.2"
  - ">=3.0.0-beta.0 <3.0.0-beta.17.5"
  - ">=3.0.0-next.0 <=3.0.0-next.31"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-18818
  cwe: CWE-284
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Atlassian Security Team
- id: npmjs:npm:strapi:1424
  title: Command Injection
  description: Versions of `strapi` before 3.0.0-beta.17.8 are vulnerable to Command
    Injection. The package fails to sanitize plugin names in the `/admin/plugins/install/`
    route. This may allow an authenticated attacker with admin privileges to run arbitrary
    commands in the server.
  affected_package: strapi
  vulnerable_versions:
  - "<3.0.0-beta.17.8"
  severity: high
  package_manager: npm
  cwe: CWE-78
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: AP
- id: snykio:npm:strapi:480418
  title: Improper Access Control
  description: |
    [strapi][1] is a HTTP layer sits on top of Koa.

    Affected versions of this package are vulnerable to Improper Access
    Control. It mishandles password resets within
    `packages/strapi-admin/controllers/Auth.js` and
    `packages/strapi-plugin-users-permissions/controllers/Auth.js`.



    [1]: https://www.npmjs.com/package/strapi
  affected_package: strapi
  vulnerable_versions:
  - "<3.0.0-beta.17.5"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-18818
  cwe:
  - CWE-284
  disclosed_date: 2019-11-04
  created_date: 2019-11-10
  last_modified_date: 2019-11-10
  credit:
  - brianadeloye
  references:
  - https://github.com/strapi/strapi/pull/4443
  source_url: https://snyk.io/vuln/SNYK-JS-STRAPI-480418
- id: snykio:npm:strapi:536641
  title: Arbitrary Code Injection
  description: |
    [strapi][1] is a HTTP layer sits on top of Koa.

    Affected versions of this package are vulnerable to Arbitrary Code
    Injection. The package fails to sanitize plugin names in the
    `/admin/plugins/install/` route. This may allow an authenticated
    attacker with admin privileges to run arbitrary commands in the server.



    [1]: https://www.npmjs.com/package/strapi
  affected_package: strapi
  vulnerable_versions:
  - "<3.0.0-beta.17.8"
  severity: high
  package_manager: npm
  cwe:
  - CWE-94
  disclosed_date: 2019-12-03
  created_date: 2019-12-04
  last_modified_date: 2019-12-04
  credit:
  - AP
  references:
  - https://bittherapy.net/post/strapi-framework-remote-code-execution/
  - https://github.com/strapi/strapi/pull/4636
  - https://www.npmjs.com/advisories/1424
  source_url: https://snyk.io/vuln/SNYK-JS-STRAPI-536641
- id: snykio:npm:strapi:543624
  title: Denial of Service (DoS)
  description: |+
    [strapi][1] is a HTTP layer sits on top of Koa.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). The sanitisation regex in `installPlugin` and `uninstallPlugin`
    handler functions for the admin panel allows the dash `-` character.
    Using this attacker can pass valid arguments like `-h`, `-v`, `--help`
    which will be passed to `execa()` and can lead to a server restart.



    [1]: https://www.npmjs.com/package/strapi
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: strapi
  vulnerable_versions:
  - "<3.0.0-beta.18.4"
  severity: low
  package_manager: npm
  cve:
  - CVE-2020-8123
  cwe:
  - CWE-400
  disclosed_date: 2020-01-28
  created_date: 2020-01-29
  last_modified_date: 2020-01-29
  credit:
  - princechaddha
  references:
  - https://hackerone.com/reports/768574
  source_url: https://snyk.io/vuln/SNYK-JS-STRAPI-543624
