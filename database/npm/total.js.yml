---
- id: npmjs:npm:total.js:1026
  title: Path Traversal
  description: "Affected versions of `total.js` are vulnerable to Path Traversal.
    \ Due to insufficient input sanitization in URLs, attackers can access server
    files outside the `/public` folder by using relative paths.  \nThe files served
    are limited to these file types: `flac`, `jpg`, `jpeg`, `png`, `gif`, `ico`, `js`,
    `css`, `txt`, `xml`, `woff`, `woff2`, `otf`, `ttf`, `eot`, `svg`, `zip`, `rar`,
    `pdf`, `docx`, `xlsx`, `doc`, `xls`, `html`, `htm`, `appcache`, `manifest`, `map`,
    `ogv`, `ogg`, `mp4`, `mp3`, `webp`, `webm`, `swf`, `package`, `json`, `md`, `m4v`,
    `jsx`, `heif`, `heic`."
  affected_package: total.js
  vulnerable_versions:
  - "<2.1.1"
  - ">=2.2.0 <2.2.1"
  - ">=2.3.0 <2.3.1"
  - ">=2.4.0 <2.4.1"
  - ">=2.5.0 <2.5.1"
  - ">=2.6.0 <2.6.3"
  - ">=2.7.0 <2.7.1"
  - ">=2.8.0 <2.8.1"
  - ">=2.9.0 <2.9.5"
  - ">=3.0.0 <3.0.1"
  - ">=3.1.0 <3.1.1"
  - ">=3.2.0 <3.2.4"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-8903
  cwe: CWE-22
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Krauter Riccardo
  references: https://npmjs.com/advisories/1026
  source_url: https://npmjs.com/advisories/1026
- id: snykio:npm:total.js:173710
  title: Directory Traversal
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Directory Traversal
    via the `F.$requestcontinue` function.

    An attacker can include file contents from outside the /public directory
    (the default directory for accessible static files). The vulnerability
    is mitigated by only having a list of many extension that are triggering
    the file read (that\'s why for example, an attacker will not be able to
    read the content of `/etc/passwd`).

    *Note: The first two commits are attempts to fix the vulnerability, and
    the third one actually fixes.*



    [1]: https://www.npmjs.com/package/total.js
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: total.js
  vulnerable_versions:
  - ">=2.1.0 <2.1.1"
  - ">=2.2.0 <2.2.1"
  - ">=2.3.0 <2.3.1"
  - ">=2.4.0 <2.4.1"
  - ">=2.5.0 <2.5.1"
  - ">=2.6.0 <2.6.3"
  - ">=2.7.0 <2.7.1"
  - ">=2.8.0 <2.8.1"
  - ">=2.9.0 <2.9.5"
  - ">=3.0.0 <3.0.1"
  - ">=3.1.0 <3.1.1"
  - ">=3.2.0 <3.2.4"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-8903
  cwe:
  - CWE-22
  disclosed_date: 2019-02-18
  created_date: 2019-02-20
  last_modified_date: 2019-02-20
  credit:
  - Krauter Riccardo
  references:
  - https://github.com/totaljs/framework/commit/4d7abbcdc34d6d1287338936f418c1eb1bc41201
  - https://github.com/totaljs/framework/commit/c37cafbf3e379a98db71c1125533d1e8d5b5aef7
  - https://github.com/totaljs/framework/commit/de16238d13848149f5d1dae51f54e397a525932b
  - https://www.npmjs.com/advisories/1026
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-173710
- id: snykio:npm:total.js:461096
  title: Improper Access Control
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Improper Access
    Control. An authenticated user with limited privileges can get access to
    a resource that they do not own by calling the associated API. The
    application correctly manages privileges only for the front-end resource
    path, and not for API requests. This leads to vertical and horizontal
    privilege escalation.



    [1]: https://www.npmjs.com/package/total.js
  affected_package: total.js
  vulnerable_versions:
  - ">=3.1.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-15953
  cwe:
  - CWE-284
  disclosed_date: 2019-09-05
  created_date: 2019-09-05
  last_modified_date: 2019-09-05
  credit:
  - Riccardo Krauter
  references:
  - https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf
  - https://seclists.org/fulldisclosure/2019/Sep/6
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-461096
- id: snykio:npm:total.js:461097
  title: Directory Traversal
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Directory Traversal.
    An authenticated user with the `Pages` privilege can conduct a path
    traversal attack `(../)` to include `.html` files that are outside the
    permitted directory.



    [1]: https://www.npmjs.com/package/total.js
  affected_package: total.js
  vulnerable_versions:
  - ">=3.1.0 <3.4.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-15952
  cwe:
  - CWE-23
  disclosed_date: 2019-09-05
  created_date: 2019-09-05
  last_modified_date: 2019-09-05
  credit:
  - Riccardo Krauter
  references:
  - https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf
  - https://github.com/totaljs/framework/commit/fa6a0d7e3c256ae9b892a30273c5fe77fc99ffb5
  - https://github.com/totaljs/framework/releases/tag/v3.4.0
  - https://seclists.org/fulldisclosure/2019/Sep/2
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-461097
- id: snykio:npm:total.js:461098
  title: Improper Authentication
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Improper
    Authentication via cookie enumeration. A low privilege user can perform
    a simple transformation of a cookie to obtain the random values inside
    it. If an attacker can discover a session cookie owned by an admin, then
    it is possible to brute force it with `O(n)=2n` instead of `O(n)=n^x`
    complexity, and steal the admin password.



    [1]: https://www.npmjs.com/package/total.js
  affected_package: total.js
  vulnerable_versions:
  - ">=3.1.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-15955
  cwe:
  - CWE-287
  disclosed_date: 2019-09-05
  created_date: 2019-09-05
  last_modified_date: 2019-09-05
  credit:
  - Riccardo Krauter
  references:
  - https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf
  - https://seclists.org/fulldisclosure/2019/Sep/3
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-461098
- id: snykio:npm:total.js:461099
  title: Remote Code Execution (RCE)
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Remote Code
    Execution (RCE). It is possible for an attacker to create a malicious
    widget with a special tag containing JavaScript code which will then be
    evaluated application.

    ### PoC by Riccardo Krauter   {#poc-by-riccardo-krauter}

    `<script
    total>global.process.mainModule.require(child_process).exec(RCE);</script>`.



    [1]: https://www.npmjs.com/package/total.js
  affected_package: total.js
  vulnerable_versions:
  - ">=3.1.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-15954
  cwe:
  - CWE-94
  disclosed_date: 2019-09-05
  created_date: 2019-09-05
  last_modified_date: 2019-09-05
  credit:
  - Riccardo Krauter
  references:
  - https://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf
  - https://seclists.org/fulldisclosure/2019/Sep/5
  - https://www.exploit-db.com/exploits/47531
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-461099
- id: snykio:npm:total.js:537824
  title: Directory Traversal
  description: |
    [total.js][1] is a framework for Node.js platfrom written in pure
    JavaScript similar to PHP\'s Laravel or Python\'s Django or ASP.NET MVC.
    It can be used as web, desktop, service or IoT application.

    Affected versions of this package are vulnerable to Directory Traversal
    due to `req.uri.pathname` not being validated within `total.js`
    framework.



    [1]: https://www.npmjs.com/package/total.js
  affected_package: total.js
  vulnerable_versions:
  - "<3.3.3"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-22
  disclosed_date: 2019-12-13
  created_date: 2020-01-09
  last_modified_date: 2020-01-09
  credit:
  - Unknown
  references:
  - https://github.com/totaljs/framework/commit/fa6a0d7e3c256ae9b892a30273c5fe77fc99ffb5
  - https://hackerone.com/reports/748765
  source_url: https://snyk.io/vuln/SNYK-JS-TOTALJS-537824
