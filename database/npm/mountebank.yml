---
- id: snykio:npm:mountebank:1014526
  title: Directory Traversal
  description: |
    [mountebank][1] is an Over the wire test doubles

    Affected versions of this package are vulnerable to Directory Traversal
    via the URL.



    [1]: https://www.npmjs.com/package/mountebank
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: mountebank
  vulnerable_versions:
  - "<2.3.2"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-22
  disclosed_date: 2020-09-30
  created_date: 2020-09-30
  last_modified_date: 2020-09-30
  credit:
  - dcRUSTy
  references:
  - https://github.com/bbyars/mountebank/commit/b4e1c19cb9b43bab137f9045160efc4335ca43bb
  - https://github.com/bbyars/mountebank/issues/567
  source_url: https://snyk.io/vuln/SNYK-JS-MOUNTEBANK-1014526
- id: snykio:npm:mountebank:1014529
  title: Resource Exhaustion
  description: |
    [mountebank][1] is an Over the wire test doubles

    Affected versions of this package are vulnerable to Resource Exhaustion.
    IP whitelisting CLI parameters (`--localOnly` and `--ipWhiteList`) were
    not killing the server end of the socket. In practice, this meant that
    even though the client connection was killed, the server operation (e.g.
    creating an imposter) would still succeed. This release ensures that
    both ends of the socket are immediately closed if the connection
    originates from an invalid IP address.



    [1]: https://www.npmjs.com/package/mountebank
  affected_package: mountebank
  vulnerable_versions:
  - "<2.3.1"
  severity: high
  package_manager: npm
  cwe:
  - CWE-772
  disclosed_date: 2020-09-30
  created_date: 2020-09-30
  last_modified_date: 2020-09-30
  credit:
  - Unknown
  references:
  - https://github.com/bbyars/mountebank/commit/65f583c521bf3828a7c53037b2795a4ff5269820
  - https://github.com/bbyars/mountebank/commit/c3d5383bc7d3f5c9717bcc6c19482e4dc6e96e12
  source_url: https://snyk.io/vuln/SNYK-JS-MOUNTEBANK-1014529
- id: snykio:npm:mountebank:1021889
  title: Cross-site Request Forgery (CSRF)
  description: |
    [mountebank][1] is an Over the wire test doubles

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). `CORS` was enabled for all origins, which allows a
    malicious site to potentially execute remote code through JavaScript
    injection.



    [1]: https://www.npmjs.com/package/mountebank
  affected_package: mountebank
  vulnerable_versions:
  - "<2.3.3"
  severity: high
  package_manager: npm
  cwe:
  - CWE-352
  disclosed_date: 2020-10-25
  created_date: 2020-10-25
  last_modified_date: 2020-10-25
  credit:
  - bbyars
  references:
  - https://github.com/bbyars/mountebank/blob/master/src/views/releases/v2.3.3.ejs
  - https://github.com/bbyars/mountebank/commit/f1c453ab8b744d08a561c346c3a034738eefc0b4
  source_url: https://snyk.io/vuln/SNYK-JS-MOUNTEBANK-1021889
