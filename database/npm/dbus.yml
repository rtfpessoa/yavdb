---
- id: snykio:npm:dbus:540502
  title: XML External Entity (XXE) Injection
  description: |+
    [dbus][1] is a D-Bus binding for Node.js

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. The attack exists because XML parser does not validate
    and handle the XML names input with large number of colons, consuming
    high CPU and memory.



    [1]: https://github.com/Shouqun/node-dbus
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: dbus
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-20843
  cwe:
  - CWE-611
  disclosed_date: 2019-05-22
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Unknown
  references:
  - https://github.com/libexpat/libexpat/blob/R_2_2_7/expat/Changes
  - https://github.com/libexpat/libexpat/issues/186
  - https://github.com/libexpat/libexpat/pull/262
  - https://github.com/libexpat/libexpat/pull/262/commits/11f8838bf99ea0a6f0b76f9760c43704d00c4ff6
  source_url: https://snyk.io/vuln/SNYK-JS-DBUS-540502
- id: snykio:npm:dbus:540504
  title: Buffer Over-read
  description: |+
    [dbus][1] is a D-Bus binding for Node.js

    Affected versions of this package are vulnerable to Buffer Over-read.
    Crafted XML input can fool the parser into changing from DTD parsing to
    document parsing too early; a consecutive call to
    `XML_GetCurrentLineNumber` (or `XML_GetCurrentColumnNumber`) then
    results in a heap-based buffer over-read.



    [1]: https://github.com/Shouqun/node-dbus
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: dbus
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: npm
  cve:
  - CVE-2019-15903
  cwe:
  - CWE-611
  disclosed_date: 2019-08-26
  created_date: 2020-01-03
  last_modified_date: 2020-01-03
  credit:
  - yuweol
  references:
  - https://github.com/libexpat/libexpat/commit/c20b758c332d9a13afbbb276d30db1d183a85d43
  - https://github.com/libexpat/libexpat/issues/317
  - https://github.com/libexpat/libexpat/pull/318
  source_url: https://snyk.io/vuln/SNYK-JS-DBUS-540504
