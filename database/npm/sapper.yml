---
- id: npmjs:npm:sapper:1494
  title: Path Traversal
  description: "Versions of `sapper` prior to 0.27.11 are vulnerable to Path Traversal.
    It is possible to access sensitive files on the server through HTTP requests containing
    URL-encoded `../`.  \n\nYou may test a `sapper` application running in prod mode
    with `curl -vvv http://localhost:3000/client/750af05c3a69ddc6073a/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/etc/passwd`."
  affected_package: sapper
  vulnerable_versions:
  - "<0.27.11"
  severity: high
  package_manager: npm
  cwe: CWE-23
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Andrea Villa
- id: snykio:npm:sapper:561051
  title: Directory Traversal
  description: |
    [sapper][1] is a framework for building high-performance universal web
    apps.

    Affected versions of this package are vulnerable to Directory Traversal.
    when serving `/client/...` files.

    \###PoC by Daniel Thompson:

        curl https://vulnerable.server.com/client/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/etc/passwd

    \##Details: A Directory Traversal attack (also known as path traversal)
    aims to access files and directories that are stored outside the
    intended folder. By manipulating files with \"dot-dot-slash (../)\"
    sequences and its variations, or by using absolute file paths, it may be
    possible to access arbitrary files and directories stored on file
    system, including application source code, configuration, and other
    critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][2]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://www.npmjs.com/package/sapper
    [2]: https://snyk.io/vuln/npm:st:20140206
  affected_package: sapper
  vulnerable_versions:
  - "<0.27.11"
  severity: high
  package_manager: npm
  cwe:
  - CWE-23
  disclosed_date: 2020-03-24
  created_date: 2020-03-24
  last_modified_date: 2020-03-24
  credit:
  - Unknown
  references:
  - https://github.com/sveltejs/sapper/commit/63ffe9043170fbed8a5d260decfdc05e4440a555
  source_url: https://snyk.io/vuln/SNYK-JS-SAPPER-561051
- id: snykio:npm:sapper:572858
  title: Path Traversal
  description: |
    [sapper][1] is a framework for building high-performance universal web
    apps.

    Affected versions of this package are vulnerable to Path Traversal. It
    allows an attacker to simply obain arbitrary files from the remote
    server, exploiting a simple path traversal using URL-encoded \"../\".



    [1]: https://www.npmjs.com/package/sapper
  affected_package: sapper
  vulnerable_versions:
  - "<0.27.11"
  severity: high
  package_manager: npm
  cwe:
  - CWE-19
  disclosed_date: 2020-06-18
  created_date: 2020-06-19
  last_modified_date: 2020-06-19
  credit:
  - anvikha
  source_url: https://snyk.io/vuln/SNYK-JS-SAPPER-572858
