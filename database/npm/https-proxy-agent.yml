---
- id: npmjs:npm:https-proxy-agent:1184
  title: Machine-In-The-Middle
  description: Versions of `https-proxy-agent` prior to 2.2.3 are vulnerable to Machine-In-The-Middle.
    The package fails to enforce TLS on the socket if the proxy server responds the
    to the request with a HTTP status different than 200. This allows an attacker
    with access to the proxy server to intercept unencrypted communications, which
    may include sensitive information such as credentials.
  affected_package: https-proxy-agent
  vulnerable_versions:
  - "<2.2.3"
  severity: high
  package_manager: npm
  cwe: CWE-300
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Kris Adler
- id: npmjs:npm:https-proxy-agent:593
  title: Denial of Service
  description: Versions of `https-proxy-agent` before 2.2.0 are vulnerable to denial
    of service. This is due to unsanitized options (proxy.auth) being passed to `Buffer()`.
  affected_package: https-proxy-agent
  vulnerable_versions:
  - "<=2.1.1"
  severity: high
  package_manager: npm
  cwe: CWE-20
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Сковорода Никита Андреевич
- id: snykio:npm:https-proxy-agent:20180402
  title: Uninitialized Memory Exposure
  description: |+
    [`https-proxy-agent`][1] provides an http.Agent implementation that
    connects to a specified HTTP or HTTPS proxy server, and can be used with
    the built-in https module.

    Affected versions of this package are vulnerable to Uninitialized Memory
    Exposure and Denial of Service (DoS) attacks due to passing unsanitized
    options to Buffer(arg).



    [1]: https://www.npmjs.com/package/https-proxy-agent
    \nThe Buffer class on Node.js is a mutable array of binary data, and can
    be initialized with a string, array or number.

        const buf1 = new Buffer([1,2,3]);
        // creates a buffer containing [01, 02, 03]
        const buf2 = new Buffer('test');
        // creates a buffer containing ASCII bytes [74, 65, 73, 74]
        const buf3 = new Buffer(10);
        // creates a buffer of length 10
    {: .language-js}

    The first two variants simply create a binary representation of the
    value it received. The last one, however, pre-allocates a buffer of the
    specified size, making it a useful buffer, especially when reading data
    from a stream. When using the number constructor of Buffer, it will
    allocate the memory, but will not fill it with zeros. Instead, the
    allocated buffer will hold whatever was in memory at the time. If the
    buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive
    information like keys, source code, and system info.

  affected_package: https-proxy-agent
  vulnerable_versions:
  - "<2.2.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-3736
  - CVE-2018-3739
  cwe:
  - CWE-399
  disclosed_date: 2018-04-02
  created_date: 2018-04-08
  last_modified_date: 2018-04-08
  credit:
  - ChALkeR
  references:
  - https://hackerone.com/reports/319532
  source_url: https://snyk.io/vuln/npm:https-proxy-agent:20180402
- id: snykio:npm:https-proxy-agent:469131
  title: Man-in-the-Middle (MitM)
  description: "[https-proxy-agent][1] is a module that provides an http.Agent\nimplementation
    that connects to a specified HTTP or HTTPS proxy server,\nand can be used with
    the built-in https module.\n\nAffected versions of this package are vulnerable
    to Man-in-the-Middle\n(MitM). When targeting a HTTP proxy, `https-proxy-agent`
    opens a socket\nto the proxy, and sends the proxy server a `CONNECT` request.
    If the\nproxy server responds with something other than a HTTP response `200`,\n`https-proxy-agent`
    incorrectly returns the socket without any TLS\nupgrade. This request data may
    contain basic auth credentials or other\nsecrets, is sent over an unencrypted
    connection. A suitably positioned\nattacker could steal these secrets and impersonate
    the client.\n\n### PoC by Kris Adler   {#poc-by-kris-adler}\n\n    var url = require('url');\n
    \   var https = require('https');\n    var HttpsProxyAgent = require('https-proxy-agent');\n
    \   \n    var proxyOpts = url.parse('http://127.0.0.1:80');\n    var opts = url.parse('https://www.google.com');\n
    \   var agent = new HttpsProxyAgent(proxyOpts);\n    opts.agent = agent;\n    opts.auth
    = 'username:password';\n    https.get(opts);\n\n\n\n[1]: https://github.com/TooTallNate/node-https-proxy-agent#readme\n"
  affected_package: https-proxy-agent
  vulnerable_versions:
  - "<2.2.3"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-300
  disclosed_date: 2019-09-25
  created_date: 2019-10-02
  last_modified_date: 2019-10-02
  credit:
  - Kris Adler
  references:
  - https://github.com/TooTallNate/node-https-proxy-agent/commit/36d8cf509f877fa44f4404fce57ebaf9410fe51b
  - https://github.com/TooTallNate/node-https-proxy-agent/pull/77
  - https://hackerone.com/reports/541502
  source_url: https://snyk.io/vuln/SNYK-JS-HTTPSPROXYAGENT-469131
