---
- id: npmjs:npm:jwt-simple:831
  title: Signature Verification Bypass
  description: Versions of `jwt-simple` prior to 0.5.3 are vulnerable to Signature
    Verification Bypass. If no algorithm is specified in the `decode()` function,
    the packages uses the algorithm in the JWT to decode tokens. This allows an attacker
    to create a HS256 (symmetric algorithm) JWT with the server's public key as secret,
    and the package will verify it as HS256 instead of RS256 (asymmetric algorithm).
  affected_package: jwt-simple
  vulnerable_versions:
  - "<0.5.3"
  severity: high
  package_manager: npm
  cwe: CWE-358
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Daniel Gunawan
- id: npmjs:npm:jwt-simple:87
  title: Forgeable Public/Private Tokens
  description: 'Affected versions of the `jwt-simple` package allow users to select
    what algorithm the server will use to verify a provided JWT. A malicious actor
    can use this behaviour to arbitrarily modify the contents of a JWT while still
    passing verification. For the common use case of the JWT, the end result is a
    complete authentication bypass with minimal effort.

'
  affected_package: jwt-simple
  vulnerable_versions:
  - "<=0.3.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2016-10555
  cwe: CWE-310
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Theofanis Katsimpas
- id: ossindex:npm:jwt-simple:8405000446
  title: Forgeable Public/Private Tokens
  description: "> Since \"algorithm\" isn't enforced in jwt.decode(), a malicious
    user could choose what algorithm is sent sent to the server. If the server is
    expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think
    the public key is actually an HMAC private key. This could be used to forge any
    data an attacker wants.\n> \n> -- [nodesecurity.io](https://nodesecurity.io/advisories/87)"
  affected_package: jwt-simple
  vulnerable_versions:
  - "<0.3.0"
  package_manager: npm
  disclosed_date: 2017-07-29
  created_date: 2017-07-29
  last_modified_date: 2017-07-30
  credit:
  - OSSIndex
  references:
  - https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/
  - https://github.com/hokaccha/node-jwt-simple/commit/ecf908a57fce953b5daf0139bcff85eca869a630
  - https://github.com/hokaccha/node-jwt-simple/issues/14
  - https://github.com/hokaccha/node-jwt-simple/pull/16
  - https://nodesecurity.io/advisories/87
  source_url: https://ossindex.net/resource/package/7014027098/vulnerabilities
- id: snykio:npm:jwt-simple:174523
  title: Signature Verification Bypass
  description: |
    [jwt-simple][1] is a JWT(JSON Web Token) encode and decode module.

    Affected versions of this package are vulnerable to Signature
    Verification Bypass. If no algorithm is specified in the `decode()`
    function, the packages uses the algorithm in the JWT to decode tokens.
    This allows an attacker to create a HS256 (symmetric algorithm) JWT with
    the server\'s public key as secret, and the package will verify it as
    HS256 instead of RS256 (asymmetric algorithm).



    [1]: https://www.npmjs.com/package/jwt-simple
  affected_package: jwt-simple
  vulnerable_versions:
  - "<0.5.3"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-358
  disclosed_date: 2019-04-24
  created_date: 2019-04-25
  last_modified_date: 2019-04-25
  credit:
  - Daniel Gunawan
  references:
  - https://github.com/hokaccha/node-jwt-simple/commit/ead36e1d687645da9c3be8befdaaef622ea33106
  - https://www.npmjs.com/advisories/831
  source_url: https://snyk.io/vuln/SNYK-JS-JWTSIMPLE-174523
- id: snykio:npm:jwt-simple:20160804
  title: Forgeable public/private tokens
  description: |
    [\'jwt-simple\'][1] is a `JSON Web Token` encode and decode module.
    Affected versions of this package are vulnerable to an Authentication
    Bypass attack, due to the \"algorithm\" not being enforced. Attackers
    are given the opportunity to choose the algorithm sent to the server and
    generate signatures with arbitrary contents. The server expects an
    asymmetric key (RSA) but is sent a symmetric key (HMAC-SHA) with RSA\'s
    public key, so instead of going through a key validation process, the
    server will think the public key is actually an HMAC private key.



    [1]: https://www.npmjs.com/package/jwt-simple
  affected_package: jwt-simple
  vulnerable_versions:
  - "<0.3.0"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2016-10555
  cwe:
  - CWE-310
  disclosed_date: 2016-08-18
  created_date: 2016-10-31
  last_modified_date: 2016-10-31
  credit:
  - Theofanis Katsimpas
  references:
  - https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/
  - https://github.com/hokaccha/node-jwt-simple/commit/957957cfa44474049b4603b293569588ee9ffd97
  - https://github.com/hokaccha/node-jwt-simple/pull/14
  - https://github.com/hokaccha/node-jwt-simple/pull/16
  source_url: https://snyk.io/vuln/npm:jwt-simple:20160804
