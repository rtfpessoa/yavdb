---
- id: npmjs:npm:call:121
  title: Route Validation Bypass
  description: "Affected versions of `call` do not validate empty parameters, which
    may result in a bypass of route validation rules. \n\n## Proof of Concept\n\nRouting
    Scheme:\n```\n/api/{param}/{param2}/details\n```\nTriggering Request Path:\n```\n/api///\n```"
  affected_package: call
  vulnerable_versions:
  - ">= 2.0.1 <3.0.2"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2016-10543
  cwe: CWE-20
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Nicolas Morel
- id: snykio:npm:call:20160705
  title: Improper input validation
  description: |
    [`call`][1] is the primary HTTP router of the [`hapi`][2] framework.

    The vulnerability arise from `undefined` values inside a path (last
    segment being an exception) making their way into components that do not
    care for values being `undefined` (eg. the database layer).

    For example, the request URI `/delete/company//` may incorrectly match a
    route looking for `/delete/company/{company}/`. By itself, the bad match
    is not a vulnerability. However, depending on the remaining logic in the
    application, such a bad match may result in skipping a protection
    mechanisms. In the above example, if the route translates to a DB delete
    command, it might delete all the companies from the db.



    [1]: https://www.npmjs.com/package/call
    [2]: https://www.npmjs.com/package/hapi
  affected_package: call
  vulnerable_versions:
  - ">=2.0.1 <3.0.2"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2016-10543
  cwe:
  - CWE-20
  disclosed_date: 2016-07-05
  created_date: 2016-07-05
  last_modified_date: 2016-07-05
  credit:
  - Nicolas Morel
  source_url: https://snyk.io/vuln/npm:call:20160705
