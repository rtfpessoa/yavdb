---
- id: npmjs:npm:adm-zip:681
  title: Arbitrary File Write via Archive Extraction
  description: Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file
    write when used to extract a specifically crafted archive that contains path traversal
    filenames (`../../file.txt` for example).
  affected_package: adm-zip
  vulnerable_versions:
  - "<0.4.9"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-1002204
  cwe: CWE-29
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: snyk security team
- id: npmjs:npm:adm-zip:994
  title: Arbitrary File Write
  description: Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file
    write when used to extract a specifically crafted archive that contains path traversal
    filenames (`../../file.txt` for example).
  affected_package: adm-zip
  vulnerable_versions:
  - "<0.4.9"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-1002204
  cwe: CWE-29
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: snyk security team
- id: snykio:npm:adm-zip:20180415
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[adm-zip][1] is a JavaScript implementation for zip data compression
    for\nNodeJS.\n\nAffected versions of this package are vulnerable to Arbitrary
    File Write\nvia Archive Extraction (Zip Slip).\n\n\n\n[1]: https://www.npmjs.com/package/adm-zip\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: adm-zip
  vulnerable_versions:
  - "<0.4.11"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-1002204
  cwe:
  - CWE-29
  disclosed_date: 2018-04-14
  created_date: 2018-05-31
  last_modified_date: 2018-05-31
  credit:
  - Alex Chapman
  - Snyk Security Research
  - SÃ©bastien Mignot
  references:
  - https://github.com/cthackers/adm-zip/commit/d01fa8c80c3a5fcf5ce1eda82d96600c62910d3f
  - https://github.com/cthackers/adm-zip/pull/212/commits/6f4dfeb9a2166e93207443879988f97d88a37cde
  - https://github.com/snyk/zip-slip-vulnerability
  - https://hackerone.com/reports/362118
  - https://snyk.io/research/zip-slip-vulnerability
  source_url: https://snyk.io/vuln/npm:adm-zip:20180415
