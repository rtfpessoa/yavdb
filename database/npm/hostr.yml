---
- id: npmjs:npm:hostr:303
  title: Directory Traversal
  description: Affected versions of `hostr` are vulnerable to directory traversal
    which allows attackers to read files outside the current directory by sending
    `../` in the url path for GET requests.
  affected_package: hostr
  vulnerable_versions:
  - "<=2.3.5"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2017-16029
  cwe: CWE-22
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Liang Gong
- id: ossindex:npm:hostr:8402342812
  title: Directory Traversal
  description: "See https://ossindex.net/resource/vulnerability/8402273320\n\n> This
    package is vulnerable to directory traversal. An attacker can provide input such
    as ```../``` to read files outside of the specified working directory.\n> \n>
    -- [github.com](https://github.com/henrytseng/hostr/issues/8)"
  affected_package: hostr
  vulnerable_versions:
  - "<2.3.6"
  package_manager: npm
  disclosed_date: 2017-01-11
  created_date: 2017-01-11
  last_modified_date: 2017-07-30
  credit:
  - OSSIndex
  references:
  - https://github.com/henrytseng/hostr/commit/789a00047459fd80b6f0a9701a1378a47fb73ba8
  - https://github.com/henrytseng/hostr/issues/8
  source_url: https://ossindex.net/resource/package/7013853494/vulnerabilities
- id: snykio:npm:hostr:20161211
  title: Directory Traversal
  description: |
    [`hostr`][1] is a simple web server for the current working directory.
    Used for hello world style web sites hosting only files in current
    directory structure. Watches files and integrates with LiveReload.
    Affected versions of the package do not filter http GET requests in
    javascript code, allowing an attacker to retrieve confidential files
    over the network by requesting urls like:
    `http://localhost:3000/../../../etc/passwd`. CURLing the same request
    will not succeed.

    Many thanks to [Liang Gong][2] for disclosing this vulnerability.



    [1]: https://www.npmjs.com/package/hostr
    [2]: https://github.com/JacksonGL
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: hostr
  vulnerable_versions:
  - "<2.3.6"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2017-16029
  cwe:
  - CWE-22
  disclosed_date: 2016-12-10
  created_date: 2016-12-20
  last_modified_date: 2016-12-20
  credit:
  - Liang Gong
  references:
  - https://github.com/henrytseng/hostr/commit/789a00047459fd80b6f0a9701a1378a47fb73ba8
  - https://github.com/henrytseng/hostr/issues/8
  source_url: https://snyk.io/vuln/npm:hostr:20161211
