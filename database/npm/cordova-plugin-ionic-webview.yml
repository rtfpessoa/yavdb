---
- id: npmjs:npm:cordova-plugin-ionic-webview:746
  title: Path Traversal
  description: Versions of `cordova-plugin-ionic-webview` prior to 2.2.0 are vulnerable
    to Path Traversal, allowing attackers access to OS local files that should be
    inaccessible by third-party applications.  The package launches a webserver listening
    on http://localhost:8080 without restricting access of the app itself, thus escaping
    the iOS application sandbox and accessing local files.
  affected_package: cordova-plugin-ionic-webview
  vulnerable_versions:
  - "<2.2.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-16202
  cwe: CWE-22
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Mitsui Bussan Secure Directions, Inc
- id: snykio:npm:cordova-plugin-ionic-webview:72900
  title: Directory Traversal
  description: |
    [cordova-plugin-ionic-webview][1] is a Web View plugin for Cordova,
    focused on providing the highest performance experience for Ionic apps
    (but can be used with any Cordova app).

    Affected versions of this package are vulnerable to Directory Traversal.
    A malicious user could access OS local files that should be inaccessible
    by third-party applications.



    [1]: https://www.npmjs.com/package/cordova-plugin-ionic-webview
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: cordova-plugin-ionic-webview
  vulnerable_versions:
  - "<2.2.0"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2018-16202
  cwe:
  - CWE-22
  disclosed_date: 2019-01-09
  created_date: 2019-01-10
  last_modified_date: 2019-01-10
  credit:
  - Mitsui Bussan
  references:
  - https://jvn.jp/en/jp/JVN69812763/index.html
  - https://www.npmjs.com/advisories/746
  source_url: https://snyk.io/vuln/SNYK-JS-CORDOVAPLUGINIONICWEBVIEW-72900
