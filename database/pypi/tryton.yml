---
- id: snykio:pypi:tryton:174115
  title: Information Exposure
  description: |
    [tryton][1] is a business software.

    Affected versions of this package are vulnerable to Information Exposure
    via the `trytond/model/modelstorage.py` path. An authenticated user
    could order records based on a field for which he had no access right.
    This may allow the user to guess these values.



    [1]: https://pypi.python.org/pypi/tryton
  affected_package: tryton
  vulnerable_versions:
  - ">= 4.2.0 < 4.2.21"
  - ">= 4.4.0 < 4.4.19"
  - ">= 4.6.0 < 4.6.14"
  - ">= 4.8.0 < 4.8.10"
  - ">= 5.0.0 < 5.0.6"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2019-10868
  cwe:
  - CWE-200
  disclosed_date: 2019-04-05
  created_date: 2019-04-07
  last_modified_date: 2019-04-07
  credit:
  - Cedric Krier
  references:
  - https://discuss.tryton.org/t/security-release-for-issue8189/1262
  - https://hg.tryton.org/trytond/rev/f58bbfe0aefb
  source_url: https://snyk.io/vuln/SNYK-PYTHON-TRYTON-174115
- id: snykio:pypi:tryton:40228
  title: Directory Traversal
  description: |
    [`tryton`][1] is a Tryton client.

    Directory traversal vulnerability in the client in Tryton 3.0.0, as
    distributed before 20131104 and earlier, allows remote servers to write
    arbitrary files via path separators in the extension of a report.



    [1]: https://pypi.python.org/pypi/tryton
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: tryton
  vulnerable_versions:
  - "< 3.0.1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2013-4510
  cwe:
  - CWE-22
  disclosed_date: 2013-11-04
  created_date: 2013-11-04
  last_modified_date: 2013-11-04
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2013/11/04/21
  - http://www.tryton.org/posts/security-release-for-issue3446.html
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4510
  source_url: https://snyk.io/vuln/SNYK-PYTHON-TRYTON-40228
- id: snykio:pypi:tryton:72631
  title: Man-in-the-Middle (MitM)
  description: |
    [tryton][1] is a three-tiers high-level general purpose application
    platform written in Python and use Postgresql as database engine.

    Affected versions of this package are vulnerable to Man in the middle
    attack. The client tried to make a connection to the bus in cleartext
    instead of encrypted under certain circumstances in `bus.py` and
    `jsonrpc.py`. This connection attempt failed, but it contained in the
    header the current session of the user. This session could then be
    stolen by a man-in-the-middle.



    [1]: https://pypi.org/project/tryton/
  affected_package: tryton
  vulnerable_versions:
  - ">= 5.0.0 < 5.0.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2018-19443
  cwe:
  - CWE-300
  disclosed_date: 2018-11-22
  created_date: 2018-11-28
  last_modified_date: 2018-11-28
  credit:
  - Cedric Krier
  references:
  - https://bugs.tryton.org/issue7792
  - https://discuss.tryton.org/t/security-release-for-issue7792/830
  source_url: https://snyk.io/vuln/SNYK-PYTHON-TRYTON-72631
