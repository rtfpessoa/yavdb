---
- id: snykio:pypi:cryptography:1022152
  title: Timing Attack
  description: |+
    Affected versions of this package are vulnerable to Timing Attack. It is
    vulnerable to Bleichenbacher timing attacks in the RSA decryption API,
    via timed processing of valid PKCS#1 v1.5 ciphertext.

  affected_package: cryptography
  vulnerable_versions:
  - ">= 0 < 3.2"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2020-25659
  cwe:
  - CWE-208
  disclosed_date: 2020-10-25
  created_date: 2020-10-27
  last_modified_date: 2020-10-27
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1889988
  - https://github.com/pyca/cryptography/commit/58494b41d6ecb0f56b7c5f05d5f5e3ca0320d494
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-1022152
- id: snykio:pypi:cryptography:40445
  title: Use of a Risky Cryptographic Algorithm
  description: |
    [`cryptography`][1] provides cryptographic recipes and primitives to
    Python developers.

    Affected versions of this package are vulnerable to Use of a Risky
    Cryptographic Algorithm. HKDF in cryptography before 1.5.2 returns an
    empty byte-string if used with a length less than
    `algorithm.digest_size`.



    [1]: https://pypi.python.org/pypi/cryptography
  affected_package: cryptography
  vulnerable_versions:
  - "< 1.5.2"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2016-9243
  cwe:
  - CWE-327
  disclosed_date: 2016-11-01
  created_date: 2016-11-01
  last_modified_date: 2016-11-01
  credit:
  - Markus Rudy
  references:
  - https://github.com/pyca/cryptography/commit/b924696b2e8731f39696584d12cceeb3aeb2d874
  - https://github.com/pyca/cryptography/issues/3211
  - https://github.com/pyca/cryptography/pull/3215
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9243
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-40445
- id: snykio:pypi:cryptography:40478
  title: TLS Truncation Attack
  description: |
    [`cryptography`][1] provides cryptographic recipes and primitives to
    Python developers.

    Affected versions of this package are vulnerable to TLS Truncation. A
    malicious user can prevent a user from fetching the parts of a message
    by inserting TCP code into a message indicating the message has
    completed.



    [1]: https://pypi.python.org/pypi/cryptography
  affected_package: cryptography
  vulnerable_versions:
  - "< 1.1"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-222
  disclosed_date: 2015-09-10
  created_date: 2015-09-10
  last_modified_date: 2015-09-10
  credit:
  - Unknown
  references:
  - https://github.com/pyca/cryptography/commit/41aabcbd2326ae154a16a1a050ee01fb9a54bd19
  - https://github.com/pyca/cryptography/pull/2334
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-40478
- id: snykio:pypi:cryptography:40720
  title: Denial of Service (DoS)
  description: |+
    Affected versions of [`cryptography`][1] are vulnerable to Denial of
    Service (DoS).

    Double free vulnerability in the dsa\_priv\_decode function in
    crypto/dsa/dsa\_ameth.c in OpenSSL 1.0.1 before 1.0.1s and 1.0.2 before
    1.0.2g allows remote attackers to cause a denial of service (memory
    corruption) or possibly have unspecified other impact via a malformed
    DSA private key. (related to CVE-2016-0705)



    [1]: https://pypi.python.org/pypi/cryptography
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: cryptography
  vulnerable_versions:
  - "< 0.9.1"
  severity: high
  package_manager: pypi
  cwe:
  - CWE-415
  disclosed_date: 2015-06-06
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Unknown
  references:
  - https://github.com/pyca/cryptography/blob/master/CHANGELOG.rst#091---2015-06-06
  - https://github.com/pyca/cryptography/commit/87c99a503a699f5c0296636237a9208fc161cc9e
  - https://github.com/pyca/cryptography/pull/2013
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-40720
- id: snykio:pypi:cryptography:40721
  title: Denial of Service (DoS)
  description: |+
    Affected versions of [`cryptography`][1] are vulnerable to Denial of
    Service (DoS).

    The OpenSSL backend beffore 1.0.2 made use of assertions to check
    response where the tests could not trigger a failure. If a user ran
    Python with this -O flag and got an invalid response code this could
    lead to a crash.



    [1]: https://pypi.python.org/pypi/cryptography
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: cryptography
  vulnerable_versions:
  - "< 1.0.2"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-400
  disclosed_date: 2015-09-27
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Emilia KÃ¤sper
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1267548
  - https://github.com/pyca/cryptography/blob/master/CHANGELOG.rst#102---2015-09-27
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-40721
- id: snykio:pypi:cryptography:42164
  title: Authentication Bypass
  description: |
    [cryptography][1] is a package which provides cryptographic recipes and
    primitives to Python developers.

    Affected versions of this package are vulnerable to Authentication
    Bypass. The `finalize_with_tag` API did not enforce a minimum tag
    length. If a user did not validate the input length prior to passing it
    to `finalize_with_tag` an attacker could craft an invalid payload with a
    shortened tag (e.g. 1 byte) giving them a 1 in 256 chance of passing the
    MAC check.



    [1]: https://pypi.org/project/cryptography/
  affected_package: cryptography
  vulnerable_versions:
  - ">= 1.9.0 < 2.3"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2018-10903
  cwe:
  - CWE-20
  disclosed_date: 2018-07-17
  created_date: 2018-07-19
  last_modified_date: 2018-07-19
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1602931
  - https://github.com/pyca/cryptography/pull/4342/commits/688e0f673bfbf43fa898994326c6877f00ab19ef
  source_url: https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-42164
