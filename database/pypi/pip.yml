---
- id: ossindex:pypi:pip:355381
  title: "[CVE-2013-1629]  Improper Input Validation"
  description: pip before 1.3 uses HTTP to retrieve packages from the PyPI repository,
    and does not perform integrity checks on package contents, which allows man-in-the-middle
    attackers to execute arbitrary code via a crafted response to a "pip install"
    operation.
  affected_package: pip
  vulnerable_versions:
  - '1.0'
  - 1.0.1
  - 1.0.2
  - '1.1'
  - '1.2'
  - 1.2.1
  package_manager: pypi
  cve:
  - CVE-2013-1629
  disclosed_date: 2013-08-06
  created_date: 2013-08-06
  last_modified_date: 2017-04-12
  credit:
  - OSSIndex
  references:
  - http://www.pip-installer.org/en/latest/installing.html
  - http://www.pip-installer.org/en/latest/news.html#changelog
  - http://www.reddit.com/r/Python/comments/17rfh7/warning_dont_use_pip_in_an_untrusted_network_a/
  - https://bugzilla.redhat.com/show_bug.cgi?id=968059
  - https://github.com/pypa/pip/issues/425
  - https://github.com/pypa/pip/pull/791/files
  source_url: https://ossindex.net/resource/package/8401160711/vulnerabilities
- id: ossindex:pypi:pip:355603
  title: '[CVE-2013-1888]  Improper Link Resolution Before File Access ("Link Following")'
  description: pip before 1.3 allows local users to overwrite arbitrary files via
    a symlink attack on a file in the /tmp/pip-build temporary directory.
  affected_package: pip
  vulnerable_versions:
  - '1.0'
  - 1.0.1
  - 1.0.2
  - '1.1'
  - '1.2'
  - 1.2.1
  package_manager: pypi
  cve:
  - CVE-2013-1888
  disclosed_date: 2013-08-17
  created_date: 2013-08-17
  last_modified_date: 2017-04-12
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105952.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2013-May/105989.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2013-May/106311.html
  - http://www.openwall.com/lists/oss-security/2013/03/22/10
  - https://github.com/pypa/pip/issues/725
  - https://github.com/pypa/pip/pull/734/files
  - https://github.com/pypa/pip/pull/780/files
  source_url: https://ossindex.net/resource/package/8401160711/vulnerabilities
- id: ossindex:pypi:pip:8396560457
  title: "[CVE-2014-8991]  Permissions, Privileges, and Access Controls"
  description: pip 1.3 through 1.5.6 allows local users to cause a denial of service
    (prevention of package installation) by creating a /tmp/pip-build-* file for another
    user.
  affected_package: pip
  vulnerable_versions:
  - '1.3'
  - 1.3.1
  - '1.4'
  - 1.4.1
  - '1.5'
  - 1.5.1
  - 1.5.2
  - 1.5.3
  - 1.5.4
  - 1.5.5
  - 1.5.6
  package_manager: pypi
  cve:
  - CVE-2014-8991
  disclosed_date: 2014-11-24
  created_date: 2014-11-24
  last_modified_date: 2017-04-12
  credit:
  - OSSIndex
  references:
  - http://www.openwall.com/lists/oss-security/2014/11/19/17
  - http://www.openwall.com/lists/oss-security/2014/11/20/6
  - http://www.oracle.com/technetwork/topics/security/bulletinjul2015-2511963.html
  - http://www.securityfocus.com/bid/71209
  - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=725847
  - https://github.com/pypa/pip/pull/2122
  source_url: https://ossindex.net/resource/package/8401160711/vulnerabilities
- id: snykio:pypi:pip:40179
  title: Arbitrary Code Execution
  description: |
    [`pip`][1] is the PyPA recommended tool for installing Python packages.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. pip before 1.3 uses HTTP to retrieve packages from the PyPI
    repository, and does not perform integrity checks on package contents,
    which allows man-in-the-middle attackers to execute arbitrary code via a
    crafted response to a \"pip install\" operation.



    [1]: https://pypi.python.org/pypi/pip
  affected_package: pip
  vulnerable_versions:
  - "< 1.3"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-1629
  cwe:
  - CWE-20
  disclosed_date: 2012-01-04
  created_date: 2017-08-01
  last_modified_date: 2017-08-01
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=968059
  - https://github.com/pypa/pip/issues/425
  - https://github.com/pypa/pip/pull/791
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1629
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PIP-40179
- id: snykio:pypi:pip:40180
  title: Symlink Attack
  description: |
    [`pip`][1] is the PyPA recommended tool for installing Python packages.

    Affected versions of the package are vulnerable to Symlink attacks. pip
    before 1.3 allows local users to overwrite arbitrary files via a symlink
    attack on a file in the /tmp/pip-build temporary directory.



    [1]: https://pypi.python.org/pypi/pip
  affected_package: pip
  vulnerable_versions:
  - "< 1.3"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2013-1888
  cwe:
  - CWE-59
  disclosed_date: 2013-08-17
  created_date: 2017-08-01
  last_modified_date: 2017-08-01
  credit:
  - Unknown
  references:
  - https://github.com/pypa/pip/issues/725
  - https://github.com/pypa/pip/pull/780
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1888
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PIP-40180
- id: snykio:pypi:pip:40230
  title: Man-in-the-Middle (MitM)
  description: |
    [`pip`][1] is the PyPA recommended tool for installing Python packages.

    Affected versions of this package are vulnerable to Man-in-the-Middle
    (MitM) attacks.



    [1]: https://pypi.python.org/pypi/pip
  affected_package: pip
  vulnerable_versions:
  - "< 1.5"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-5123
  cwe:
  - CWE-300
  disclosed_date: 2013-07-29
  created_date: 2017-08-01
  last_modified_date: 2017-08-01
  credit:
  - Unknown
  references:
  - https://github.com/pypa/pip/commit/c2b799df9cd9bd9fcc124f6729d56b3180c813e8
  - https://github.com/pypa/pip/pull/1098
  - https://nvd.nist.gov/vuln/detail/CVE-2013-5123
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PIP-40230
- id: snykio:pypi:pip:40297
  title: Denial of Service (DoS)
  description: |+
    [`pip`][1] is the PyPA recommended tool for installing Python packages.

    Affected versions of the package are vulnerable to Denial of Service
    (DoS). pip 1.3 through 1.5.6 allows local users to cause a denial of
    service (prevention of package installation) by creating a
    /tmp/pip-build-\* file for another user.



    [1]: https://pypi.python.org/pypi/pip
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: pip
  vulnerable_versions:
  - ">= 1.3 < 1.6"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-8991
  cwe:
  - CWE-400
  disclosed_date: 2014-11-12
  created_date: 2017-08-01
  last_modified_date: 2017-08-01
  credit:
  - Unknown
  references:
  - https://github.com/pypa/pip/commit/043fe9f5700315d97f83609c1f59deece8f1b901
  - https://github.com/pypa/pip/pull/2122
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-8991
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PIP-40297
- id: snykio:pypi:pip:609855
  title: Directory Traversal
  description: |
    Affected versions of this package are vulnerable to Directory Traversal
    via `_download_http_url` in `_internal/download.py`. When a URL is given
    in an install command the Content-Disposition header can have `../` in a
    filename.

    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: pip
  vulnerable_versions:
  - "< 19.2"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2019-20916
  cwe:
  - CWE-22
  disclosed_date: 2020-09-06
  created_date: 2020-09-06
  last_modified_date: 2020-09-06
  credit:
  - Unknown
  references:
  - https://github.com/gzpan123/pip/commit/a4c735b14a62f9cb864533808ac63936704f2ace
  - https://github.com/pypa/pip/compare/19.1.1...19.2
  - https://github.com/pypa/pip/issues/6413
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PIP-609855
